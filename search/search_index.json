{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"git/","title":"notes","text":""},{"location":"git/#git","title":"Git","text":""},{"location":"git/#git-init","title":"git init","text":"<ul> <li><code>git init</code> \u5728\u65b0\u5efa\u6587\u4ef6\u5939\u4e0b\u8fdb\u884c\uff0c\u4f7f\u53d8\u6210\u4e00\u4e2aGit\u4ed3\u5e93</li> </ul>"},{"location":"git/#git-config","title":"git config","text":"<ul> <li><code>git config --global user.name \"name\"</code> </li> <li><code>git config --global user.email \"email\"</code></li> </ul>"},{"location":"git/#git-ssh","title":"git ssh","text":"<ul> <li><code>git remote add add origin git@github.com:xxx</code> ssh\u8ba4\u8bc1</li> <li><code>git remote -v</code> \u68c0\u67e5\u662f\u5426\u8fde\u4e0a</li> </ul>"},{"location":"git/#github-update","title":"github update","text":"<ul> <li><code>git add .</code>\u5c06\u6574\u4e2a\u4ed3\u5e93\u5185\u5bb9\u4e0a\u4f20\u81f3\u6682\u5b58\u533a</li> <li><code>git status</code> \u53ef\u4ee5\u770b\u770b\u4f60\u8981\u4e0a\u4f20\u7684\u9700\u8981\u4fee\u6539\u7684\u662f\u5426\u6b63\u786e</li> <li><code>git commit -m \"xxx\"</code> \u8981\u8ddf\u4e0a\u66f4\u65b0\u7406\u7531</li> <li><code>git push -u origin master</code>\u4f7f\u7528\u7a7a\u4ed3\u5e93\uff0c\u6216\u8005<code>git push origin master</code>\u5f53\u4ed3\u5e93\u975e\u7a7a</li> </ul>"},{"location":"git/#git-clone","title":"git clone","text":"<ul> <li><code>git clone xxx</code> </li> </ul>"},{"location":"git/#ssh-22-connection-time-out","title":"ssh \u7aef\u53e3 22 connection time out","text":"<p>\u6362\u7aef\u53e3443\uff0c\u5177\u4f53\u64cd\u4f5c\uff1a</p> <pre><code>$ git clone git@github.com:xxxxx/xxxx.git my-awesome-proj\nCloning into 'my-awesome-proj'...\nssh: connect to host github.com port 22: Connection timed out\nfatal: Could not read from remote repository.\n\n$ # This should also timeout\n$ ssh -T git@github.com\nssh: connect to host github.com port 22: Connection timed out\n\n$ # but this might work\n$ ssh -T -p 443 git@ssh.github.com\nHi xxxx! You've successfully authenticated, but GitHub does not provide shell access.\n$ # Override SSH settings\n$ vim ~/.ssh/config\n$ # Add section below to it\nHost github.com\n  Hostname ssh.github.com\n  Port 443\n$ ssh -T git@github.com\nHi xxxxx! You've successfully authenticated, but GitHub does not\nprovide shell access.\n\n$ git clone git@github.com:xxxxxx/xxxxx.git my-awesome-proj\nCloning into 'my-awesome-proj'...\nremote: Enumerating objects: 15, done.\nremote: Counting objects: 100% (15/15), done.\nremote: Compressing objects: 100% (14/14), done.\nremote: Total 15 (delta 0), reused 15 (delta 0), pack-reused 0\nReceiving objects: 100% (15/15), 22.90 KiB | 4.58 MiB/s, done.\n</code></pre>"},{"location":"git/#zshmkdocscommand-not-found","title":"zsh\u4e2d\u8fd0\u884cmkdocs\u62a5\u9519<code>command not found</code>","text":"<p>\u8bbe\u7f6ealias</p> <ul> <li>ubuntu <code>bash</code><ul> <li></li> </ul> </li> <li><code>chsh -s /bin/bash</code></li> <li>\u5bc6\u7801\uff1a**</li> <li>\u6253\u5f00\u4e00\u4e2a\u65b0\u7684ubuntu\u7a97\u53e3\uff0c\u8f93\u5165<code>whereis mkdocs</code></li> <li></li> <li>\u590d\u5236\u8def\u5f84</li> <li>\u56de\u5230\u6700\u521d\u7684\u7a97\u53e3\uff08zsh\uff09\u4e2d\u8f93\u5165</li> <li> ##\u5728zsh\u4e2d\u6dfb\u52a0\u8def\u5f84\u8bbe\u7f6e\u522b\u540d</li> <li>\u8fd4\u56de\u5230zsh\u7684bash\u91cc\u9762\uff1a<code>chsh -s /bin/zsh</code></li> </ul> <p>\u6ce8\u610f\u8fd9\u662f\u5355\u6b21\u7ec8\u7aef\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u6b21\u6253\u5f00ubuntu\u8fd0\u884cmkdocs\u7684\u65f6\u5019\u90fd\u9700\u8981\u91cd\u65b0\u4e00\u6b21\u8bbe\u7f6e\u522b\u540d\u3002</p>"},{"location":"%E4%BF%A1%E5%AE%89%E5%8E%9F/","title":"\u4fe1\u606f\u5b89\u5168\u539f\u7406","text":""},{"location":"%E4%BF%A1%E5%AE%89%E5%8E%9F/#_1","title":"\u8fd9\u91cc\u53ea\u80fd\u5199\u4e00\u4e9b\u91cd\u8981\u7684\u70b9\u5b50\u548c\u6982\u5ff5","text":"<ul> <li>The Kerckhoffs' Principle \u79d1\u5207\u592b\u539f\u5219\uff1a\u5bc6\u7801\u5b66\u4ece\u7ecf\u9a8c\u8f6c\u4e3a\u79d1\u5b66</li> <li>\u589e\u5f3a\u5b89\u5168\u6027\uff1a\u51e1\u662f\u957f\u65f6\u95f4\u4e0d\u6539\u53d8\u7684\u4e1c\u897f\uff0c\u90fd\u4f1a\u88abdisclosed</li> <li>\u52a0\u5bc6\u7b97\u6cd5\u4e0d\u5177\u6709\u4fdd\u5bc6\u6027\uff0c\u5b89\u5168\u6027\u53ea\u4f9d\u8d56\u4e8e\u5bc6\u94a5\u7684\u4fdd\u5bc6\u6027</li> <li> <p>\u5bc6\u7801\u7684\u5f3a\u5ea6\u5fc5\u987b\u5728\u5bf9\u624b\u5df2\u77e5\u7b97\u6cd5\u7684\u524d\u63d0\u4e0b\u8fdb\u884c\u5b9a\u4e49</p> </li> <li> <p>Public Key Cipher \u516c\u94a5\u5bc6\u7801\u5b66</p> </li> <li>\u5728\u53cc\u65b9\u4e0d\u5206\u4eab\u4efb\u4f55\u5bc6\u94a5\u7684\u60c5\u51b5\u4e0b\u4ea4\u6362\u5927\u91cf\u4fe1\u606f</li> <li> <p>\u7b97\u6cd5\uff1aRSA</p> </li> <li> <p>\u8ba1\u7b97\u673a\u5b89\u5168\u7684\u4e09\u8981\u7d20\uff1aconfidential \u4fdd\u5bc6\u6027\u3001integrity \u5b8c\u6574\u6027\u3001availablity \u53ef\u7528\u6027\u3001authentic \u771f\u5b9e\u6027</p> </li> <li> <p>\u8ba1\u7b97\u673a\u5b89\u5168\u6982\u5ff5\uff1aassets\uff0cthreat\uff0cvulnerable\uff0crisk</p> </li> <li> <p>\u5b89\u5168\u653b\u51fb\u7c7b\u578b</p> </li> <li>Interruption \u4e2d\u65ad\uff1a\u4f7f\u7cfb\u7edf\u6bc1\u574f\u6216\u4e0d\u53ef\u7528\uff1b\u653b\u51fb\u201c\u53ef\u7528\u6027\u201d\uff1b\u6613\u68c0\u6d4b<ul> <li>\u4e2d\u65ad\u65b9\u5f0f\uff1a\u786c\u4ef6\u635f\u574f\u3001\u4f20\u8f93\u94fe\u635f\u574f\u3001\u5f15\u5165\u566a\u58f0\u3001\u6467\u6bc1\u8def\u7531\u3001DOS \u653b\u51fb</li> </ul> </li> <li>Intereption \u622a\u65ad\uff1a\u653b\u51fb\u201c\u4fdd\u5bc6\u6027\u201d\uff0c\u672a\u6388\u6743\u7528\u6237\u83b7\u53d6\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\uff0c\u96be\u4ee5\u68c0\u6d4b\uff0c\u65e0\u6cd5\u5b8c\u5168\u907f\u514d<ul> <li>\u622a\u53d6\u65b9\u5f0f\uff1a\u7a83\u542c\uff08eavesdropping\uff09\u3001\u94fe\u8def\u76d1\u63a7\uff08link monitoring\uff09\u3001\u6293\u5305\u3001\u9ed1\u5165</li> </ul> </li> <li>Modification \u4fee\u6539\uff1a\u672a\u6388\u6743\u7528\u6237\u83b7\u53d6\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u548c\u7e82\u6539\uff0c\u653b\u51fb\u201c\u5b8c\u6574\u6027\u201d<ul> <li>\u4fee\u6539\u65b9\u5f0f\uff1a\u4fee\u6539\u6570\u636e\u5e93\u8bb0\u5f55\u3001\u9ed1\u5165\u3001\u901a\u4fe1\u5ef6\u8fdf\u3001\u4fee\u6539\u786c\u4ef6</li> <li>\u901a\u8fc7\u6570\u5b57\u6c34\u5370\u548c\u5176\u4ed6\u6280\u672f\u53ef\u4ee5\u907f\u514d</li> </ul> </li> <li>Fabrication \u4f2a\u9020\uff1a\u672a\u6388\u6743\u7528\u6237\u5411\u7cfb\u7edf\u4e2d\u63d2\u5165\u865a\u5047\u5b9e\u4f53\u5e76\u4f2a\u88c5\u81ea\u5df1\u4e3a\u6388\u6743\u7528\u6237\uff0c\u653b\u51fb\u201c\u771f\u5b9e\u6027\u201d<ul> <li>\u4f2a\u9020\u65b9\u5f0f\uff1a\u5411\u6570\u636e\u5e93\u63d2\u5165\u8bb0\u5f55\u3001\u4f2a\u9020 IP\u3001\u9493\u9c7c</li> </ul> </li> <li> <p>\u5b89\u5168\u653b\u51fb\u7c7b\u578b\uff1a</p> <ul> <li>\u88ab\u52a8\u653b\u51fb\uff1a\u76ee\u6807\u622a\u53d6\uff0c\u96be\u4ee5\u63a2\u6d4b\uff0c\u9884\u9632\u6bd4\u63a2\u6d4b\u66f4\u6709\u6548</li> <li>\u4e3b\u52a8\u653b\u51fb\uff1a\u76ee\u6807\u4e2d\u65ad\u3001\u4fee\u6539\u548c\u4f2a\u9020\uff0c\u6613\u63a2\u6d4b\uff0c\u96be\u4ee5\u9884\u9632\uff0c\u53ef\u4ee5\u4ece\u653b\u51fb\u4e2d\u6062\u590d</li> </ul> </li> <li> <p>\u5bf9\u6297\u5b89\u5168\u5a01\u80c1</p> </li> <li> <p>\u76ee\u6807\uff1a\u963b\u6b62\u3001\u68c0\u6d4b\u3001\u6062\u590d</p> </li> <li>\u5b89\u5168\u670d\u52a1\uff1a\u8ba4\u8bc1\u3001\u8bbf\u95ee\u63a7\u5236\u3001\u6570\u636e\u4fdd\u5bc6\u6027\uff08\u9632\u6b62\u6570\u636e\u7a83\u542c\uff09\u3001\u6570\u636e\u5b8c\u6574\u6027\uff08\u786e\u4fdd\u53d1\u9001\u5230\u8ba4\u8bc1\u7528\u6237\u672a\u7ecf\u4fee\u6539\uff09\u3001\u4e0d\u53ef\u62d2\uff08\u963b\u6b62\u6765\u81ea\u4efb\u4f55\u5b9e\u4f53\u7684\u901a\u4fe1\u62d2\u7edd\uff09\u3001\u53ef\u7528\u6027\uff08\u4fdd\u8bc1\u670d\u52a1\u81ea\u8eab\u7684\u53ef\u7528\u6027\uff09</li> <li> <p>\u4eba\u7684\u95ee\u9898\u662f\u5b89\u5168\u95ee\u9898\u7684\u4e3b\u8981\u6765\u6e90</p> </li> <li> <p>\u5bc6\u7801\u5b66\u6982\u5ff5</p> </li> </ul> plaintext P = D(C) \u660e\u6587 Ciphertext C = E(P) \u5bc6\u6587 encryption E( ) \u52a0\u5bc6\u7b97\u6cd5 decryption D( ) \u89e3\u5bc6\u7b97\u6cd5 substitution \u7f6e\u6362 transposition \u4f4d\u79fb public key \u516c\u94a5 private key \u5bc6\u94a5 <ul> <li> <p>\u653b\u51fb\u8005\u751f\u6210\u81ea\u5df1\u7684\u5bc6\u94a5\u5bf9\uff0c\u653b\u51fb\u8005\u5192\u5145 B \u544a\u8bc9 A \u81ea\u5df1\u7684\u65b0\u516c\u94a5\uff0c\u6b64\u540e\u653b\u51fb\u8005\u5c31\u53ef\u4ee5\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u89e3\u5bc6\u4e86\uff08\u7535\u5b50\u7b7e\u540d\u89e3\u51b3\uff09</p> </li> <li> <p>\u5bf9\u79f0\u5bc6\u7801\u5b66Symmetric Key Ciphers\u4e0e\u975e\u5bf9\u79f0\u5bc6\u7801\u5b66Asymmetric Key Ciphers</p> </li> <li> <p>\u5bf9\u79f0\u5bc6\u7801\u5b66\u4e3b\u8981\u662f\u7f6e\u6362\u548c\u4f4d\u79fb\uff0c\u975e\u5bf9\u79f0\u5bc6\u7801\u5b66\u4e3b\u8981\u662f\u4e00\u5bf9\u516c\u94a5\u548c\u5bc6\u94a5\uff0c\u516c\u94a5\u516c\u5f00\u7528\u6765\u52a0\u5bc6\uff0c\u5bc6\u94a5\u4fdd\u5bc6\u7528\u6765\u89e3\u5bc6\u3002</p> </li> <li>\u5bf9\u79f0\u5bc6\u7801\u5b66\u5feb\u4e14\u4fbf\u5b9c\uff0c\u7f3a\u70b9\u662f\u5bc6\u94a5\u5206\u914d\u95ee\u9898\uff0c\u975e\u5bf9\u79f0\u5bc6\u7801\u5b66\u89e3\u51b3\u5bc6\u94a5\u5206\u914d\u95ee\u9898\uff0c\u4f46\u8d35\u4e14\u6162</li> <li>\u5728\u751f\u4ea7\u751f\u6d3b\u4e2d\u4f7f\u7528\u516c\u94a5\u5bc6\u7801\u5b66\u6765\u8fdb\u884c\u5bc6\u94a5\u4ea4\u6362\uff0c\u4f7f\u7528\u5bf9\u79f0\u5bc6\u7801\u5b66\u6765\u8fdb\u884c\u52a0\u5bc6\u89e3\u5bc6</li> <li> <p>\u4e24\u4e2a\u8bef\u89e3\uff1a</p> <ul> <li>\u516c\u94a5\u52a0\u5bc6\u66f4\u5b89\u5168x\u3002\u4e24\u8005\u90fd\u771f\u6b63\u4f9d\u8d56\u4e8e\u5bc6\u94a5\u7684\u957f\u5ea6\u548c\u89e3\u5bc6\u7684\u8ba1\u7b97\u91cf\uff0c\u4e0d\u80fd\u6bd4\u3002</li> <li>\u516c\u94a5\u52a0\u5bc6\u4f7f\u5e38\u89c4\u52a0\u5bc6\u8fc7\u65f6x\u3002\u5b9e\u9645\u4e2d\u56e0\u4e3a\u516c\u94a5\u52a0\u5bc6\u5f00\u9500\u8f83\u5927\uff0c\u56e0\u6b64\u66f4\u591a\u7684\u7528\u4e8e\u5bc6\u94a5\u7ba1\u7406\u548c\u6570\u5b57\u7b7e\u540d\u800c\u975e\u76f4\u63a5\u7684\u52a0\u5bc6\u89e3\u5bc6\u3002</li> </ul> </li> <li> <p>Symmetric Key Ciphers \u5bf9\u79f0\u5bc6\u94a5\u52a0\u5bc6\u7b97\u6cd5\uff08\u5171\u4eab/\u4fdd\u5bc6\u5bc6\u94a5\u52a0\u5bc6\u7b97\u6cd5\uff09</p> </li> <li> <p>block cipher \u5757\u52a0\u5bc6\uff1a\u5c06\u660e\u6587\u5212\u5206\u4e3a n \u4e2a\u5757\uff0c\u6bcf\u5757\u5355\u72ec\u52a0\u5bc6\uff0c\u51e0\u5757\u4e4b\u95f4\u4e92\u76f8\u65e0\u5173\u7cfb\uff0c\u52a0\u5bc6\u7ed3\u679c\u662f\u5173\u4e8en\u8f93\u5165bits\u548ck\u5bc6\u94a5bits\u7684\u51fd\u6570\u3002</p> </li> <li> <p>Feistal Cipher Structure\uff1a\u4f7f\u7528\u5757\u52a0\u5bc6</p> <ul> <li>Diffusion \u6269\u6563\uff1a\u4f7f\u5bc6\u6587\u7684\u7edf\u8ba1\u7279\u5f81\u4e0e\u660e\u6587\u95f4\u7684\u5173\u7cfb\u5c3d\u91cf\u590d\u6742</li> <li>Confusion \u6270\u4e71\uff1a\u4f7f\u5bc6\u6587\u7684\u7edf\u8ba1\u7279\u5f81\u4e0e\u5bc6\u94a5\u95f4\u7684\u5173\u7cfb\u5c3d\u91cf\u590d\u6742</li> </ul> <p></p> <ul> <li>\u6269\u6563\uff1a\u8fed\u4ee3\u4ea4\u6362\u5de6\u53f3\u4e24\u534a\uff1b\u6270\u4e71\uff1a\u66f4\u5927\u7684block\u3001\u5bc6\u94a5\u3001\u8f6e\u6570\u3001\u751f\u6210\u7b97\u6cd5\u590d\u6742\u5ea6\u3001round function\u590d\u6742\u5ea6</li> </ul> </li> <li> <p>DES \u7b97\u6cd5</p> <ul> <li>\u7528 64bit \u52a0\u5bc6\uff0c\u7528 56bit \u7684\u5bc6\u94a5</li> <li>\u7279\u70b9</li> <li>strong avalanche effect \u96ea\u5d29\u6548\u5e94\uff0c\u8f93\u51fa\u53d7\u8f93\u5165\u7684\u5f71\u54cd\u5de8\u5927</li> <li>\u53ea\u80fd\u7528\u66b4\u529b\u7834\u89e3\u653b\u51fb</li> <li>\u5728\u4e92\u8054\u7f51\u65f6\u4ee356bit\u7684\u5bc6\u94a5\u4e0d\u591f\u5b89\u5168</li> <li>Triple DES</li> <li>\u52a0\u5bc6K1\uff0c\u89e3\u5bc6K2\uff0c\u52a0\u5bc6K3</li> <li>C = E[D[E[P]]]</li> <li>\u4e09\u6b21\u540ekey=56*3=168bit size</li> <li>\u8ba9 K1=K2 \u6216 K2=K3 \uff0c\u7b49\u4ef7\u4e8e DES \u7b97\u6cd5</li> </ul> </li> <li> <p>AES \u7b97\u6cd5</p> <ul> <li>\u5757\u5927\u5c0f 128bits\uff0c\u5bc6\u94a5\u957f\u5ea6 128/192/256bits</li> <li>\u514d\u75ab\u6240\u6709\u5df2\u77e5\u653b\u51fbimmune to all known attacks</li> <li>\u5728\u6240\u6709\u5e73\u53f0\u4e0a\u90fd\u8ba1\u7b97\u5feb</li> <li>\u8bbe\u8ba1\u7b80\u5355</li> </ul> </li> <li> <p>ECB </p> <p></p> <p>\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u731c\u6d4b\u5bf9\u5e94\u7684C\u548cP\u6765\u642d\u5efacodebook</p> </li> <li> <p>CBC </p> <p> \u7531\u4e8e\u57fa\u4e8e\u5185\u5b58\u7684\u94fe\u63a5\uff0c\u76f8\u540c\u7684\u8f93\u5165\u660e\u6587Pi=Pk\u4e0d\u4f1a\u5bfc\u81f4\u76f8\u540c\u7684\u8f93\u51fa\u4ee3\u7801   - ECB \u4e0e CBC\uff1a - ECB \u5bf9\u4e8e\u540c\u6837\u7684\u660e\u6587\u5757\u4f1a\u52a0\u5bc6\u6210\u540c\u6837\u7684\u5bc6\u6587\uff0c\u56e0\u6b64\u4e0d\u80fd\u5f88\u597d\u7684\u9690\u85cf\u6570\u636e\u6a21\u5f0f - CBC \u4e0a\u4e00\u4e2a\u5757\u7684\u7ed3\u679c\u4f1a\u5f71\u54cd\u4e0b\u4e00\u4e2a\u5feb   - stream cipher \u6d41\u52a0\u5bc6 - \u7528\u968f\u673a bit \u5e8f\u5217\u548c P \u5f02\u6216\u5f97\u5230 C   - \u5bc6\u94a5\u5206\u914d\u95ee\u9898 - \u6839\u636e\u79d1\u6258\u592b\u539f\u5219\uff0c\u5bc6\u94a5\u5341\u5206\u91cd\u8981 - \u5bf9\u79f0\u5bc6\u7801\u5b66\u8981\u6c42\u5bc6\u94a5\u5171\u4eab - \u5171\u4eab\u65b9\u6cd5\uff1a   - A\u9009\u4e00\u4e2a\uff0c\u7269\u7406\u4f20\u9001\u7ed9B   - \u7b2c\u4e09\u65b9\u9009\u62e9\u540e\u7269\u7406\u4f20\u9001\u7ed9 A \u548c B    - A\u548cB\u63d0\u524d\u5546\u91cf\u597d   - A\u548cB\u6709\u52a0\u5bc6\u8fde\u63a5\u5230C\uff0cC\u4f20\u7ed9AB\u52a0\u5bc6\u8fde\u63a5 - \u901a\u5e38\u7684\u89e3\u51b3\u65b9\u5f0f KDC - \u5bf9\u79f0\u5bc6\u7801\u5b66\u5b58\u5728\u7684\u95ee\u9898\uff1a\u5bc6\u94a5\u5206\u914d\u95ee\u9898</p> </li> <li> <p>\u516c\u94a5\u5bc6\u7801\u5b66/\u975e\u5bf9\u79f0\u5bc6\u7801\u5b66</p> </li> <li> <p>\u516c\u94a5\u5bc6\u7801\u5b66\u57fa\u4e8e\u6570\u5b66\u51fd\u6570</p> </li> <li> <p>\u6709\u4e24\u4e2a\u72ec\u7acb\u5bc6\u94a5\uff0c\u56e0\u800c\u53eb\u975e\u5bf9\u79f0\u5bc6\u7801\u5b66</p> </li> <li> <p>\u5141\u8bb8\u53cc\u65b9\u5728\u4ea4\u6362\u4fe1\u606f\u65f6\u4e0d\u5171\u4eab\u4efb\u4f55\u5bc6\u94a5\uff0c\u89e3\u51b3\u4e86\u5bc6\u94a5\u5206\u914d\u95ee\u9898</p> </li> <li> <p>\u516c\u94a5\u5bc6\u7801\u5b66\u4fdd\u8bc1\u79d8\u5bc6\u901a\u4fe1\uff0c\u89e3\u51b3\u4e86\u6570\u5b57\u7b7e\u540d\u95ee\u9898</p> </li> <li> <p>\u79d8\u5bc6\u901a\u4fe1\uff1aB \u7528 A \u7684\u516c\u94a5\u52a0\u5bc6\uff0c\u53d1\u9001\u7ed9A\uff0cA \u7528\u81ea\u5df1\u7684\u5bc6\u94a5\u89e3\u5bc6\uff1bB \u7528\u81ea\u5df1\u7684\u5bc6\u94a5\u52a0\u5bc6\uff0c\u53d1\u9001\u7ed9A\uff0c A \u7528 B \u7684\u516c\u94a5\u9a8c\u8bc1</p> </li> <li> <p>\u516c\u94a5\u5bc6\u7801\u5b66\u7684\u5173\u952e\u662f\u5bfb\u627e\u4e00\u4e2a\u5355\u5411\u51fd\u6570\uff1a\u5bb9\u6613\u8ba1\u7b97\u7ed3\u679c\u4f46\u96be\u4ee5\u53cd\u5411\u8ba1\u7b97</p> </li> <li> <p>\u516c\u94a5\u5bc6\u7801\u5b66</p> <ul> <li>DH \u7b97\u6cd5\uff1a\u539f\u6839\u548c\u79bb\u6563\u5bf9\u6570</li> </ul> <p></p> <ul> <li> <p>g \u662f p \u7684\u539f\u6839\uff0c a \u662fA \u7684\u79bb\u6563\u5bf9\u6570\uff08\u4ee5g\u4e3a\u5e95p\u4e3a\u6a21\uff09</p> </li> <li> <p>\u8ba1\u7b97\u5927\u6574\u6570\u7684\u6574\u6570\u6b21\u5e42\u6c42\u6a21\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u4f46\u53cd\u5411\u6c42\u51fa\u79bb\u6563\u5bf9\u6570\u662f\u5341\u5206\u96be\u7684</p> </li> <li> <p>a,g,p\u7684\u9009\u62e9\uff1a</p> <ul> <li>p \u5c0f\u5219\u5f88\u5bb9\u6613\u88ab\u7206\u7834</li> <li>\u4e00\u822c\u7528\u4e09\u767e\u4f4d\u7684 p\uff0c\u4e00\u767e\u4f4d\u7684 a \u548c b</li> <li>g \u4e00\u822c 2\uff0c3\uff0c5 \u90fd\u53ef\u4ee5</li> </ul> </li> <li> <p>DH \u7b97\u6cd5\u6ca1\u6709\u8ba4\u8bc1\u73af\u8282\uff0c\u5f88\u5bb9\u6613\u53d7\u5230\u4e2d\u95f4\u4eba\u653b\u51fb</p> </li> <li> <p>DH \u516c\u94a5\u5bc6\u94a5</p> <p></p> <p></p> </li> <li> <p>RSA\u7b97\u6cd5\uff1alarge primes multiplication</p> </li> <li> <p>\u5355\u5411\u51fd\u6570\uff1a\u5927\u8d28\u6570\u4e58\u6cd5\u975e\u5e38\u5bb9\u6613\uff0c\u4f46\u5927\u548c\u4e66\u7684\u8d28\u56e0\u5b50\u5206\u89e3\u5f88\u96be</p> </li> <li> <p>\u6570\u5b66\u7406\u8bba\u4f9d\u636e\uff1a</p> <ul> <li>fai(P)\uff1a1~p-1\u8303\u56f4\u5185\u80fd\u6574\u9664p\u7684\u6570\u7684\u4e2a\u6570\u3002</li> <li>\u5982\u679cp\u662f\u8d28\u6570\uff0cfai(p)=p-1</li> <li>\u5982\u679cp\u548cq\u4e92\u8d28\uff0c\u90a3\u4e48fai(pq) = fai(p)*fai(q)</li> <li> <p>\u5982\u679cp\u548cq\u90fd\u662f\u8d28\u6570\uff0c\u90a3\u4e48fai(pq) = (p-1)(q-1)</p> </li> <li> <p>\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a\u5982\u679cp\u662f\u8d28\u6570\uff0c\u5bf9\u4efb\u610fa\uff0ca^p\u2261a(mod p)\uff0ca^(p-1)\u22611(mod p), a^fai(p)\u22611(mod p)</p> </li> </ul> </li> <li> <p>\u5bc6\u94a5\u5bf9\u751f\u6210\u548c\u89e3\u5bc6\u52a0\u5bc6\u7684\u8fc7\u7a0b</p> <ul> <li>B \u751f\u6210\u5bc6\u94a5\u5bf9\uff0c\u628a\u516c\u94a5\u53d1\u9001\u7ed9 A</li> <li>\u627e\u4e24\u4e2a\u4e00\u767e\u4f4d\u4ee5\u4e0a\u7684\u5927\u8d28\u6570p,q\u76f8\u4e58\u5f97\u5927\u5408\u6570n</li> <li> <p>\u627e\u4e24\u4e2a\u6570 e,d \u6ee1\u8db3</p> <ul> <li>e\u4e0ed\u4e92\u8d28\uff0c\u5e76\u4e14\u5c0f\u4e8e(p-1)(q-1)</li> <li>e*d \u6a21 (p-1)(q-1) \u4f591</li> </ul> </li> <li> <p>\u53d1\u9001(e,n)\u4f5c\u4e3a\u516c\u94a5\uff0c\u4fdd\u7559d\u4f5c\u4e3a\u5bc6\u94a5</p> </li> <li> <p>A\u52a0\u5bc6\u660e\u6587m\u53d8\u6210c\uff0cm\u5fc5\u987b\u5c0f\u4e8en\uff0c\u4f20\u9001\u7ed9 B</p> </li> <li>\u627e\u5230 B \u7684\u516c\u94a5(e,n)\uff0c\u8ba1\u7b97c=m^e mod n</li> <li> <p>\u628ac\u53d1\u9001\u7ed9 B</p> </li> <li> <p>B \u6536\u5230c\uff0c\u89e3\u5bc6</p> </li> <li>\u4f7f\u7528\u79c1\u94a5\u8ba1\u7b97 m=c^d mod n</li> </ul> </li> <li> <p>principle</p> <ul> <li>requirements:</li> <li>n = pq, fai(n) = (p-1)(q-1)</li> <li> <p>ed \u2261 1 (mod (p-1)(q-1))</p> </li> <li> <p>encryption</p> </li> <li> <p>c = m^e mod n</p> </li> <li> <p>decryption</p> </li> <li>m = c^d mod n</li> </ul> <p></p> </li> <li> <p>examples</p> <p></p> <p></p> </li> <li> <p>\u7b97\u6cd5\u5b89\u5168\u6027</p> <ul> <li>\u653b\u51fb\u573a\u666f</li> <li>\u653b\u51fb\u8005\u53ef\u4ee5\u5f97\u5230 c, e, n\uff0c\u8981\u83b7\u5f97 m \u7684\u65b9\u5f0f\uff1a<ul> <li>\u5f97\u5230 B \u7684\u79c1\u94a5 d</li> <li>m \u662f 1 \u5230 n \u7684\u6570\u5b57\uff0c\u7206\u7834</li> <li>\u5c1d\u8bd5\u4ece e\uff0cn\u4e2d\u8ba1\u7b97\u51fa d</li> <li>\u653b\u51fb\u8005\u751f\u6210\u81ea\u5df1\u7684 \u5bc6\u94a5\u5bf9</li> <li>\u5192\u5145B \u544a\u8bc9 A \u81ea\u5df1\u7684\u65b0\u516c\u94a5\uff0c\u6b64\u540e\u653b\u51fb\u8005\u5c31\u53ef\u4ee5\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u89e3\u5bc6\u4e86\u3002</li> </ul> </li> </ul> </li> <li> <p>\u600e\u4e48\u514b\u5236</p> <ul> <li>\u5728 A \u7ed9 B \u53d1\u5bc6\u6587\u524d\u6838\u5bf9 B \u7684\u516c\u94a5</li> <li>A \u8981\u786e\u8ba4\u62ff\u5230\u7684\u65f6\u5019B \u7684\u516c\u94a5</li> <li>\u9664\u4e86B \u6ca1\u4eba\u80fd\u7ed9 A \u53d1\u9a8c\u8bc1</li> <li>\u6d88\u606f\u5b8c\u6574\u6027\u95ee\u9898</li> </ul> </li> <li> <p>A \u548c B \u5fc5\u987b\u907f\u514d B \u7684\u516c\u94a5\u88ab\u653b\u51fb\u8005\u4f2a\u9020\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u6570\u5b57\u7b7e\u540d\u3002</p> </li> </ul> </li> <li> <p>\u5bc6\u7801\u5b66\u53ef\u4ee5\u8fdb\u884c\u4e24\u8005\u4e4b\u95f4\u7684 \u79d8\u5bc6\u901a\u4fe1\uff0c\u4f46\u52a0\u5bc6\u89e3\u5bc6\u4e0d\u80fd\u9632\u6b62\u4f2a\u9020\u6b3a\u9a97(deceiving)\uff0c\u65e0\u6cd5\u505a\u8eab\u4efd\u8ba4\u8bc1</p> </li> <li> <p>digital signature \u6570\u5b57\u7b7e\u540d</p> </li> <li> <p>\u6570\u5b57\u7b7e\u540d\u7cfb\u7edf\u7684\u8981\u6c42\uff1a</p> <ul> <li>\u53ef\u4ee5\u4e0e\u7b7e\u540d\u6587\u6863\u7ed1\u5b9a</li> <li>\u63a5\u6536\u8005\u53ef\u4ee5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u5176\u4ed6\u4eba\u65e0\u6cd5\u4f2a\u9020\u7b7e\u540d</li> <li>\u7b7e\u540d\u8005\u4e0d\u53ef\u5426\u8ba4\u7b7e\u540d</li> <li>\u7b7e\u540d\u5fc5\u987b\u6709\u7b2c\u4e09\u65b9\u786e\u8ba4\u4ee5\u89e3\u51b3\u4e89\u7aef</li> <li>\u4f5c\u8005\u3001\u65f6\u95f4\u6233\u90fd\u662f\u7b7e\u540d\u7684\u5185\u5bb9</li> </ul> </li> <li> <p>\u6570\u5b57\u7b7e\u540d\u7684\u7b97\u6cd5 workflow</p> <ul> <li>\u516c\u94a5\u5bc6\u7801\u5b66\u53ef\u4ee5\u652f\u6301\u6570\u5b57\u7b7e\u540d</li> <li>A \u7528\u79c1\u94a5\u7b7e\u540d\u6587\u6863\uff0c\u53d1\u9001\u7ed9 B\uff0c B \u7528 A \u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d</li> <li>\u516c\u94a5\u5bc6\u7801\u5b66\u7b7e\u540d\u7684\u95ee\u9898\uff1a\u6587\u6863\u5f88\u957f\u7684\u65f6\u5019\u7b7e\u540d\u4e5f\u4f1a\u7279\u522b\u957f</li> </ul> </li> <li> <p>\u5355\u5411\u54c8\u5e0c\u51fd\u6570</p> <ul> <li>\u4e0d\u76f4\u63a5\u7b7e\u540d\u6587\u6863\uff0c\u5148\u8ba1\u7b97\u6587\u6863\u7684\u54c8\u5e0c\u503c\uff0c\u4efb\u4f55\u7b7e\u540d\u54c8\u5e0c\u503c</li> <li>\u5355\u9879\u54c8\u5e0c\u7b97\u6cd5\u4f7f\u4e00\u4e2a\u6587\u6863hash\u6210\u5927\u7ea6 100 \u4f4d\u7684\u8f93\u51fa</li> <li>Input:m, Output: H(m) \uff08size L)</li> <li>MD5: L = 128bits</li> <li> <p>SHA-1: L = 160bits</p> </li> <li> <p>\u8981\u6c42\uff1a\u8ba1\u7b97\u7b80\u5355\u3001\u96be\u4ee5\u9006\u5411\u8ba1\u7b97\u3001\u5f88\u6697\u53d1\u751fcollision</p> </li> <li>MD5 Algorithm</li> <li> <p>Padding</p> <ul> <li>MD5 \u5904\u7406\u957f\u5ea6\u4e3a512bits\u7684\u6bb5\uff0c\u56e0\u6b64\u8981\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6269\u5c55\u523016\u4e2a32\u4f4d</li> <li>pad\u7684\u64cd\u4f5c\u65b9\u5f0f\uff1a</li> <li>pad a bit \u201c1\u201d</li> <li>pad \u201c0\u201d \u76f4\u5230\u79bb512\u4f4d\u586b\u5145\u6ee1\u8fd8\u5dee64bit</li> <li>\u5c06\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u586b\u5145\u5230\u6700\u540e64\u4f4d</li> </ul> </li> <li> <p>Hashing</p> <ul> <li>\u521d\u59cb\u53164\u4e2a128\u4f4d\u6807\u51c6\u5e7b\u6570\uff08\u56fa\u5b9a\u503c</li> <li>\u6bcf\u4e00\u7ec4512\u4f4d\u6570\u636e\u4f5c\u4e3aM\u8f93\u5165\u5230\u7a0b\u5e8f\u4e2d\u7528\u6765\u66f4\u65b0\u56db\u4e2a\u6807\u51c6\u5e7b\u6570\uff0c\u6307\u5bfc\u7ed3\u675f\uff08\u9012\u5f52</li> <li>\u6700\u7ec8\u7ed3\u679c\u4e3a\u56db\u4e2a\u66f4\u65b0\u8fc7\u7684\u6807\u51c6\u5e7b\u6570</li> </ul> </li> <li> <p>\u5bf9 MD5 \u7684\u653b\u51fb</p> </li> <li> <p>\u539f\u8c61Preimage\uff1a\u6700\u96be\u7684\u653b\u51fb</p> <ul> <li>\u7ed9\u5b9a\u54c8\u5e0c\u503c\uff0c\u627e\u5230\u6e90\u6587\u4ef6</li> </ul> </li> <li> <p>\u7b2c\u4e8c\u539f\u8c61second-Preimage</p> <ul> <li>\u7ed9\u5b9a\u6587\u4ef6\uff0c\u627e\u51fa\u53e6\u4e00\u4e2a\u4e0e\u6e90\u6587\u4ef6\u54c8\u5e0c\u503c\u76f8\u540c\u7684\u6587\u4ef6</li> </ul> </li> <li> <p>\u78b0\u649ecollision</p> <ul> <li>\u5bfb\u627e\u4e24\u4e2a\u54c8\u5e0c\u503c\u76f8\u540c\u7684\u6587\u4ef6</li> </ul> </li> </ul> </li> <li> <p>\u5927\u6587\u4ef6\u7684\u7b7e\u540d\u8fc7\u7a0b</p> <ul> <li>\u6e90\u6587\u4ef6\u901a\u8fc7\u5355\u9879\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u54c8\u5e0c\u503c</li> <li>\u54c8\u5e0c\u503c\u901a\u8fc7 A \u7684\u79c1\u94a5\u52a0\u5bc6</li> <li>\u54c8\u5e0c\u503c\u548c\u660e\u6587\u6587\u4ef6\u4f20\u9001\u7ed9 B</li> <li>B \u7528 A \u7684\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\u5f97\u5230\u54c8\u5e0c\u503c 1</li> <li>B \u7528\u540c\u6837\u7684\u54c8\u5e0c\u51fd\u6570\u7b97\u51fa\u4f20\u6765\u7684\u660e\u6587\u6587\u4ef6\u7684\u54c8\u5e0c\u503c2</li> <li>\u5bf9\u6bd4\u54c8\u5e0c\u503c 1 \u548c 2 \u662f\u5426\u76f8\u540c</li> </ul> </li> <li> <p>MAC: Message Authentication Code\uff1a\u7528\u4e8e\u68c0\u6d4b\u5bf9\u6d88\u606f\u7684\u7e82\u6539</p> </li> <li> <p>HMAC\uff1a\u57fa\u4e8e\u54c8\u5e0c\u7684\u6d88\u606f\u8ba4\u8bc1\u7801</p> <ul> <li>\u5b9a\u4e49</li> </ul> <p></p> <ul> <li> <p>\u5f53\u4f7f\u7528\u4e0d\u540c\u54c8\u5e0c\u51fd\u6570\u7684\u65f6\u5019\u5c31\u53ef\u4ee5construct\u4e0d\u540c\u7684 HMAC \u7b97\u6cd5</p> </li> <li> <p>HMAC \u6bd4\u5355\u9879\u54c8\u5e0c\u66f4\u4e0d\u5bb9\u6613\u51fa\u73b0collision\uff0cHMAC-MD5 \u548c HMAC-SHA1\u8db3\u591f\u5b89\u5168</p> </li> </ul> </li> <li> <p>CBC-MAC\uff1acipher block chaining MAC</p> <p></p> <ul> <li>\u7b97\u6cd5\u63cf\u8ff0</li> </ul> <p></p> </li> <li> <p>MAC \u4e0e Digital Signature\u7684\u533a\u522b</p> <ul> <li>MAC</li> <li>\u53cc\u65b9\u8981\u5171\u4eab\u4e00\u4e2a\u79d8\u5bc6 MAC \u7b97\u6cd5\u7684\u5bc6\u94a5</li> <li>\u6240\u6709\u80fd\u9a8c\u8bc1\u7684\u4eba\u4e5f\u53ef\u4ee5\u751f\u6210 MAC\uff0c\u4e0d\u63d0\u4f9b\u201cundeniable\u201d\uff08\u4e0d\u53ef\u5426\u8ba4\uff09\u670d\u52a1</li> <li>\u6570\u5b57\u7b7e\u540d</li> <li>\u6536\u53d1\u53cc\u65b9\u4e0d\u9700\u8981\u5171\u4eab\u4efb\u4f55\u79d8\u5bc6\u4fe1\u606f</li> <li>\u53ef\u4ee5\u88ab\u6709\u516c\u94a5\u7684\u4efb\u4f55\u63a5\u6536\u8005\u786e\u8ba4</li> <li>\u63d0\u4f9b\u4e0d\u53ef\u5426\u8ba4\u670d\u52a1</li> <li>\u4e0d\u662f\u603b\u7528\u6570\u5b57\u7b7e\u540d\uff1f</li> <li>MAC\u5feb</li> <li>\u4e0d\u53ef\u5426\u8ba4\u670d\u52a1\u4e0d\u662f\u603b\u5fc5\u987b\u7684</li> </ul> </li> <li> <p>PGP</p> </li> <li> <p>\u591a\u5e73\u53f0\u517c\u5bb9</p> </li> <li>\u57fa\u4e8e\u5bc6\u7801\u5b89\u5168\u7b97\u6cd5</li> <li> <p>\u88ab\u5e7f\u6cdb\u4f7f\u7528\u5728\u6570\u5b57\u7b7e\u540d\u3001\u5b8c\u6574\u6027\u6821\u9a8c\u3001\u4fe1\u606f\u52a0\u5bc6\u3001\u6570\u636e\u538b\u7f29\u3001\u90ae\u4ef6\u683c\u5f0f\u517c\u5bb9</p> </li> <li> <p>Authentication \u8ba4\u8bc1\uff1a who are you</p> </li> <li> <p>\u600e\u4e48\u8ba4\u8bc1</p> </li> <li> <p>mainly discuss\uff1a</p> <ul> <li>\u8ba4\u8bc1\u6280\u672f\uff1apassword and biometric authentication\u5bc6\u7801\u548c\u751f\u7269\u7279\u5f81\u8ba4\u8bc1</li> <li>\u8ba4\u8bc1\u534f\u8bae\uff1aChallenge-Response Authentication and KERBEROS\u8d28\u8be2\u54cd\u5e94\u8eab\u4efd\u8ba4\u8bc1\u548cKERBEROS </li> </ul> </li> <li> <p>password-based authentication \u57fa\u4e8e\u5bc6\u7801\u7684\u8ba4\u8bc1</p> <ul> <li>\u7279\u70b9</li> <li>\u7cfb\u7edf\u4fdd\u5b58\u4e00\u4e2a\u7528\u6237\u548c\u7528\u6237\u5bc6\u7801\u7684\u5bf9\u5e94\u6587\u4ef6</li> <li>\u5f53\u5bc6\u7801\u4ece\u7528\u6237\u4f20\u9012\u5230\u7cfb\u7edf\u7684\u65f6\u5019\u5bb9\u6613\u88ab\u7a83\u542c</li> <li>\u7528\u6237\u548c\u5bc6\u7801\u7684\u6587\u4ef6\u5f88\u96be\u4fdd\u6301secret</li> <li> <p>\u7b80\u6613\u597d\u8bb0\u5fc6\u7684\u5bc6\u7801\u5f88\u5bb9\u6613\u88ab\u731c\u5230</p> </li> <li> <p>\u65e9\u671f\u7684 unix \u5bc6\u7801</p> </li> <li> <p>\u4f7f\u7528 DES \u4f5c\u4e3a\u54c8\u5e0c\u51fd\u6570\uff0c\u4f46\u662f\u5b58\u50a8\u5728\u4e00\u4e2a\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u8bfb\u7684\u6587\u4ef6\u91cc\uff0c\u6709\u5f88\u5927\u9690\u60a3</p> </li> <li> <p>dictionary attack \u5b57\u5178\u653b\u51fb</p> </li> <li>\u53ef\u884c\u6027\uff1a\u5f88\u591a\u5bc6\u7801\u90fd\u6765\u81ea\u4e8e\u4e00\u4e2a\u5c0f\u5b57\u5178 Password file/etc/passwd is world-readable</li> <li> <p>\u7b97\u51fa\u5b57\u5178\u91cc\u6bcf\u4e00\u4e2a\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u5bf9\u7167\u5bc6\u7801\u6587\u4ef6\u91cc\u6709\u6ca1\u6709\u8fd9\u4e2a\u54c8\u5e0c\u503c</p> </li> <li> <p>Upgrading Phase1\uff1aSalting\u52a0\u76d0</p> </li> <li>\u5411\u7528\u6237\u5bc6\u7801\u6dfb\u52a0\u968f\u673a\u7684\u76d0\uff0c\u518d\u505a\u54c8\u5e0c\u5b58\u50a8\u8d77\u6765</li> <li>\u6ca1\u52a0\u76d0\u7684\u65f6\u5019\uff0c\u4e00\u8f6e\u5b57\u5178\u5c31\u80fd\u641e\u5b9a\u6240\u6709\u5bc6\u7801\u6761\u76ee</li> <li> <p>\u52a0\u76d0\u540e\uff0c\u4e00\u8f6e\u5b57\u5178\u53ea\u80fd\u641e\u5b9a\u4e00\u4e2a\u5bc6\u7801\u6761\u76ee\uff0c\u653b\u51fb\u8005\u5fc5\u987b\u5bf9\u4e00\u4e2a\u5bc6\u7801\u6761\u76ee\u5c1d\u8bd5\u5168\u90e8\u7684\u76d0\uff08\u4ecd\u53ef\u4ee5\u8fdb\u884c\u5b57\u5178\u653b\u51fb\uff01\uff09</p> </li> <li> <p>Upgrading Phase2: shadow password\u9690\u5bc6\u7801</p> </li> <li>\u54c8\u5e0c\u5bc6\u7801\u4e0d\u5b58\u50a8\u5728\u4e4b\u524d\u7684\u6587\u4ef6\u91cc\uff0c\u5728etc/shadow \u6587\u4ef6\u91cc\uff0c\u53ea\u6709 system administrator(root) \u7528\u6237\u53ef\u4ee5\u8bbf\u95ee</li> <li> <p>\u6dfb\u52a0\u4e86\u5bc6\u7801\u7684\u6709\u6548\u65e5\u671f</p> </li> <li> <p>\u4fdd\u62a4\u5bc6\u7801\u7684\u65b9\u5f0f</p> </li> <li>\u91c7\u7528\u6570\u5b57+\u5b57\u7b26\uff0c\u4f7f\u7528\u968f\u673a\u5bc6\u7801</li> <li>\u5bc6\u7801\u5b89\u5168\u6027\u68c0\u67e5</li> <li>\u9632\u6b62\u7279\u6d1b\u4f0a\uff0c\u4f7f\u7528\u5b89\u5168\u767b\u5f55\u5de5\u5177</li> <li>\u4e0d\u540c\u7f51\u7ad9\u4e0a\u4f7f\u7528\u4e0d\u540c\u7684\u7ad9\u70b9\uff0c\u53ef\u4ee5\u540c\u7c7b\u7f51\u7ad9\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u7801</li> <li>\u4e0d\u8981\u76f8\u4fe1\u4efb\u4f55\u7b2c\u4e09\u65b9\u7684\u8bb0\u4f4f\u5bc6\u7801\u8f6f\u4ef6</li> <li> <p>\u4e0d\u8981\u518d\u516c\u5171\u573a\u6240\u548c\u4e0d\u53ef\u4fe1\u7684\u7f51\u8def\u73af\u5883\u4e0b\u767b\u5f55\u91cd\u8981\u8d26\u53f7</p> </li> <li> <p>\u5176\u4ed6\u6539\u8fdb\u65b9\u5f0f</p> </li> <li>\u52a0\u5165\u751f\u7269\u8bc6\u522b\uff0c\u6572\u51fb\u952e\u76d8\u7684\u529b\u5ea6\u7b49</li> <li>\u56fe\u5f62\u5bc6\u7801\uff0c\u589e\u52a0\u53ef\u8bb0\u5fc6\u7684\u5bc6\u7801\u957f\u5ea6</li> </ul> </li> <li> <p>\u751f\u7269\u8ba4\u8bc1</p> <ul> <li>\u7269\u7406\u7279\u5f81\uff1a</li> <li> <p>\u624b\u5199\u8bc6\u522b\u3001\u6307\u7eb9\u8ba4\u8bc1\u3001\u9762\u90e8\u8bc6\u522b\u3001DNA</p> </li> <li> <p>\u4e0d\u4f1a\u88ab\u5077\u7a83\u3001\u4e22\u5931\u6216\u9057\u5fd8</p> </li> <li>\u7f3a\u70b9</li> <li> <p>\u8bbe\u5907\u82b1\u8d39\u9ad8\u3001\u5bf9\u6bd4\u7b97\u6cd5\u7684\u5b89\u5168\u6027\u3001\u653f\u7b56\u95ee\u9898\u3001\u4f2a\u9020\u95ee\u9898</p> </li> <li> <p>\u9519\u4f4d\u7387</p> </li> <li>False accept rate\uff1a\u63a5\u53d7\u4e86\u672a\u6388\u6743\u7528\u6237</li> <li>False reject rate\uff1a\u62d2\u7edd\u4e86\u6388\u6743\u7528\u6237</li> <li> <p>\u589e\u52a0\u63a5\u53d7\u9608\u503c\u4f1a\u589e\u52a0\u9519\u8bef\u63a5\u53d7\u7387\u5e76\u964d\u4f4e\u9519\u8bef\u62d2\u7edd\u7387</p> <ul> <li>\u5982\u679c\u9519\u8bef\u63a5\u53d7\u7387\u548c\u9519\u8bef\u62d2\u7edd\u7387\u76f8\u7b49\uff0c\u53eb\u505a\u7b49\u9519\u8bef\u7387equal error rate</li> <li>\u4e0d\u540c\u60c5\u51b5\u4e0b\u5bf9\u4e24\u8005\u7684\u6982\u7387\u6709\u4e0d\u540c\u8981\u6c42</li> </ul> </li> <li> <p>\u751f\u7269\u4fe1\u606f\u7684\u98ce\u9669</p> </li> <li>\u4fe1\u606f\u8bb0\u5f55\u53ef\u80fd\u4e0d\u7b26\u5408\u8981\u6c42</li> <li>\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u7559\u5b58\u7684\u8bb0\u5f55\u8fdb\u884c\u653b\u51fb\uff0c\u6bd4\u5982\u522b\u5904\u641e\u6765\u7684\u65e7\u6307\u7eb9</li> </ul> </li> <li> <p>\u7f51\u7edc\u8ba4\u8bc1 network authentication</p> <ul> <li> <p>challenge response authentication</p> </li> <li> <p>challenge code\uff1aRa number R will be used once in a lifetime</p> </li> </ul> <p></p> <ul> <li> <p>KERBERROS</p> </li> <li> <p>\u5728\u5206\u5e03\u5f0f\u7684\u60c5\u51b5\u4e0b\uff0c\u670d\u52a1\u5668\u9650\u5236\u6388\u6743\u7528\u6237\u7684\u8bbf\u95ee\uff0c\u533a\u5206\u6bcf\u79cd\u7528\u6237\u9700\u8981\u7684\u670d\u52a1</p> </li> <li> <p>V4</p> <ul> <li>\u6982\u5ff5</li> </ul> C client AS Authentication Server(stores user\u2019s password) TGS Ticket Granting Server V Application Server IDc User's Identifirer on C IDv Identifier of V Pc Password on C ADc Network Address of C Kv Shared key between AS and V <ul> <li> <p>the simplest     </p> <ul> <li>problem</li> <li>\u7528\u6237\u9700\u8981\u4e0d\u505c\u5730\u8f93\u5165password<ul> <li>\u4e00\u4e2a\u670d\u52a1\u5668\u5728\u4e0d\u540c\u7684\u65f6\u5019\u9700\u8981\u4e0d\u540c\u7684\u65b0\u7684ticket</li> <li>\u8981\u6c42\u4e00\u4e2a\u65b0\u7684\u670d\u52a1\u5668\u5c31\u9700\u8981\u65b0\u7684ticket</li> </ul> </li> <li>\u5bc6\u7801\u7528\u660e\u6587\u4f20\u8f93\uff0c\u5bb9\u6613\u88ab\u5077</li> <li>\u4e00\u65e6ticket\u88ab\u5077\uff0c\u5c31\u53ef\u4ee5\u91cd\u653e\u653b\u51fb</li> </ul> </li> <li> <p>improved</p> </li> <li> <p>\u6dfb\u52a0\u4e86 TGS\uff1aticket granting server\uff08\u6388\u6743\uff09</p> </li> </ul> <p></p> <ul> <li>improvement<ul> <li>\u4e0d\u9700\u8981\u7528\u660e\u6587\u4f20\u8f93\u5bc6\u7801</li> <li>\u51cf\u5c11\u5bc6\u7801\u91cd\u65b0\u8f93\u5165\u7684\u6b21\u6570</li> <li>\u901a\u8fc7\u8bbe\u7f6e\u5bff\u547d\u6765\u51cf\u5c11\u5145\u653e\u653b\u51fb\u7684\u5a01\u80c1</li> </ul> </li> <li> <p>problem</p> <ul> <li>\u5bff\u547d\u8bbe\u7f6e\uff1a\u592a\u77ed\u4f1a\u589e\u52a0\u5bc6\u7801\u91cd\u65b0\u8f93\u5165\u7684\u6b21\u6570\uff1b\u592a\u957f\u4f1a\u589e\u52a0\u91cd\u653e\u653b\u51fb\u7684\u5371\u9669</li> </ul> </li> <li> <p>Final</p> </li> </ul> <p></p> <ul> <li> <p>Analysis</p> </li> <li> <p>ticket\uff1aAS\u7684\u8ba4\u8bc1\u7ed3\u679c\u548c\u4f1a\u8bddkey\u53ef\u5b89\u5168\u4f20\u9012\uff0cticket\u91cd\u590d\u4f7f\u7528\u964d\u4f4e\u6210\u672c</p> </li> <li>TGS\uff1a\u51cf\u5c11password\u7684\u4f7f\u7528\u9891\u7387\uff0c\u51cf\u8f7bAS\u7684\u8d1f\u62c5\uff0c\u63d0\u9ad8\u6548\u7387</li> <li> <p>Timestamp\uff1a\u9632\u6b62\u91cd\u653e\u653b\u51fb</p> </li> <li> <p>weakness\uff1a</p> </li> <li> <p>\u65f6\u95f4\u4f9d\u8d56\uff1a\u65f6\u95f4\u540c\u6b65\u56f0\u96be\uff0c\u4e14\u653b\u51fb\u8005\u53ef\u4ee5\u8bef\u5bfc\u7cfb\u7edf\u65f6\u95f4</p> </li> <li>\u731c\u6d4b\u653b\u51fb\uff1a\u5bb9\u6613\u56e0\u5f31\u53e3\u4ee4\u53d7\u5230\u653b\u51fb\uff0c\u4e0d\u63d0\u4f9b\u5bf9\u5bc6\u7801\u8fdb\u4e00\u6b65\u4fdd\u62a4</li> <li>\u5bc6\u94a5\u4e0d\u80fd\u5b58\u50a8\u5728typical computer system</li> </ul> </li> </ul> </li> <li> <p>authorization \u6388\u6743</p> </li> <li> <p>\u6388\u6743 = \u63a7\u5236\u8bbf\u95ee access control</p> </li> <li> <p>\u6388\u6743\uff1a</p> <ul> <li>\u8ba4\u8bc1\u63d0\u4f9b\u57fa\u672c\u7684\u6388\u6743</li> <li>\u8ba4\u8bc1\u63d0\u4f9b\u57fa\u672c\u7684\u6821\u9a8c\u7528\u6237\u8eab\u4efd\u7684\u529f\u80fd</li> <li>\u6388\u6743\u518d\u66f4\u6df1\u7684\u63a7\u5236\u4e2d\u88ab\u9700\u8981</li> </ul> </li> <li> <p>\u6388\u6743\u7684\u4e09\u8981\u7d20</p> <ul> <li>subject\u4e3b\u4f53\uff1a\u53ef\u4ee5\u8bbf\u95ee\u5ba2\u6237\u7684\u5b9e\u4f53\uff0c\u5fc5\u987b\u7528\u6237\u548c\u8fdb\u7a0b\u7b49</li> <li>object\u5bf9\u8c61\uff1a\u53ef\u4ee5\u88ab\u8bbf\u95ee\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u6587\u4ef6\u3001\u7a0b\u5e8f\u3001\u6570\u636e</li> <li>privilege\u6743\u9650\uff1a\u4e3b\u4f53\u53ef\u4ee5\u8bbf\u95ee\u5ba2\u4f53\u7684\u65b9\u6cd5\uff0c\u5305\u62ec\u8bfb\u5199\u5220\u9664\u8fd0\u884c</li> </ul> </li> <li> <p>\u5b89\u5168\u8bbf\u95ee\u63a7\u5236</p> <ul> <li>\u4e3b\u8981\u529f\u80fd\uff1a\u6388\u6743authorization\uff0c\u64a4\u9500revoke\uff0c\u68c0\u67e5checkr</li> <li>\u4e24\u4e2a\u65b9\u9762\uff1a\u5236\u5b9a\u653f\u7b56make policy\u548c\u6267\u884c\u653f\u7b56execute policy</li> </ul> </li> <li> <p>Secure Access Control Model</p> <ul> <li> <p>DAC: Discretionary Access Control \u81ea\u4e3b\u8bbf\u95ee\u63a7\u5236</p> </li> <li> <p>\u7279\u70b9</p> <ul> <li>\u6839\u636e\u4e3b\u4f53\u7684\u8eab\u4efd\u548c\u8bbf\u95ee\u6743\u9650\u505a\u51fa\u51b3\u5b9a</li> <li>\u81ea\u4e3b\u9009\u62e9\u610f\u5473\u7740\u5177\u6709\u67d0\u79cd\u7279\u6743\u7684\u4e3b\u9898\u53ef\u4ee5\u81ea\u52a8\u5c06\u5176\u8bbf\u95ee\u6743\u7684\u5b50\u96c6\u6388\u4e88\u5176\u4ed6\u4e3b\u4f53</li> </ul> </li> <li>\u7f3a\u9677\uff1a\u8bbf\u95ee\u5141\u8bb8\u53ef\u80fd\u5728\u4fe1\u606f\u4f20\u8f93\u4e2d\u53d1\u751f\u6539\u53d8</li> <li>\u8bbf\u95ee\u63a7\u5236\u77e9\u9635<ul> <li>\u8bbf\u95ee\u63a7\u5236\u8868\uff1a\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6dfb\u52a0\u4e86\u4e00\u4e2a\u8be6\u7ec6\u5217\u8868\u4ee5\u8bbf\u95ee\u5176\u4e3b\u4f53 access control list</li> <li>\u80fd\u529b\u8868\uff1a\u6bcf\u4e2a\u4e3b\u4f53\u6dfb\u52a0\u4e00\u4e2a\u8be6\u7ec6\u5217\u8868\u4ee5\u8bbf\u95ee\u5176\u5bf9\u8c61 capability list</li> </ul> </li> <li> <p>example</p> <ul> <li>Unix OS</li> <li>\u7528\u6237\u4e09\u7c7b\uff1aUser(u), Group(g), Other(o)</li> <li>\u8bb8\u53ef\u4e09\u7c7b\uff1aRead(r), Write(w), Execute(x)</li> <li>\u4f7f\u75289bits\u6765\u8868\u793a\u4e00\u4e2a\u6587\u4ef6\u7684\u8bbf\u95ee\u63a7\u5236\u8868\uff1a<ul> <li>1-3 bit\uff1auser's permission</li> <li>4-6 bit: group member's perimission</li> <li>7-9 bit: other's permission </li> </ul> </li> </ul> </li> <li> <p>MAC: Mandatory Access Control \u5f3a\u5236\u8bbf\u95ee\u63a7\u5236</p> </li> <li> <p>\u5f3a\u5236\u8bbf\u95ee\u63a7\u5236\u4e86\u79d8\u7ea7</p> </li> <li> <p>Bell-LaPadula Model\uff1aensure confidentidity\uff08\u673a\u5bc6\u6027\uff09</p> <ul> <li>no read up: \u53ea\u80fd\u8bfb\u53d6\u540c\u7ea7\u6216\u4f4e\u7ea7\u7684\u5bf9\u8c61</li> <li>no write down\uff1a\u53ea\u80fd\u5199\u9ad8\u7ea7\u6216\u540c\u7ea7\u7684\u5bf9\u8c61</li> </ul> </li> <li> <p>Trojan horse \u6728\u9a6c</p> <p></p> <ul> <li>B \u4e0d\u80fd\u8bfb\u53d6 G \u6587\u4ef6\uff0cA \u53ef\u4ee5\u8bfb\u5199 F \u4e14\u5199 G\uff0c\u4f46 B \u60f3\u8981\u76d7\u53d6 F \u6587\u4ef6</li> <li>B \u5728\u4e00\u4e2a good \u7a0b\u5e8f\u4e2d\u690d\u5165Trojan horse</li> <li>A \u8fd0\u884c good \u7a0b\u5e8f\uff0cA \u5728\u8bfb F \u7684\u65f6\u5019\u5c06 F \u7684\u5185\u5bb9\u5199\u5728 G \u4e2d\uff0cB \u5c31\u53ef\u4ee5\u8bfb F</li> <li>\u4f7f\u7528 security label\uff0cA \u4e0d\u80fd\u5411 G \u4e2d\u5199\u5165\uff0c\u6728\u9a6c\u4f1a\u5931\u6548</li> </ul> </li> <li> <p>convert channel \u9690\u79d8\u901a\u9053\uff1a\u4f7f\u7528\u7cfb\u7edf\u8d44\u6e90\u8fdb\u884c\u901a\u4fe1\u800c\u4e0d\u4f1a\u6ce8\u610f\u5230\u4e3b\u4f53\u7684\u901a\u9053</p> <ul> <li>\u8d44\u6e90\u8017\u5c3d\u578b\u9690\u901a\u9053 resource exhaustion channel</li> <li>\u5982\uff1a\u7ed9\u4e0e1024mb \u7684\u52a8\u6001\u5206\u914d\u5185\u5b58<ul> <li>\u9ad8\u7ea7progress\uff1abit = 1\uff0c\u7533\u8bf71024mb\uff1bbit = 0\uff0c\u4e0d\u7533\u8bf7</li> <li>\u4f4e\u7ea7progress\uff1a\u7533\u8bf71024mb\uff0c\u5982\u679c\u7533\u6210\u529fbit = 1\uff0c\u5426\u5219bit = 0</li> <li>\u7528\u4f4e\u7ea7\u8fdb\u7a0b\u7533\u8bf7\u8d44\u6e90\u6210\u529f\u4e0e\u5426\u6765\u5224\u65ad\u9ad8\u5c42\u8fdb\u7a0b\u662f\u5426\u8fd0\u884c</li> </ul> </li> <li>\u8d1f\u8f7d\u611f\u77e5\u578b\u9690\u901a\u9053Loading sensing channel</li> <li>\u9ad8\u7ea7progress\uff1abit = 1 \u8fdb\u5165\u8ba1\u7b97\u5faa\u73af\uff1bbit = 0\uff0c\u7761\u89c9</li> <li>\u4f4e\u7ea7progress\uff1a\u4e0d\u77e5\u9053\u5c31\u7b97\u8981\u6c42\u65f6\u5c31\u6267\u884c\u4efb\u52a1\uff0c\u5982\u679c\u5b8c\u6210\u8fc5\u901f\u5219bit = 0\uff0c\u5426\u5219 bit = 1</li> <li>\u4f4e\u7ea7\u8fdb\u7a0b\u6267\u884c\u4e00\u4e2a\u9700\u8981\u9ad8\u7ea7\u8fdb\u7a0b\u6240\u9700\u7684\u8d44\u6e90\u7684\u4efb\u52a1\uff0c\u89c2\u5bdf\u5176\u5b8c\u6210\u901f\u5ea6\u786e\u5b9a\u9ad8\u7ea7\u8fdb\u7a0b\u7684\u8fd0\u884c\u60c5\u51b5</li> <li>\u5e94\u5bf9\u9690\u901a\u9053\u7684\u65b9\u5f0fcoping with convert channels</li> <li>\u5728\u786e\u8ba4\u9690\u901a\u9053\u540e<ul> <li>\u5173\u95ed\u6216\u964d\u4f4e\u901a\u9053\u901f\u5ea6</li> <li>\u68c0\u6d4b\u4f01\u56fe\u4f7f\u7528\u9690\u901a\u9053\u7684\u8fdb\u7a0b</li> <li>\u5fcd\u53d7\u4ed6\u7684\u5b58\u5728</li> </ul> </li> <li>\u9690\u901a\u9053\u65e0\u6cd5\u5b8c\u5168\u88ab\u907f\u514d<ul> <li>\u9650\u5236\u8d44\u6e90\u5171\u4eab\uff0c\u5982\u8ba9\u8d44\u6e90\u5171\u4eab\u53ea\u53d1\u751f\u5728\u76f8\u540c\u7684\u5b89\u5168\u5c42\u7ea7\u7684\u8fdb\u7a0b\u4e4b\u95f4</li> <li>\u9650\u5236\u5e26\u5bbd</li> </ul> </li> </ul> </li> <li> <p>MAC \u7684\u6807\u51c6\u2014\u2014orange book</p> </li> <li> <p>RBAC: Role-based Access Control \u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236</p> </li> <li> <p>DAC \u5b89\u5168\u6027\u592a\u5f31\uff0cMAC \u592a\u5f3a\u4e0d\u591f\u7075\u6d3b\uff0c\u7ba1\u7406\u5de5\u4f5c\u91cf\u90fd\u5f88\u5927</p> </li> <li>RBAC \u4e3b\u8981\u4e3a\u4e86\u51cf\u5c11\u7ba1\u7406\u4eba\u5458\u5de5\u4f5c\u91cf</li> <li>RBAC \u4e3a\u6bcf\u4e00\u4e2a\u7528\u6237\u6388\u4e88\u4e00\u7cfb\u5217\u4e0d\u540c\u7684\u89d2\u8272</li> <li>\u7279\u6027\uff1a\u804c\u80fd\u5206\u79bb\u3001\u89d2\u8272\u5206\u5c42\u3001\u89d2\u8272\u6fc0\u6d3b\u3001\u7528\u6237\u6210\u5458\u8d44\u683c\u7ea6\u675f</li> <li>\u6982\u5ff5\uff1a<ul> <li>\u4e94\u4e2a\u57fa\u672c\u6570\u636e\u5ba2\u4f53\uff1a\u7528\u6237users\uff0c\u89d2\u8272roles\uff0c\u5ba2\u4f53objects\uff0c\u64cd\u4f5coperations\uff0c\u8bb8\u53efpermission</li> <li>\u6838\u5fc3\u6982\u5ff5</li> <li>\u89d2\u8272<ul> <li>\u4e00\u7ec4\u7528\u6237\u7684\u6bcf\u4e2a\u89d2\u8272\u90fd\u4e0e\u76f8\u5173\u64cd\u4f5c\u76f8\u5173\uff0c\u7528\u6237\u6240\u5c5e\u89d2\u8272\u6709\u6743\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c</li> <li>\u89d2\u8272\u548c\u7ec4\u7684\u533a\u522b</li> <li>\u7ec4group\uff1a\u4e00\u7cfb\u5217\u7528\u6237</li> <li>\u89d2\u8272role\uff1a\u4e00\u7fa4\u7528\u6237+\u4e00\u7fa4\u64cd\u4f5c\u8bb8\u53ef</li> <li>\u5173\u7cfb\uff1a\u591a\u5bf9\u591a\uff0c\u7528\u6237\u88ab\u8d4b\u4e88\u7279\u5b9a\u7684\u89d2\u8272\uff0c\u89d2\u8272\u88ab\u8d4b\u4e88\u7279\u5b9a\u7684\u8bb8\u53ef</li> <li>\u4f1a\u8bddsessions\uff1a\u5339\u914d\u7528\u6237\u548c\u6fc0\u6d3b\u7684\u89d2\u8272</li> </ul> </li> </ul> </li> <li>hierarchy RBAC model\uff1arole hierarchy \u89d2\u8272\u7ee7\u627f</li> <li>constraint RBAC model<ul> <li>SSD\uff1a\u7528\u6237\u89d2\u8272\u5206\u914d\u7684\u7ea6\u675f\u5173\u7cfb\uff0c\u4e00\u4e2a\u7528\u6237\u4e0d\u80fd\u540c\u65f6\u5206\u914d\u4e24\u4e2a SSD \u89d2\u8272</li> <li>DSD\uff1a\u4e0d\u540c\u65f6\u95f4\u4e0d\u540c\u6743\u9650</li> </ul> </li> <li>\u4f18\u52bf<ul> <li>\u5bb9\u6613\u6388\u6743\u7ba1\u7406</li> <li>\u6839\u636e\u5de5\u4f5c\u9700\u8981\u8fdb\u884c\u4fc3\u8fdb\u5206\u7c7b\uff0c\u5982\u901a\u8fc7\u8d22\u52a1\u4eba\u5458\u7684\u89d2\u8272\u533a\u5206\u516c\u53f8\u8d22\u52a1\u90e8\u95e8\u548c\u975e\u8d22\u52a1\u90e8\u95e8\u5458\u5de5\u7684\u516c\u53f8\u8d22\u52a1\u8bb8\u53ef</li> <li>\u8f7b\u677e\u5b9e\u73b0\u6700\u5c0f\u6743\u9650\uff0c\u5373\u4f7f\u7528\u6237\u88ab\u5206\u914d\u4e3a\u9ad8\u7ea7\u8eab\u4efd\u4e5f\u53ea\u6709\u5728\u5fc5\u8981\u65f6\u624d\u6709\u6743\u9650\uff0c\u4ee5\u9632\u6b62\u4e8b\u6545\u53d1\u751f</li> <li>\u65b9\u4fbf\u5b9e\u73b0\u4efb\u52a1\u5206\u914d</li> <li>\u6613\u4e8e\u8fdb\u884c\u6587\u4ef6\u5206\u7ea7\u7ba1\u7406\uff0c\u6587\u4ef6\u672c\u8eab\u5206\u4e3a\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u7531\u7528\u6237\u7684\u4e0d\u540c\u89d2\u8272\u6765\u62e5\u6709</li> <li>RBAC \u53ef\u4ee5\u7528\u6765\u5b9e\u73b0DAC \u548cMAC</li> </ul> </li> <li>\u5b89\u5168\u8bbf\u95ee\u63a7\u5236\u7684\u539f\u5219<ul> <li>\u6388\u6743\u7ba1\u7406</li> <li>MAC\uff1a\u57fa\u4e8e\u5b89\u5168\u7ea7\u522b\uff0c\u7ba1\u7406\u5458\u5206\u914d\u7ea7\u522b<ul> <li>\u4e3b\u4f53\u7684\u5b89\u5168\u7ea7\u522b\u7531\u5b89\u5168\u7cfb\u7edf\u7ba1\u7406\u5458\u8d4b\u4e88</li> <li>\u5ba2\u4f53\u7684\u5b89\u5168\u7ea7\u522b\u7531\u521b\u9020\u4ed6\u7684\u4e3b\u9898\u6240\u51b3\u5b9a</li> </ul> </li> <li>DAC\uff1a\u591a\u79cd\u6388\u6743\u7ba1\u7406\u65b9\u6cd5<ul> <li>centralized\uff1a\u96c6\u4e2d\u7ba1\u7406\uff0c\u7ba1\u7406\u5458\u6388\u6743\u548c\u672a\u7ecf\u6388\u6743\u7684\u5bf9\u8c61\u8bbf\u95ee\u8005</li> <li>hierarchical\uff1a\u5206\u7ea7\u7ba1\u7406\uff0c\u4e2d\u592e\u7ba1\u7406\u5458\u5c06\u7ba1\u7406\u804c\u8d23\u5206\u914d\u7ed9\u5b9e\u9645\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u7684\u5176\u4ed6\u7ba1\u7406\u5458</li> <li>ownership\uff1a\u6240\u6709\u6743\u7ba1\u7406\uff0c\u5bf9\u8c61\u7684\u6240\u6709\u8005\u6388\u6743\u548c\u672a\u7ecf\u6388\u6743\u7684\u5bf9\u8c61\u8bbf\u95ee\u8005</li> <li>collaborative\uff1a\u534f\u540c\u7ba1\u7406\uff0c\u7279\u6b8a\u8d44\u6e90\u7684\u8bbf\u95ee\u4e0d\u662f\u5355\u4e2a\u7528\u6237\u51b3\u5b9a\u7684\uff0c\u800c\u662f\u7531\u5171\u4eab\u7528\u6237\u7684\u5408\u4f5c\u6388\u6743\u51b3\u5b9a\u7684</li> <li>distributed\uff1a\u5206\u5e03\u5f0f\u7ba1\u7406\uff0c\u5bf9\u8c61\u7684\u6240\u6709\u8005\u53ef\u4ee5\u6388\u6743\u5176\u4ed6\u7528\u6237\u8fdb\u884c\u7ba1\u7406\u7684\u6743\u9650</li> </ul> </li> <li>RBAC\uff1a\u63d0\u4f9b\u8bb8\u591a\u7c7b\u4f3c\u4e8e\u81ea\u6211\u7ba1\u7406\u7b56\u7565\u7684\u8bbf\u95ee\u63a7\u5236\u3002<ul> <li>\u7ba1\u7406\u6743\u9650\u7684\u6388\u6743\u662f RBAC \u7684\u91cd\u8981\u7279\u6027\uff0c\u5728 DAC \u548c MAC \u4e2d\u6ca1\u6709</li> </ul> </li> <li>\u7f29\u5c0f\u7528\u6237\u6743\u9650\uff1a\u6309\u7167\u6743\u529b\u5206\u7acb\uff0c\u5c06\u8d85\u7ea7\u7528\u6237\u539f\u6709\u7684\u6743\u529b\u5206\u914d\u7ed9\u4e09\u79cd\u7279\u6743\u7528\u6237</li> <li>\u7cfb\u7edf\u7ba1\u7406\u5458\uff1a\u7cfb\u7edf\u7ef4\u62a4\u3001\u7528\u6237\u7ba1\u7406\u3001\u8f6f\u4ef6\u5b89\u88c5</li> <li>\u5b89\u5168\u7ba1\u7406\u5458\uff1a\u5b89\u5168\u89c4\u5219\u914d\u7f6e\u3001\u5b89\u5168\u7b56\u7565\u7ba1\u7406\u3001\u5176\u4ed6\u529f\u80fd</li> <li>\u5ba1\u8ba1\u7ba1\u7406\u5458\uff1a\u68c0\u67e5\u5ba1\u8ba1\u8bb0\u5f55\u3001\u76d1\u89c6\u7cfb\u7edf\u5b89\u5168\u6027\u3001\u5176\u4ed6\u529f\u80fd</li> <li>\u6bcf\u4e2a\u7279\u6743\u7528\u6237\u5f7c\u6b64\u5c65\u884c\u804c\u8d23\u548c\u7ea6\u675f\u3002</li> <li>\u57fa\u672c\u7ea6\u675f\uff1a\u5728\u4e00\u7c7b\u7528\u6237\u773c\u4e2d\uff0c\u5176\u4ed6\u4e24\u7c7b\u7528\u6237\u62e5\u6709\u7684\u6743\u9650\u4e0e\u666e\u901a\u7528\u6237\u5b8c\u5168\u76f8\u540c\u6ca1\u6709\u7279\u522b\u7684\u6743\u529b</li> </ul> </li> <li>\u5b89\u5168\u8bbf\u95ee\u63a7\u5236\u7684\u6838\u5fc3\u539f\u5219<ul> <li>\u6700\u5c0f\u6743\u9650minimize rights\uff1a\u5373\u4f7f\u7528\u6237\u88ab\u5206\u914d\u4e3a\u9ad8\u7ea7\u8eab\u4efd\uff0c\u4e5f\u53ea\u6709\u5728\u5fc5\u8981\u65f6\u624d\u6709\u6743\u9650\uff0c\u4ee5\u9632\u4e8b\u6545\u7684\u53d1\u751f</li> <li>\u6743\u529b\u5206\u7acb\uff08\u540c\u4e0a\u4e09\u79cd\u7279\u6743\u7528\u6237\uff09</li> </ul> </li> </ul> </li> <li> <p>IP Security</p> </li> <li> <p>\u7f51\u7edc\u7ed3\u6784</p> <ul> <li>TCP/IP \u534f\u8bae\u6808\u53bb\u505a\u8def\u7531\u548c\u8fde\u63a5</li> <li>BGP \u53bb\u505a\u8def\u7531\u5668\u53d1\u73b0</li> <li>DNS \u53bb\u505a\u57df\u540d\u89e3\u6790\u627e IP</li> </ul> </li> <li> <p>TCP/IP \u534f\u8bae\u6808</p> <p></p> <ul> <li>IP\uff1aInternet Protocol</li> <li>\u65e0\u8fde\u63a5\u7684\uff0c\u4e0d\u53ef\u9760\u7684</li> <li>\u9700\u8981\u7528\u6570\u5b57\u5730\u5740\u6765\u5bfb\u627e\uff0c\u7ecf\u5e38\u5728\u8def\u7ebf\u4e2d\u8df3\u597d\u51e0\u6b21\u624d\u80fd\u627e\u5230</li> <li>ICMP\uff1aControl Message Protocol</li> <li>\u5bf9\u7f51\u7edc\u64cd\u4f5c\u505a\u51fa\u53cd\u9988</li> <li>UDP\uff1aUser Datagram Protocol</li> <li>IP \u63d0\u4f9b\u8def\u7531\uff0cUDP \u6309\u7167\u7aef\u53e3\u5206\u5272\u6d41\u91cf\uff0c\u53ea\u4fdd\u8bc1\u6700\u4f4e\u9650\u5ea6</li> <li>TCP\uff1aTransmission Control Protocol</li> <li>\u8d1f\u8d23\u53ef\u9760\u6027\u548c\u6d41\u91cf\u63a7\u5236</li> <li>Sender\uff1a\u6570\u636e\u5206\u6bb5\uff0c\u5e8f\u5217\u53f7\u9644\u5728\u5305\u4e0a</li> <li>Receiver\uff1a\u6b63\u786e\u987a\u5e8f\u7ec4\u5408\u5305\uff0c\u4e22\u5931\u6570\u636e\u91cd\u65b0\u53d1\u9001</li> <li>\u8fde\u63a5\u72b6\u6001\u5728\u53cc\u65b9\u4fdd\u6301</li> <li>TCP \u4f1a\u91cd\u53d1\u6240\u6709\u6ca1\u6536\u5230\u7684\u5305\u652f\u6301\u7ec8\u7aef\u7528\u6237\u7684\u865a\u62df\u8fde\u63a5</li> <li>TCP \u7684\u4f18\u52bf\u662f\u63d0\u4f9b\u4e86\u6bb5\u7684\u786e\u8ba4\u63a5\u6536</li> <li>DNS\uff1aDomain Name Service</li> <li>\u5c06\u57df\u540d\u6620\u5c04\u5230\u6570\u5b57 IP \u5730\u5740\u4e0a</li> </ul> </li> <li> <p>\u4e09\u6b21\u63e1\u624b</p> </li> </ul> <p></p> <p></p> <ul> <li>\u5e8f\u5217\u53f7\u7528\u4e8e\u8ddf\u8e2a\u5305\uff0c\u786e\u4fdd\u6ca1\u6709\u4e22\u5305</li> <li>ISNs \u521d\u59cb\u5e8f\u5217\u53f7\u5728 TCP \u8fde\u63a5\u5efa\u7acb\u7684\u65f6\u5019\u4f7f\u7528</li> <li>\u4e24\u7aef\u5fc5\u987b\u5728\u5f7c\u6b64\u7684\u521d\u59cb TCP \u5e8f\u5217\u53f7 ISN \u4e0a\u540c\u6b65\uff0c\u624d\u80fd\u5efa\u7acb\u8fde\u63a5</li> <li>\u4ea4\u6362ISNs \u521d\u59cb\u5e8f\u5217\u53f7\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e22\u5931\u7684\u6570\u636e\u5305\u53ef\u4ee5\u91cd\u65b0\u53d1\u9001</li> <li> <p>ack\u7801 = \u6536\u5230\u7684seq\u7801 + 1 \u7528\u6765\u786e\u8ba4\u662f\u5426\u662f\u8fd9\u4e24\u4e2a host \u901a\u4fe1\u7528\uff08\u6700\u521dack = 0\uff09</p> </li> <li> <p>TCP \u5e38\u7528\u7aef\u53e3\u53f7\uff1a21 FTP, 53 DNS, 80 HTTP</p> </li> <li> <p>DNS \u670d\u52a1\uff1a</p> <ul> <li>DNS \u6839\u670d\u52a1\u5668\u8d1f\u8d23\u6700\u9ad8\u7ea7\u57df\u540d\u89e3\u6790</li> <li>\u5f53\u672c\u5730 DNS \u6302\u6389\uff0c\u4ed6\u4f1a\u627e\u4ed6\u7684\u6388\u6743\u670d\u52a1\u5668\u53bb\u95ee</li> <li>\u5982\u679c\u4e00\u76f4\u6302\uff0c\u4f1a\u901a\u8fc7\u7ea7\u8054\u8be2\u95ee\u4e00\u76f4\u5230\u8ddf\u670d\u52a1\u5668</li> </ul> </li> <li> <p>security issues of TCP/IP</p> </li> <li> <p>sniffing \u7a83\u542c</p> <ul> <li>\u8bb8\u591a\u4f20\u8f93\u662f\u4e0d\u52a0\u5bc6\u7684</li> <li>ftp \u548c telnet \u660e\u6587\u4e32\u5bc6\u7801</li> <li> <p>\u8bb8\u591a web \u5e94\u7528\u4f7f\u7528 http\u534f\u8bae\uff0c\u6ca1\u6709\u52a0\u5bc6</p> </li> <li> <p>\u6df7\u6742\u6a21\u5f0fpromiscuous mode \u7f51\u7edc\u63a5\u53e3\u5361\u53ef\u4ee5\u8bfb\u53d6\u6240\u6709\u6570\u636e</p> </li> </ul> </li> <li> <p>ARP \u6b3a\u9a97/\u75c5\u6bd2spoofing/poisoning</p> <ul> <li>ARP \u662f\u65e0\u72b6\u6001\u7684\uff0cARP: IP-&gt;MAC, RARP: MAC-&gt;IP</li> <li>ARP \u4ee5\u4ee5\u592a\u7f51\u89e3\u6790\u534f\u8bae</li> <li>\uff08ARP \u6b3a\u9a97\u7684\u5de5\u4f5c\u539f\u7406\u662f\u7531\u653b\u51fb\u8005\u53d1\u9001\u5047\u7684 APR \u6570\u636e\u5305\u5230\u7f51\u7edc\u4e0a\uff0c\u5c24\u5176\u662f\u9001\u5230\u7f51\u5173\u4e0a\u3002\u5176\u4e3b\u8981\u76ee\u7684\u662f\u8981\u8ba9\u9001\u81f3\u7279\u5b9a\u7684 IP \u5730\u5740\u7684\u6d41\u91cf\u88ab\u9519\u8bef\u9001\u5230\u653b\u51fb\u8005\u6240\u53d6\u4ee3\u7684\u5730\u65b9\u3002\uff09</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528arp\u7f13\u5b58\u6765\u5b9e\u73b0arp\uff0c\u4e00\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u53ea\u63a5\u53d7\u7b2c\u4e00\u4e2a\u54cd\u5e94\u5305</li> <li>\u4f2a\u9020\u4e00\u4e2a ICMP \u6570\u636e\u5305\u8ba9\u53d7\u5bb3\u673a\u5668\u53d1\u8d77 ARP \u8bf7\u6c42\uff0c\u518d\u53d1\u9001\u4f2a\u9020\u7684ARP \u54cd\u5e94</li> <li>ARP \u6b3a\u9a97\u53ef\u7528\u6765\u53d1\u8d77\uff1a</li> <li>intercepted attack\u62e6\u622a</li> <li>man-in-the-middle-attack\u4e2d\u95f4\u4eba</li> <li>denical of service attack\u62d2\u7edd\u670d\u52a1</li> </ul> </li> <li> <p>IP Spoofing</p> <ul> <li>\u653b\u51fb\u8005\u5c06\u4e00\u53f0\u8ba1\u7b97\u673a\u7684 IP \u5730\u5740\u4fee\u6539\u4e3a\u5176\u4ed6\u4e3b\u673a\u7684\u5730\u5740\u4f2a\u88c5\u5176\u4ed6\u673a\u5668</li> </ul> </li> <li> <p>TCP SYN Flooding</p> <ul> <li> <p>\u653b\u51fb\u8005\u5728\u4f2a\u9020IP \u5730\u5740\u7684\u540c\u65f6\u53d1\u9001\u5927\u91cf\u8bf7\u6c42\uff0c\u88ab\u653b\u51fb\u7684\u4e3b\u673a\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u5206\u914d\u8d44\u6e90\uff0c\u4e00\u65e6\u8d44\u6e90\u8017\u5c3d\uff0c\u5ba2\u6237\u7aef\u5c31\u65e0\u6cd5\u6b63\u5e38\u8fde\u63a5</p> </li> <li> <p>\u6700\u7ecf\u5178\u7684 DOS \u653b\u51fb\uff1a\u53d1\u8d77\u8005\u4e0d\u6d88\u8017\u8d44\u6e90\uff0c\u63a5\u6536\u65b9\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u521b\u5efa\u7ebf\u7a0b\uff1b\u975e\u5bf9\u79f0\u653b\u51fb</p> </li> <li> <p>prevent</p> </li> <li> <p>random delete</p> <ul> <li>\u5982\u679c SYN \u961f\u5217\u6ee1\u4e86\uff0c\u968f\u673a\u5220\u9664\u4e00\u4e2a</li> <li>\u56e0\u4e3a\u6b63\u5e38\u7684\u8fde\u63a5\u5f88\u5feb\u5c31\u4f1a\u7ed3\u675f</li> <li>\u5c31\u7b97\u88ab\u5220\u9664\u4e5f\u4f1a\u91cd\u65b0\u53d1\u8d77\u8bbf\u95ee\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6709\u5f88\u5927\u5f71\u54cd</li> </ul> </li> <li> <p>STN cookies\uff1a\u670d\u52a1\u5668\u81f3\u5c11\u4ece\u4e00\u4e2a\u5ba2\u6237\u7aef\u6536\u5230 2 \u6761\u6d88\u606f\u624d\u8fdb\u5165\u5b58\u50a8\u72b6\u6001\uff08\u975e\u5bf9\u79f0\u7684\u8d44\u6e90\u5206\u914dAsymmetric\uff09</p> <ul> <li>\u670d\u52a1\u5668\u5728socket information\uff08 IP \uff0c\u7aef\u53e3\u548c\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\uff09\u5b58\u5728 cookie\u4e2d\uff0c\u7136\u540e\u628acookies\u53d1\u56de\u53bb</li> <li>\u5ba2\u6237\u7aef\u5fc5\u987b\u628a\u8fd9\u4e2acookie \u548c\u7b2c\u4e8c\u6761\u6d88\u606f\u518d\u53d1\u56de\u5230\u670d\u52a1\u5668\u505a\u4e8c\u6b21\u8bf7\u6c42\uff0c\u7136\u540e\u670d\u52a1\u5668\u91cd\u65b0\u8ba1\u7b97cookie\u6821\u9a8c\u518d\u53d1\u9001\u56de\u5ba2\u6237\u7aef\uff0c\u53ea\u6709\u6821\u9a8c\u6210\u529f\u624d\u4f1a\u8fde\u63a5</li> </ul> </li> <li> <p>TCP SYN \u9884\u6d4b\u653b\u51fb</p> </li> <li> <p>\u5e8f\u5217\u53f7\u5982\u679c\u88ab\u653b\u51fb\u8005\u9884\u6d4b\uff0c\u90a3\u4e48\u5c31\u80fd\u4f2a\u9020\u5305\u53d1\u9001\u7ed9\u63a5\u6536\u65b9\uff0c\u6309\u7167\u4f2a\u9020\u51fa\u6765\u7684\u5e8f\u5217\u53f7\u62fc\u51fa\u6765\u6ee1\u8db3\u653b\u51fb\u8005\u76ee\u7684\u7684\u5305</p> </li> <li>TCP SYN \u9884\u6d4b\u653b\u51fb\u662f\u5f88\u591a\u653b\u51fb\u7684\u6e90\u5934\uff1aTCP spoofing\u6b3a\u9a97, TCP connection hijacking\u8fde\u63a5\u52ab\u6301xx, TCP reset\u91cd\u7f6e</li> <li> <p>\u5bf9\u6297\u65b9\u6cd5</p> <ul> <li>\u9009\u62e9\u4e00\u4e2a\u968f\u673a\u7684\uff08\u975e0\uff09ISN \u53bb\u62b5\u6297\u9884\u6d4b</li> </ul> </li> <li> <p>TCP \u963b\u585e\u63a7\u5236 Congestion</p> </li> <li> <p>\u4e22\u5305\u610f\u5473\u7740\u963b\u585e\uff0cTCP\u534f\u8bae\u8981\u6c42\u53d1\u9001\u65b9</p> <ul> <li>\u4e8c\u5206\u901f\u5ea6\u6307\u5bfc\u4e0d\u53d1\u751f\u4e22\u5305\u6216\u8005\u901f\u5ea6\u964d\u81f3 0</li> <li>\u5982\u679c\u4e22\u5305\u505c\u6b62\uff0c\u4f20\u8f93\u901f\u5ea6\u5c06\u7f13\u6162\u589e\u52a0</li> </ul> </li> <li> <p>\u89e3\u51b3\u65b9\u5f0f</p> <ul> <li>\u6dfb\u52a0 ack nonces\uff08nonce\u5728\u5bc6\u7801\u5b66\u4e2d\u8868\u793a\u4f7f\u7528\u4e00\u6b21\u7684\u968f\u673a\u6570\uff09\uff0c\u5728ack \u8fd4\u56de\u65f6\u52a0\u4e0a nonce \u6765\u8bc1\u660e\u4ed6\u4e0d\u662f\u4e00\u4e2a\u6b3a\u9a97</li> </ul> </li> <li> <p>DNS \u6b3a\u9a97</p> </li> <li> <p>\u4fee\u6539 DNS \u670d\u52a1\u5668 \u6216\u8005\u672c\u5730 DNS \u670d\u52a1\u5668\uff0c\u4e00\u822c\u662f\u4fee\u6539dns\u7f13\u5b58\u6570\u636e\u5e93\uff0c\u91cd\u65b0\u5b9a\u5411\u9875\u9762\u8bf7\u6c42\u5230\u9519\u8bef\u7684 IP\u5730\u5740\uff0c\u5bfc\u81f4\u8bbf\u95ee\u5230\u4e86\u9519\u8bef\u7684\u670d\u52a1\u5668</p> </li> <li> <p>\u57fa\u672c\u7684\u57df\u6b3a\u9a97pharming</p> </li> <li> <p>\u5bf9\u6297 DNS \u6b3a\u9a97\uff1aDNSSEC</p> </li> <li> <p>\u6b3a\u9a97\u53d1\u751f\u7684\u539f\u56e0\uff1aDNS \u8bf7\u6c42\u548c\u54cd\u5e94\u90fd\u662f\u672a\u7ecf\u8ba4\u8bc1\u7684\uff0c\u5bfc\u81f4\u653b\u51fb\u8005\u53ef\u4ee5\u4f2a\u9020 DNS \u4fe1\u606f</p> </li> <li> <p>DNSSEC </p> <ul> <li>\u6240\u6709\u54cd\u5e94\u90fd\u662f\u8ba4\u8bc1\u7684</li> <li>\u65e2\u4e0d\u7528\u4e8e\u63d0\u4f9b\u52a0\u5bc6\u670d\u52a1\uff0c\u4e5f\u4e0d\u7528\u6765\u9762\u5bf9 DOC \u653b\u51fb</li> </ul> </li> <li> <p>IPSEC </p> </li> <li> <p>IPSEC \u652f\u6301\u5728 IP \u66fe\u7684\u6240\u6709\u7f51\u7edc\u4f20\u8f93\u7684\u52a0\u5bc6\u548c\u8ba4\u8bc1</p> </li> <li>IPV6 \u5fc5\u987b\u652f\u6301 IPSEC\uff0c IPV4 \u662f\u53ef\u4ee5\u9009\u62e9\u7684</li> <li> <p>\u4e09\u4e2a\u6838\u5fc3</p> <ul> <li>\u9a8c\u8bc1\u5934\uff0cAH</li> <li>\u8f7d\u8377\u5b89\u5168\u6027\u5c01\u88c5\uff0cESP</li> <li>\u5b89\u5168\u5173\u8054\uff0cSA</li> </ul> </li> <li> <p>authentication header \u9a8c\u8bc1\u5934 AH</p> <ul> <li>\u4e3a IP \u5305\u63d0\u4f9b\u6570\u636e\u5b8c\u6574\u6027\u548c\u8ba4\u8bc1\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u6027\u7684\u63d0\u4f9b\u53cd\u91cd\u73b0\u653b\u51fb</li> <li>\u4e0b\u4e00\u4e2aheader\u7684\u7c7b\u578b+payload\u957f\u5ea6+\u4fdd\u7559+IP\u6570\u636e\u5305\u76f8\u5173SA\u7684\u7d22\u5f15+\u8ba1\u6570\u5668+ICV\uff08\u5b8c\u6574\u6027\u9a8c\u8bc1\uff09</li> </ul> </li> <li> <p>Encapsulating Security Payloads \u8f7d\u8377\u5b89\u5168\u6027\u5c01\u88c5 ESP</p> <ul> <li>\u63d0\u4f9b\u5b89\u5168\u3001\u4fdd\u5bc6\u548c\u9a8c\u8bc1\u670d\u52a1\uff08\u53ef\u9009</li> </ul> </li> <li> <p>Security Associations \u5b89\u5168\u5173\u8054 SA</p> <ul> <li>\u4e3a\u5355\u9879\u53d1\u9001-\u63a5\u6536\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7b97\u6cd5\u548c\u53c2\u6570\u7528\u4e8e\u52a0\u5bc6\u8ba4\u8bc1\uff08\u53cc\u5411\u901a\u4fe1\u8981\u521b\u5efa 2 \u4e2a SA\uff09</li> <li>\u4e00\u4e2a SA \u7531 3 \u4e2a\u5e38\u91cf\u552f\u4e00\u786e\u5b9a</li> <li>SPI security parameter index \u5b89\u5168\u53c2\u6570\u7d22\u5f15</li> <li>IP \u76ee\u6807\u5730\u5740</li> <li> <p>\u5b89\u5168\u534f\u8bae\u6807\u8bc6\uff0c\u786e\u5b9a\u662f AH \u8fd8\u662f ESP</p> </li> <li> <p>SA \u662f\u4e00\u7ec4\u903b\u8f91\u5b89\u5168\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u4fe1\u606f\u5171\u4eab\u7ed9\u53e6\u4e00\u4e2a\u5b9e\u4f53</p> </li> </ul> </li> <li> <p>IPSEC \u7684\u64cd\u4f5c\u6a21\u5f0f</p> </li> <li> <p>IPSEC \u53ef\u4ee5\u7528\u518d P2P \u6216\u8005\u7f51\u7edc\u96a7\u9053\u4f20\u8f93</p> <ul> <li>\u4f20\u8f93\u6a21\u5f0f</li> <li>\u4f20\u8f93\u6a21\u5f0f\u53ea\u4fdd\u62a4 IP \u5305\u5185\u5bb9\u800c\u4e0d\u4fdd\u62a4 IP \u5934</li> <li>\u7531\u4e8e IP \u5934\u672a\u88ab\u4fee\u6539\uff0c\u6240\u6709\u8def\u7531\u8fc7\u7a0b\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u7684\u6570\u636e\u90fd\u53d7\u5230\u4fdd\u62a4</li> <li> <p>\u4e00\u822c\u7528\u5728 P2P \u4f20\u8f93</p> </li> <li> <p>\u96a7\u9053\u6a21\u5f0f</p> </li> <li>\u96a7\u9053\u6a21\u5f0f\u4f1a\u52a0\u5bc6\u6574\u4e2a IP \u5305\uff0c\u539f\u59cbIP \u6570\u636e\u5305\u5c06\u88ab\u9690\u85cf\u5230\u4e00\u4e2a\u65b0\u7684IP \u6570\u636e\u5305\u4e2d\uff0c\u5e76\u4e14\u5c06\u9644\u52a0\u4e00\u4e2a\u65b0\u7684 IP \u6807\u5934</li> <li>\u901a\u5e38\u7528\u4e8e\u4fdd\u62a4\u7f51\u7edc\u548c\u7f51\u7edc\u4e4b\u95f4\u7684VPN\uff0c\u4e3b\u673a\u5230\u7f51\u7edc\u901a\u4fe1\u4ee5\u53ca\u70b9\u5bf9\u70b9\u7684\u901a\u4fe1</li> </ul> </li> <li> <p>IPSEC \u7684\u4f18\u52bf</p> </li> <li> <p>IPSEC \u53ef\u4ee5\u589e\u5f3a\u548c\u5b9e\u73b0\u9632\u706b\u5899/\u8def\u7531\u5668</p> <ul> <li>\u6240\u6709\u901a\u8fc7\u8fb9\u754c\u7684\u6570\u636e\u5305\u90fd\u5c06\u5f97\u5230\u5b89\u5168\u6027\u589e\u5f3a</li> <li>\u53d7\u9632\u706b\u5899\u4fdd\u62a4\u7684\u4e3b\u673a\u4e0d\u9700\u8981\u5904\u7406\u5b89\u5168\u95ee\u9898</li> </ul> </li> <li> <p>IPSEC \u5bf9\u6700\u7ec8\u7528\u6237\u662f\u900f\u660e\u7684</p> <ul> <li>\u6784\u5efa\u5728 IPSEC \u7f51\u7edc\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u65e0\u9700\u505a\u4efb\u4f55\u7279\u6b8a\u7684\u4e8b\u60c5</li> <li>\u81ea\u52a8\u4fdd\u8bc1\u4fdd\u5bc6\u6027\u548c\u5b8c\u6574\u6027</li> </ul> </li> <li> <p>SSL TLS \u6982\u5ff5 secure socket layer \u548c transport layer security</p> </li> <li> <p>\u76ee\u6807\uff1a\u4e3a TCP \u63d0\u4f9b\u53ef\u9760\u7684\u7aef\u5230\u7aef\u5b89\u5168\u670d\u52a1\uff0c\u4ee5\u63d0\u4f9b\u673a\u5bc6\u6027\u3001\u5b8c\u6574\u6027\u548c\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1</p> </li> <li> <p>SSL \u8fde\u63a5 SSL connection</p> <ul> <li>\u8fde\u63a5\u662f\u63d0\u4f9b\u9002\u5f53\u7c7b\u578b\u670d\u52a1\u7684\u4f20\u8f93</li> <li>SSL \u8fde\u63a5\u662f\u70b9\u5bf9\u70b9pointtopoint\u7684\u5173\u7cfb\u3002\u8fde\u63a5\u662f\u4e34\u65f6\u7684\uff0c\u6bcf\u4e2a\u8fde\u63a5\u90fd\u4e0e\u4e00\u4e2a\u4f1a\u8bdd\u76f8\u5173\u8054\u3002</li> </ul> </li> <li> <p>SSL \u4f1a\u8bdd SSL session</p> <ul> <li>SSL \u4f1a\u8bdd\u662f\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u5173\u8054\u3002\u4f1a\u8bdd\u7531\u63e1\u624b\u534f\u8bae\u521b\u5efa\u3002\u4f1a\u8bdd\u5b9a\u4e49\u7531\u4e00\u7ec4\u8fde\u63a5\u5171\u4eab\u7684\u5bc6\u7801\u5b89\u5168\u53c2\u6570</li> <li>\u907f\u514d\u6602\u8d35\u7684\u8c08\u5224\u4ef7\u683c\u6765\u63d0\u4f9b\u6bcf\u4e2a\u8fde\u63a5\u7684\u5b89\u5168\u53c2\u6570</li> </ul> </li> <li> <p>SSL TLS \u534f\u8bae\u6808</p> </li> <li> <p>SSL&amp;TLS \u5904\u5728\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u4e4b\u95f4\uff0c\u81ea\u8eab\u4e5f\u88ab\u5206\u4e3a\u4e24\u5c42</p> <ul> <li>handshake layer\u63e1\u624b\u5c42\uff0c\u5b9a\u4e49\u4e86\u4e09\u4e2a\u5b50\u534f\u8bae</li> <li>record layer\u8bb0\u5f55\u5c42\uff0c\u63a5\u6536\u5e76\u52a0\u5bc6\u6765\u81ea\u5e94\u7528\u5c42\u7684\u4fe1\u606f\uff0c\u4efb\u4f55\u53d1\u7ed9\u4f20\u8f93\u5c42</li> </ul> </li> <li> <p>\u63e1\u624b\u5c42\u2014\u2014SSL\u4e2d\u6700\u590d\u6742\u7684\u90e8\u5206</p> <ul> <li> <p>\u4f7f\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e92\u76f8\u9a8c\u8bc1</p> </li> <li> <p>\u534f\u5546\u52a0\u5bc6\u7b97\u6cd5\uff0cMAC \u7b97\u6cd5\u548c\u52a0\u5bc6\u5bc6\u94a5</p> </li> <li> <p>\u5728\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u4f20\u8f93\u4e4b\u524d\u6267\u884c\u63e1\u624b\u534f\u8bae</p> </li> <li> <p>\u8fc7\u7a0b\u4e2d\uff1a</p> </li> <li> <p>\u5efa\u7acb\u5b89\u5168\u8c08\u5224</p> </li> <li> <p>\u670d\u52a1\u5668\u8ba4\u8bc1\u548c\u5bc6\u94a5\u4ea4\u6362</p> </li> <li> <p>\u5ba2\u6237\u7aef\u8ba4\u8bc1\u548c\u5bc6\u94a5\u4ea4\u6362</p> </li> <li> <p>\u7ed3\u675f</p> </li> </ul> </li> <li> <p>\u8bb0\u5f55\u5c42</p> <ul> <li>\u8fc7\u7a0b\uff1a</li> <li>\u788e\u7247\u5316</li> <li>\u538b\u7f29\uff08optimal</li> <li>MAC\u8ba1\u7b97</li> <li>\u52a0\u5bc6</li> <li>\u52a0\u5165 SSL\u8bb0\u5f55\u5934</li> </ul> </li> </ul> </li> <li> <p>\u6076\u610f\u4ee3\u7801Malicious code</p> <ul> <li> <p>\u5bfc\u81f4\u8fdd\u53cd\u7f51\u7ad9\u5b89\u5168\u7b56\u7565\u7684\u4e00\u7ec4\u6307\u4ee4</p> </li> <li> <p>type</p> </li> <li> <p>Trojan Horse \u7279\u6d1b\u4f0a\u6728\u9a6c</p> <ul> <li>\u540c\u65f6\u5177\u6709overt\u516c\u5f00\u76ee\u7684\uff08\u7528\u6237\u5df2\u77e5\uff09\u548ccovert\u9690\u79c1\u76ee\u7684\uff08\u7528\u6237\u672a\u77e5\uff09\u7684\u7a0b\u5e8f\u53eb\u505a\u6728\u9a6c</li> <li>\u7279\u6d1b\u4f0a\u6728\u9a6c\u53ef\u4ee5\u590d\u5236\u81ea\u8eab replicate\uff0c\u5f88\u96be\u68c0\u6d4b</li> <li>\u4f8b\u5982\uff1a</li> <li>Thompson's Compiler\uff1a<ul> <li>\u4fee\u6539\u7f16\u8bd1\u5668\uff0c\u662f\u6307\u5728\u7528\u6237\u767b\u5f55\u65f6\u63a5\u53d7\u4e00\u4e2aa fixed password\u56fa\u5b9a\u5bc6\u7801\uff0c\u653b\u51fb\u8005\u901a\u8fc7\u56fa\u5b9a\u5bc6\u7801\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u7528\u6237</li> <li>\u5982\u679c\u60f3\u8981\u901a\u8fc7\u68c0\u67e5\u7f16\u8bd1\u5668\u6e90\u4ee3\u7801\u9632\u6b62\uff0c\u53ef\u4ee5\u653b\u51fb\u7f16\u8bd1\u7f16\u8bd1\u5668\u7684\u4ee3\u7801</li> <li>\u6240\u4ee5\u518d\u591a\u7684\u6e90\u4ee3\u7801\u7ea7\u9a8c\u8bc1\u90fd\u4e0d\u80fd\u4fdd\u62a4\uff0c\u62e5\u6709\u6e90\u4ee3\u7801\u80fd\u6709\u6240\u5e2e\u52a9\uff0c\u4f46\u4e0d\u80fd\u5b8c\u5168\u4fdd\u62a4</li> </ul> </li> <li>Trojan concealing\uff08\u9690\u85cf\uff09\u2014\u2014rootkit</li> <li>Rootkit \u662f\u4e00\u7ec4\u7279\u6d1b\u4f0a\u6728\u9a6c\u7a0b\u5e8f\u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u4ee3\u7801\uff0c\u4e3b\u8981\u7279\u70b9\u662f\u9690\u8eab</li> </ul> </li> <li>Virus \u75c5\u6bd2<ul> <li>\u5c06\u81ea\u8eab\u63d2\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u5e76\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u7684\u7a0b\u5e8f</li> <li>\u63d2\u5165\u9636\u6bb5insertion phases\uff1a\u5c06\u81ea\u8eab\u63d2\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d</li> <li>\u6267\u884c\u9636\u6bb5execution phase\uff1aperform\u4e00\u4e9b\u884c\u52a8\uff08\u53ef\u80fd\u662f\u4e0d\u597d\u7684\u884c\u52a8\uff09</li> <li>\u63d2\u5165\u9636\u6bb5\u5fc5\u987b\u5b58\u5728\uff0c\u6267\u884c\u9636\u6bb5\u4e0d\u603b\u662f\u8fdb\u884c</li> <li>\u53ea\u6709\u5728\u672a\u88ab\u611f\u67d3\u7684\u60c5\u51b5\u4e0bLehigh\u75c5\u6bd2\u4f1a\u81ea\u5df1\u63d2\u5165\u6839\u6587\u4ef6\u4e2d</li> <li>types</li> <li>Boot sector intectors\uff1a\u5c06\u81ea\u5df1\u63d2\u5165\u78c1\u76d8\u5f15\u5bfc\u6247\u533aboot sector\u7684\u75c5\u6bd2</li> <li>executable intectors\uff1a\u5c06\u81ea\u5df1\u63d2\u5165\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u75c5\u6bd2<ul> <li>overwritting\uff1a\u66ff\u6362\u90e8\u5206\u7a0b\u5e8f</li> <li>at the beginning\uff1a\u52a0\u5728\u5f00\u5934</li> <li>beginning and end\uff1a\u5305\u4f4f\u76ee\u6807\u7a0b\u5e8f</li> <li>intersperse\uff1a\u96c6\u4e2d\u5230\u7a0b\u5e8f\u4e2d</li> <li>companions\uff1acall with it</li> </ul> </li> <li>multipartite viruses<ul> <li>\u53ef\u4ee5\u611f\u67d3\u5f15\u5bfc\u6247\u533a\u6216\u53ef\u6267\u884c\u7a0b\u5e8f</li> <li>\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1aboot sector infector\uff0cexe infector</li> </ul> </li> <li>TSR virus\uff1aterminate and stay resident<ul> <li>\u5e94\u7528\u7a0b\u5e8f\u7ed3\u675f\u540e\u518d\u5185\u5b58\u4e2d\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001</li> </ul> </li> <li>stealth virus\uff1a\u9690\u85cf\u6587\u4ef6\u611f\u67d3\u7684\u75c5\u6bd2</li> <li>encrypted virus\uff1a\u9664\u4e86\u4e00\u4e2a\u5c0f\u7684deciphering routine\u89e3\u5bc6\u7a0b\u5e8f\u5916\u5747\u88ab\u52a0\u5bc6\u7684\u75c5\u6bd2<ul> <li>\u73b0\u5728\u901a\u8fc7\u7b7e\u540d\u68c0\u6d4b\u75c5\u6bd2\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u75c5\u6bd2\u90fd\u662f\u52a0\u5bc6\u7684</li> <li>\u5bf9\u6297\uff1a\u4ece\u4ee3\u7801\u7684\u672a\u52a0\u5bc6\u90e8\u5206\u9009\u62e9\u7b7e\u540d</li> <li>\u5b58\u5728\u7684\u95ee\u9898\uff1a\u53ea\u80fd\u786e\u5b9a\u5b58\u5728\u75c5\u6bd2\u4f46\u4e0d\u80fd\u9274\u522b\u662f\u54ea\u4e00\u79cd\uff0c\u65e0\u6cd5\u6740\u6bd2\uff1b\u653b\u51fb\u8005\u6076\u610f\u6a21\u62df\u89e3\u5bc6\uff0c\u8fdb\u4e00\u6b65\u5206\u6790\u89e3\u5bc6\u540e\u7684\u4ee3\u7801</li> </ul> </li> <li>polyborphic virus\u591a\u6001\u75c5\u6bd2<ul> <li>\u6bcf\u6b21\u590d\u5236\u90fd\u4f1a\u6539\u53d8\u5f62\u6001</li> </ul> </li> </ul> </li> <li> <p>Worm \u8815\u866b</p> </li> <li> <p>\u4e09\u79cd\u6076\u610f\u4ee3\u7801\u7684\u6bd4\u8f83</p> </li> </ul> <p></p> <ul> <li> <p>detenses of Mal. code \u6076\u610f\u4ee3\u7801\u7684\u62b5\u5fa1</p> </li> <li> <p>\u4e0d\u5b58\u5728\u7b97\u6cd5\u53ef\u4ee5\u68c0\u6d4b\u6240\u6709\u53ef\u80fd\u7684\u6076\u610f\u4ee3\u7801\uff0c\u62c5\u5fe7\u57fa\u4e8e\u7b7e\u540d\u7684\u9632\u75c5\u6bd2\u65b9\u6cd5</p> </li> <li> <p>Botnets \u50f5\u5c38\u7f51\u7edc</p> </li> <li> <p>\u80fd\u591f\u6309\u6307\u4ee4\u884c\u4e8b\u7684\u81ea\u4e3b\u7a0b\u5e8f\u7f51\u7edc</p> <ul> <li>\u901a\u5e38\u662f\u4e00\u5927\u7ec4\u53ef\u4ee5\u8fdc\u7a0b\u63a7\u5236\u7684\u50f5\u5c38\u7cfb\u7edftypically large</li> <li>\u673a\u5668\u7684\u4e3b\u4efb\u4e0d\u77e5\u9053\u4ed6\u4eec\u5df2\u7ecf\u88ab\u63a7\u5236\u4e86</li> <li>\u901a\u8fc7 IRC \u6216\u8005 P2P \u8fdb\u884c\u63a7\u5236\u548c\u5347\u7ea7Controlled and upgraded via IRC or P2P</li> </ul> </li> <li> <p>\u4f5c\u4e3a\u591a\u79cd\u653b\u51fb\u7684\u5e73\u53f0</p> <ul> <li>DDOS</li> <li>\u5783\u573e\u90ae\u4ef6\u548c\u70b9\u51fb\u6b3a\u8bc8 spam and click fraud</li> <li>\u4e3a\u65b0\u7684\u8815\u866b\u505a\u51c6\u5907</li> </ul> </li> <li> <p>propagation \u50f5\u5c38\u7f51\u7edc\u4f20\u64ad</p> </li> <li> <p>\u6bcf\u4e2abot\u90fd\u53ef\u4ee5\u626b\u63cfIP \u7a7a\u95f4\u4ee5\u5bfb\u627e\u65b0\u7684\u53d7\u5bb3\u8005</p> <ul> <li>\u81ea\u52a8</li> <li>\u6839\u636ecommand\uff0cprefix\u524d\u7f00</li> </ul> </li> <li> <p>\u4e3b\u52a8\u50f5\u5c38\u7f51\u7edc\u7ba1\u7406\uff1a\u68c0\u6d4b\u65e0\u54cd\u5e94bot\u548c\u8d85\u7ea7bot</p> </li> <li> <p>\u50f5\u5c38\u7f51\u7edc\u6218\u4e89\u7684\u8bc1\u636e\uff1a\u901a\u8fc7\u591a\u4e2aIRC \u94fe\u63a5\u7684DOS\u670d\u52a1\u5668</p> </li> <li> <p>DOS \u653b\u51fb</p> </li> <li> <p>\u538b\u5012\u53d7\u5bb3\u8005\u53ca\u5176\u5e76\u62d2\u7edd\u4e3a\u5176\u5408\u6cd5\u5ba2\u6237\u63d0\u4f9b\u670d\u52a1</p> </li> <li> <p>DDOS \u653b\u51fb</p> </li> <li> <p>\u5efa\u7acb\u4e00\u4e2a\u50f5\u5c38\u7f51\u7edc</p> <ul> <li>\u591a\u5c42\u67b6\u6784\uff1a\u4f7f\u7528\u4e00\u4e9b\u50f5\u5c38\u4f5c\u4e3a\u4e3b\u4efb\u6765\u63a7\u5236\u5176\u4ed6\u50f5\u5c38</li> </ul> </li> <li> <p>\u547d\u4ee4\u50f5\u5c38\u5bf9\u53d7\u5bb3\u8005\u53d1\u8d77\u534f\u540c\u653b\u51fb</p> <ul> <li> <p>\u4e0d\u9700\u8981\u6b3a\u9a97\uff1a</p> </li> <li> <p>\u56e0\u4e3a\u6ca1\u6709\u5fc5\u8981\u4e3a\u4e86\u4fdd\u62a4\u4e00\u53f0\u50f5\u5c38\u673a\u5668\u6765\u4f7f\u7528\u6b3a\u9a97\uff0c\u6bd4\u8d77\u4f2a\u9020 IP \u5730\u5740\uff0c\u83b7\u53d6\u4e00\u53f0\u65b0\u7684\u50f5\u5c38\u673a\u5668\u53ef\u80fd\u4f1a\u5feb\u5f88\u591a</p> </li> <li> <p>\u5373\u4f7f\u5728\u53d1\u751f SYN \u6cdb\u6ee5\u7684\u60c5\u51b5\u4e0b\uff0cSYN cookies\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\uff1a</p> </li> <li> <p>DDOS \u5f15\u53d1\u7684 SYN flood \u4e0d\u540c\u4e8eDOS\uff0c\u6bcf\u53f0\u50f5\u5c38\u673a\u90fd\u662f\u5728\u6b63\u5e38\u8bbf\u95ee\u670d\u52a1\u5668\u7684\uff0c\u4e0d\u4f1a\u88ab SYN cookie \u5f71\u54cd</p> <ul> <li>\u901a\u8fc7\u6765\u81ea\u4e0d\u540c\u6765\u6e90\u7684\u6570\u5343\u53f0\u673a\u5668\u7684\u6d41\u91cf\u62b5\u8fbe\u53d7\u5bb3\u8005</li> </ul> </li> </ul> </li> <li> <p>\u50f5\u5c38\u7f51\u7edc\u7684\u68c0\u6d4b</p> </li> <li> <p>\u50f5\u5c38\u673a\u901a\u8fc7IRC \u548c DNS \u8fdb\u884c\u68c0\u6d4b</p> <ul> <li>IRC \u5411\u50f5\u5c38\u53d1\u51fa\u547d\u4ee4</li> <li>DNS \u5bfb\u627e\u4e3b\u4eba\uff0c\u4e3b\u4eba\u67e5\u770b\u50f5\u5c38\u662f\u5426\u5df2\u7ecf\u88ab\u5217\u5165\u9ed1\u540d\u5355</li> </ul> </li> <li> <p>IRC/DNS \u6d3b\u52a8\u5728\u7f51\u7edc\u975e\u5e38\u660e\u663e</p> <ul> <li>\u5bfb\u627e\u6267\u884c\u626b\u63cf\u7684\u4e3b\u673a\u548c\u5177\u6709\u9ad8\u767e\u5206\u6bd4\u6b64\u7c7b\u4e3b\u673a\u7684IRC\u9891\u9053</li> <li>\u5bfb\u627e\u63d0\u51fa\u5f88\u591a DNS \u67e5\u8be2\u4f46\u5f88\u5c11\u6709\u5173\u4e8e\u4ed6\u81ea\u5df1\u67e5\u8be2\u7684\u4e3b\u673a</li> </ul> </li> <li> <p>\u4f7f\u7528\u52a0\u5bc6\u548c R2R \u8f7b\u677e\u89c4\u907f</p> </li> </ul> </li> <li> <p>SPAM \u2014\u2014\u53d1\u9001\u5927\u91cf\u672a\u7ecf\u8bf7\u6c42\u7684\u7535\u5b50\u90ae\u4ef6\u6216\u77ed\u4fe1\u516c\u544a</p> <ul> <li>\u539f\u56e0\uff1a\u5546\u4e1a\u5229\u76ca\u3001\u5236\u9020/\u53d1\u9001\u7b80\u5355\u3001\u5927\u91cf\u9519\u8bef\u914d\u7f6e</li> <li>email spoofing\uff1a\u4f2a\u9020\u7535\u5b50\u90ae\u4ef6\u5934\u90e8\u4fe1\u606f\uff0c\u8ba9\u6536\u4fe1\u4eba\u8ba4\u4e3a\u6765\u6e90\u53ef\u4fe1</li> <li>open relays\uff1aSMTP relay \u5c06\u90ae\u4ef6\u8f6c\u53d1\u5230\u76ee\u7684\u5730\uff0copen relay\u672a\u7ecf\u6388\u6743\uff0c\u5141\u8bb8\u4efb\u4f55\u4eba\u53d1\u9001\u90ae\u4ef6</li> <li>\u5783\u573e\u90ae\u4ef6\u53d1\u9001\u8005\u9690\u85cf\u6765\u6e90\uff1a\u9632\u6b62\u88ab\u5217\u5165\u9ed1\u540d\u5355</li> <li> <p>\u4f7f\u7528 botnets \u53d1\u9001\u5783\u573e\u90ae\u4ef6\u53ef\u4ee5\u9690\u85cf\u771f\u5b9e IP \u548c\u670d\u52a1\u5668\uff0c\u4f7f\u9ed1\u540d\u5355\u65e0\u6cd5\u6709\u6548\u963b\u6b62</p> </li> <li> <p>\u5bf9\u6297\u5783\u573e\u90ae\u4ef6\uff1a\u8fc7\u6ee4\u5668\u3001\u53d1\u4ef6\u4eba\u9a8c\u8bc1\u3001challenge authentication</p> </li> </ul> </li> </ul>"},{"location":"db/db/","title":"Db","text":""},{"location":"db/db/#2-relation-model","title":"2 Relation model","text":""},{"location":"db/db/#21","title":"2.1 \u6570\u636e\u5e93\u6a21\u5f0f\uff0c\u6570\u636e\u5e93\u5b9e\u4f8b","text":"<p>\u7c7b\u6bd4\u53c2\u6570\u548c\u53c2\u6570\u7684\u5b9e\u9645\u503c</p>"},{"location":"db/db/#22","title":"2.2 \u7801","text":""},{"location":"db/db/#221-superkey","title":"2.2.1 Superkey \u8d85\u7801","text":"<p>a. \u4e00\u4e2a\u5c5e\u6027\u6216\u591a\u4e2a\u5c5e\u6027\u7684\u96c6\u5408</p> <p>b. superkey\u7684\u7ec4\u5408\u80fd\u8ba9\u6211\u4eec\u552f\u4e00\u5730\u6807\u8bc6\u4e00\u4e2a\u5143\u7ec4\uff0c\u80fd\u591f\u9650\u5236\u4e24\u4e2a\u5173\u7cfb\u4e0d\u4f1a\u5b8c\u5168\u76f8\u540c</p>"},{"location":"db/db/#222-candidate-key","title":"2.2.2 Candidate key \u5019\u9009\u7801","text":"<p>a. \u5982\u679c K \u662f\u4e00\u4e2a\u8d85\u7801\uff0c\u90a3\u4e48 K \u7684\u4efb\u610f\u4e00\u4e2a\u8d85\u96c6\u90fd\u662f\u8d85\u7801</p> <p>b. \u8fd9\u6837\u7684\u6700\u5c0f\u8d85\u7801\u6210\u4e3a\u5019\u9009\u7801\uff0c\u4e00\u4e2a tuple \u5bf9\u5e94\u7684\u5019\u9009\u7801\u53ef\u4ee5\u6709\u5f88\u591a\u4e2a/\u79cd</p> <p>c. {ID} \u548c {dept_name} \u90fd\u662f\u5019\u9009\u7801\uff0c\u4f46\u662f {ID, dept_name} \u4e0d\u662f\u5019\u9009\u7801</p>"},{"location":"db/db/#223-primary-key","title":"2.2.3 Primary key \u4e3b\u7801","text":"<p>a. \u88ab\u6570\u636e\u5e93\u8bbe\u8ba1\u8005\u9009\u4e2d\u7684\u5728\u4e00\u4e2a relation \u4e2d\u7684\u5019\u9009\u7801\u3002</p> <p>b. \u4e3b\u7801\u7684\u9009\u62e9\u53d7\u9650\u5236\uff0c\u4e0d\u80fd\u91cd\u590d\uff0c\u9009\u62e9\u503c\u6781\u5c11\u53d8\u5316\u7684\u5c5e\u6027\uff0c\u5982\u4eba\u540d\u4f1a\u91cd\u590d\u4f46\u8eab\u4efd\u8bc1\u53f7\u4e0d\u91cd\u590d</p>"},{"location":"db/db/#224-foreign-key","title":"2.2.4 Foreign key \u5916\u7801","text":"<p>a. \u5173\u7cfb R<sub>1</sub> \u4e2d\u5305\u542b\u5c5e\u6027 X\uff0c\u5c5e\u6027 X \u662f\u5173\u7cfb R<sub>2</sub> \u7684\u4e3b\u7801\uff0c\u5219\u5c5e\u6027 X \u4e5f\u662f\u5173\u7cfb R<sub>2</sub> \u7684\u5916\u7801\u3002</p> <p>b. R<sub>1</sub> \u79f0\u4e3a\u5916\u7801\u4f9d\u8d56\u7684\u53c2\u7167\u5173\u7cfb referencing relation\uff0cR<sub>2</sub> \u79f0\u4e3a\u5916\u7801\u4f9d\u8d56\u7684\u88ab\u53c2\u7167\u5173\u7cfb referenced relation\u3002</p>"},{"location":"fds/ds1/","title":"FDS","text":""},{"location":"fds/ds1/#ds1","title":"DS1","text":""},{"location":"fds/ds1/#algorithm-analysis","title":"Algorithm Analysis","text":"<p>input, output, definiteness\u786e\u5b9a\u6027\uff08\u6bcf\u6761\u6307\u4ee4\u90fd\u662f\u6e05\u6670\u7684\u6ca1\u6709\u6b67\u4e49\u7684\uff09, finiteness\u6709\u9650\u6027\uff08\u7ecf\u8fc7\u4e00\u5b9a\u7684\u4ee3\u7801\u8fd9\u4e2a\u7b97\u6cd5\u4e00\u5b9a\u4f1a\u505c\u4e0b\u6765terminate\uff09, effectiveness\uff08\u57fa\u672c\u7684-&gt;\u53ef\u884c\u7684,\u8db3\u591f\u57fa\u672c\uff09 - \u4e0e\u7a0b\u5e8f\u4e0d\u540cprogram\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u4e00\u76f4\u8dd1\u4e0b\u53bb\uff08\u6bd4\u5982\u505a\u4efb\u52a1\u89c4\u5212\uff09 - \u7b97\u6cd5\u53ef\u4ee5\u6709\u591a\u79cd\u63cf\u8ff0\u65b9\u5f0f\uff0c\u5b9e\u9645\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u81ea\u7136\u8bed\u8a00\uff0c\u4f2a\u4ee3\u7801\u3002\u4e0d\u4e00\u5b9a\u8981\u5177\u4f53\u5b9e\u73b0\u624d\u80fd\u5206\u6790</p>"},{"location":"fds/ds1/#selection-sort","title":"Selection Sort\u9009\u62e9\u6392\u5e8f","text":"<p>\u81ea\u7136\u8bed\u8a00\uff1afind the smallest from the unsorted and place it next in the sorted lists</p>"},{"location":"fds/ds1/#what-to-analysis","title":"what to analysis","text":"<ul> <li>Machine and complier-dependent run times</li> <li>run times\u7531\u673a\u5668\u548c\u7f16\u8bd1\u5668\u51b3\u5b9a-&gt;\u592a\u62bd\u8c61</li> <li>Time and space complexities\u65f6\u95f4\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u548cmachine and compliers\u65e0\u5173</li> <li>\u6211\u4eec\u5047\u8bbe\uff1a\u6307\u4ee4\u90fd\u662f\u5355\u7ebf\u7a0b\u8fd0\u884c\u7684\uff1b\u6bcf\u6761\u6307\u4ee4\u90fd\u662f\u7b80\u5355\u7684\uff0c\u90fd\u53ea\u5360\u636e\u4e00\u4e2a  \u65f6\u95f4\u5355\u4f4d\uff1b\u6574\u6570\u7684\u89c4\u6a21\u662f\u6709\u9650\u7684\u4e14\u6211\u4eec\u6709\u65e0\u9650\u5185\u5b58</li> </ul>"},{"location":"fds/ds1/#_1","title":"\u590d\u6742\u5ea6\u8ba1\u7b97","text":"<ul> <li>\u58f0\u660e\u7684\u590d\u6742\u5ea6\uff1a0\uff1b\u6bcf\u6761\u8d4b\u503c\u7684\u590d\u6742\u5ea6\uff1a1\uff1b\u6bcf\u6761\u5224\u65ad\u7684\u590d\u6742\u5ea6\uff1a1\uff1b\u5224\u65ad\u5206\u652f\uff1a\u8ba1\u7b97\u6240\u6709\u60c5\u51b5\u4e2d\u590d\u6742\u5ea6\u8f83\u5927\u8005\uff1breturn\u8fd4\u56de\u7684\u590d\u6742\u5ea6\uff1a1</li> <li>\u9012\u5f52\u7684\u590d\u6742\u5ea6\uff1a\u5982T(n) = T(n-1) + 2\u89e3\u5f97T(n) = 2n + 2</li> <li>\u5faa\u73af\u7684\u590d\u6742\u5ea6\uff1a\u6ce8\u610f\u9000\u51fa\u5faa\u73af\u7684 \u65f6\u5019\u8fd8\u6709\u4e00\u6b21\u5224\u65ad\u4f46\u4e0d\u8fd0\u884c</li> <li>\u603b\u6267\u884c\u6b21\u6570 = n+1+n*(\u5faa\u73af\u4f53\u4e2d\u8bed\u53e5\u6267\u884c\u6b21\u6570)   <pre><code>void  add ( int  a[ ][ MAX_SIZE ], \n                 int  b[ ][ MAX_SIZE ], \n                 int  c[ ][ MAX_SIZE ],\n                 int  rows,  int  cols )\n{\n  int  i,  j ;//\u58f0\u660e\u590d\u6742\u5ea6\u65e0\n  for ( i = 0; i &lt; rows; i++ )//\u5bf9\u4e8e\u8be5\u5faa\u73af\u4f53\uff0c\u590d\u6742\u5ea6\u4e3arows+1+rows(i\u7684\u5185\u90e8)\n        for ( j = 0; j &lt; cols; j++ )//\u5bf9\u4e8ei\u7684\u5185\u90e8\uff0c\u590d\u6742\u5ea6\u4e3acols+1+cols(j\u7684\u5185\u90e8)\n              c[ i ][ j ] = a[ i ][ j ] + b[ i ][ j ];//j\u7684\u5185\u90e8=1\n}\n</code></pre></li> <li></li> </ul>"},{"location":"fds/ds1/#_2","title":"\u4e00\u4e9b\u788e\u788e\u5ff5\u7684\u590d\u6742\u5ea6","text":"<ul> <li>\u6570\u7ec4</li> <li>\u63d2\u5165\u5143\u7d20\u5230\u672b\u5c3e\uff1aO(1)</li> <li>\u627e\u5230\u6700\u5927\u6216\u6700\u5c0f\u7684\u5143\u7d20\uff1aO(n), \u5220\u9664\u5143\u7d20\u79fb\u52a8\u6570\u7ec4O(n)</li> <li>\u94fe\u8868</li> <li>\u63d2\u5165\u5143\u7d20\u5230\u94fe\u8868\u5f00\u5934\u6216\u7ed3\u5c3e\uff1aO(1)</li> <li>\u627e\u5230\u6700\u5927\u6216\u6700\u5c0f\u5143\u7d20\uff1aO(n), \u5220\u9664\u5143\u7d20O(1)</li> <li>\u6709\u5e8f\u6570\u7ec4</li> <li>\u63d2\u5165\u627e\u5230\u5408\u9002\u4f4d\u7f6eO(n), \u79fb\u52a8\u6570\u7ec4\u5e76\u63d2\u5165\u5143\u7d20O(n)</li> <li>\u5220\u9664\u5f00\u5934\u6216\u672b\u5c3e\u5143\u7d20O(1)</li> <li>\u6709\u5e8f\u94fe\u8868</li> <li>\u63d2\u5165\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6eO(n), \u63d2\u5165\u5143\u7d20O(1)</li> <li>\u5220\u9664\u5f00\u5934\u6216\u672b\u5c3e\u5143\u7d20O(1)</li> </ul>"},{"location":"fds/ds1/#tree","title":"Tree","text":"<ul> <li>\u4e00\u4e2a node \u7684 degree \u662f\u8fd9\u4e2a node \u7684 child \u4e2a\u6570\uff0c\u4e00\u68f5\u6811\u7684 degree \u662f\u8fd9\u68f5\u6811\u91cc\u9762\u6240\u6709 node \u7684 degree \u7684\u6700\u5927\u503c\u3002</li> <li>\u4ece\u8282\u70b9 n<sub>1</sub>, n<sub>k</sub> \u7684\u8def\u5f84\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u4e00\u4e2a\u5e8f\u5217\uff0c\u8fd9\u6761\u8def\u5f84\u662f\u552f\u4e00\u7684\u3002</li> <li>deep\uff1a\u4ece\u8ddf\u5230\u8be5\u8282\u70b9\u552f\u4e00\u8def\u5f84\u7684\u957f\u5ea6</li> <li>height\uff1a\u4ece\u8be5\u8282\u70b9\u5230\u4e00\u7247\u6811\u53f6\u7684\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6</li> </ul>"},{"location":"fds/ds1/#binary-tree","title":"binary tree","text":"<p>\u5bf9\u6bcf\u4e00\u4e2a\u4e8c\u53c9\u6811\uff1a - \u6df1\u5ea6 k \u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709 2<sup>k</sup> - 1 \u4e2a\u8282\u70b9 - \u5bf9\u4efb\u4f55\u975e\u7a7a\u4e8c\u53c9\u6811\u6709 n<sub>0</sub> = n<sub>2</sub> + 1</p> <ul> <li>preorder <pre><code>void preorder(tree* tree){\n  if(tree){\n    visit(tree);\n    for(each child of the tree) preorder(child);\n  }\n}\n</code></pre></li> <li>postorder <pre><code>void postorder(tree* tree){\n  if(tree){\n    for(each child in the tree) postorder(child);\n    visit(tree);\n  }\n}\n</code></pre></li> <li>levelorder <pre><code>void leveorder(tree* tree){\n  enqueue(tree);\n  while(queue is not empty){\n    visit(T = dequeue());\n    for(eaach child in the tree) enqueue(child);\n  }\n}\n</code></pre></li> <li>inorder <pre><code>void inorder(tree* tree){\n  if(tree){\n    inorder(tree-&gt;left);\n    visit(tree-&gt;element);\n    inorder(tree-&gt;right);\n  }\n}\n</code></pre></li> </ul>"},{"location":"fds/ds1/#threaded-binary-tree","title":"Threaded binary tree \u7ebf\u7d22\u4e8c\u53c9\u6811","text":""},{"location":"fds/ds1/#binary-serach-tree","title":"Binary serach tree \u4e8c\u53c9\u641c\u7d22\u6811","text":"<ul> <li>\u6240\u6709\u8282\u70b9 element \u4e0d\u76f8\u540c</li> <li>\u5de6\u5b50\u6811\u7684 element &lt; element &lt; \u53f3\u5b50\u6811\u7684 element</li> </ul>"},{"location":"fds/ds1/#stack","title":"stack","text":"<p>\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\u53ea\u6709pop\uff0cpush\u7684\u64cd\u4f5c\uff0c\u53ea\u6709\u5934\u7ed3\u70b9\u53ef\u89c1</p> <p>struct\u91cc\u9762\uff0c\u603b\u5bb9\u91cf\uff08\u7528\u4e8e\u5224\u65ad\uff09\uff0c\u76ee\u524d\u5bb9\u91cf\uff0c\u5934\u7ed3\u70b9</p>"},{"location":"fds/ds1/#heap-priority-queue","title":"Heap (Priority Queue)","text":""},{"location":"fds/ds1/#binary-heap","title":"Binary heap","text":"<p>n nodes, height h</p> <p>height \u4ece 0 \u5f00\u59cb\uff0c\u4e0b\u56fe\u4e2d height \u662f 3.</p> <p></p> <p>\u4e00\u4e2a\u9ad8\u5ea6 h \u7684\u5b8c\u5168\u4e8c\u53c9\u6811 complete binary tree \u53ef\u4ee5\u6709 2<sup>h</sup> \u5230 2<sup>h+1</sup>-1 \u4e2a\u8282\u70b9\u3002</p>"},{"location":"fds/ds1/#maxmin-heap","title":"max/min heap","text":"<p>A min tree is a tree in which the key value in each node is no larger than the key values in its children (if any).  </p> <p>min heap\uff1a\u7236\u8282\u70b9\u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5b50\u8282\u70b9\u7684\u503c</p>"},{"location":"fds/ds1/#insertion","title":"Insertion","text":"<pre><code>void insert(elementype x, heap h)\n{\n  int i;\n  if(isfull(h)){\n    return;/\u62a5\u9519\u8f93\u51fa\n  }\n  for(i = ++h-&gt;size; h-&gt;element[i/2] &gt; x; i /= 2){\n    h-&gt;elemnt[i] = h-&gt;element[i/2];\n  }\n  h-&gt;element[i] = x;\n}\n</code></pre>"},{"location":"fds/ds1/#deletemin","title":"DeleteMin","text":"<p>\u5148\u628a\u6700\u540e\u4e00\u4e2a element \u653e\u5230\u9996\u4f4d\uff0c\u7136\u540e\u8fdb\u884c percolate up down</p> <pre><code>elementype DeleteMin(heap h)\n{\n  elementype minelement, lastelement;\n  if(isempty(h)){\n    return h-&gt;element[0];//\n  }\n  minelement = h-&gt;element[1];\n  lastelemnt = h-&gt;element[h-&gt;size--];\n  for(int i = 2; i * 2 &lt;= h-&gt;size; i = child){\n    child = i * 2;\n    if(child != h-&gt;size &amp;&amp; h-&gt;element[child+1] &lt; h-&gt;element[child]){\n      child++;//\u627e\u5230\u4e00\u4e2asmaller\u7684child\u8282\u70b9\n    }\n    if(lastelement &gt; h-&gt;element[child]){\n      h-&gt;element[i] = h-&gt;element[child];//percolate\u4e00\u5c42\n    }else break;//\u627e\u5230\u4e86\u4e00\u4e2a\u5408\u7406\u7684\u4f4d\u7f6e\n  }\n  h-&gt;element[i] = lastelement;\n  return minelement;\n} \n</code></pre> <p>Theorem: \u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u5ea6\u4e3a h \u7684\u5b8c\u7f8e\u4e8c\u53c9\u6811 perfect binary tree\uff0c\u4ed6\u6709 2<sup>h+1</sup>-1 nodes\uff0c\u6240\u6709 nodes \u7684 height \u4e4b\u548c\u4e3a 2<sup>h+1</sup>-1-(h+1)</p>"},{"location":"fds/ds1/#d-heaps-all-nodes-have-d-children","title":"d-Heaps (all nodes have d children)","text":"<p>\u6ce8\u610f\u6211\u4eec\u4e0d\u80fd\u5c06 d \u8bbe\u7f6e\u8fc7\u5927\u3002\u5bf9binary(2)\u7684\u4e58\u9664\u53ea\u662f\u4e00\u4e2a bit shift\uff0c\u4f46\u5bf9 d \u7684\u64cd\u4f5c\u4e0d\u662f\uff1bDeleteMin will take d - 1 comparisons to find the smallest child.  Hence the total time complexity would be O(d logd N).</p>"},{"location":"fds/ds1/#union-find","title":"Union find","text":""},{"location":"fds/ds1/#union-by-size","title":"Union-by-Size","text":"<p>\u603b\u662f\u9009\u62e9smaller tree</p> <p>S [ Root ] = \u2013 size;  / initialized to be \u20131 /</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aN Union \u548c M Find \u7684\u64cd\u4f5c\u9700\u8981O(N + Mlog<sub>2</sub>N)</p>"},{"location":"fds/ds1/#union-by-height","title":"Union-by-height","text":"<p>\u603b\u662f\u9009\u62e9 shallow tree</p>"},{"location":"fds/ds1/#path-compression","title":"Path Compression \u8def\u5f84\u538b\u7f29","text":"<pre><code>setype find(elementype x, disset s)\n{\n  for(root = x; s[root] &gt; 0; root = s[root]);\n  for(tail = x; tail != root; root = lead){\n    lead = s[trail];\n    s[trail] = root;\n  }\n  return root;\n\n}\n</code></pre>"},{"location":"fds/ds1/#graph","title":"Graph","text":"<ul> <li>\u8fde\u901a\u5206\u91cf component of an undirected G</li> <li>\u5f3a\u8fde\u901a\u5206\u91cf strongly connected directed graph</li> <li>i is a predeceddor of j:= there is a path from i to j, j is called a successor</li> <li>partial order\u504f\u5e8f transitive and irreflective</li> </ul>"},{"location":"fds/ds1/#euler-circuits","title":"Euler circuits","text":"<ul> <li>Euler tour: \u4e0d\u95f4\u65ad\u4e00\u7b14\u8fde</li> <li>\u4e00\u5f20\u56fe\u91cc\u6b63\u597d\u6709\u4e24\u4e2a\u6709\u5947\u6570\u5ea6\u7684\u8282\u70b9\uff0c\u5fc5\u987b\u7531\u5947\u6570\u5ea6\u6570\u51fa\u53d1\u5e76\u4e14\u7ec8\u6b62\u4e0e\u5947\u6570\u5ea6\u6570</li> <li>Euler circuit\uff1a\u4e0d\u95f4\u65ad\u4e00\u7b14\u8fde\u4f46\u662f\u8981\u6c42\u8981\u56de\u5230\u8d77\u70b9</li> <li>\u8fd9\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c\u5e76\u4e14\u8fd9\u5f20\u56fe\u7684\u6240\u6709\u8282\u70b9\u90fd\u5076\u6570\u5ea6\u6570</li> </ul>"},{"location":"fds/ds1/#hamilton-circle","title":"Hamilton circle","text":"<p>\u4e00\u4e2a\u7b80\u5355circle\u7ecf\u8fc7\u6240\u6709\u7684\u8282\u70b9</p> <p></p>"},{"location":"fds/ds1/#topological-sort","title":"topological sort","text":"<pre><code>void topsort(graph g){\n  int counter;\n  vertex v, w;\nfor(counter = 0; counter &lt; numvertex; counter ++){\n  v = findnewvertexofdegreezero();\n  if(v == notavertex){\n\n  }\n  topnum[v] = counter;\n  for(each w adjacent to v){\n    indegree[w]--;\n  }\n}\n}\n</code></pre>"},{"location":"fds/ds1/#shortest-path-algorithm","title":"shortest path algorithm","text":""},{"location":"fds/ds1/#unweighted","title":"unweighted","text":"<p>\u4e00\u5c42\u4e00\u5c42\uff0c\u6df1\u5ea6\u4f18\u5148</p> <p>\u9700\u8981\u53d8\u91cf\uff0cknown\uff0cpath\uff0cdist</p> <p></p> <p></p>"},{"location":"fds/ds1/#weighted","title":"weighted","text":"<p>dijkstra's algorithm</p> <p></p>"},{"location":"fds/ds1/#sort","title":"Sort","text":""},{"location":"fds/ds1/#shellsort","title":"ShellSort","text":"<p><pre><code>//\u5e0c\u5c14\u6392\u5e8f\nvoid ShellSort(SqList *L)\n{\n    int i, j, increment = L-&gt;last;\n    do\n    {\n        increment = increment / 3 + 1;\n        for (i = increment + 1; i &lt;= L-&gt;last; i++)\n        {\n            if (L-&gt;arr[i] &lt; L-&gt;arr[i - increment])\n            {\n                L-&gt;arr[0] = L-&gt;arr[i];\n                for (j = i - increment; j &gt; 0 &amp;&amp; L-&gt;arr[0] &lt; L-&gt;arr[j]; j -= increment)\n                    L-&gt;arr[j + increment] = L-&gt;arr[j];\n                L-&gt;arr[j + increment] = L-&gt;arr[0];\n            }\n        }\n\n    } while (increment &gt; 1);\n}\n</code></pre> \u5e0c\u5c14\u6392\u5e8f\u4ea4\u6362\u4e0d\u76f8\u90bb\u7684\u6570\u636e\u5bf9\u6570\u7ec4\u8fdb\u884c\u5c40\u90e8\u6392\u5e8f\uff0c\u6700\u7ec8\u7528\u63d2\u5165\u6392\u5e8f\u5c06\u5c40\u90e8\u6709\u5e8f\u7684\u6570\u7ec4\u6392\u5e8f\u3002</p> <p>\u6700\u521d\u6211\u4eec\u9009\u62e9\u589e\u91cfgap=length/2, \u5faa\u73af\u65f6gap=gap/2, \u6700\u540e\u8fd0\u884c\u81f3gap=1\u3002</p>"},{"location":"fds/ds1/#quicksort","title":"QuickSort","text":"<p><pre><code>void quick_sort(int *num,int l,int r){\n    //\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e1\u4e2a\u6570\u636e\u5143\u7d20\u00b7\u76f4\u63a5\u8fd4\u56de\u7ed3\u675f\u5feb\u6392\u51fd\u6570 r\u4e3a\u6570\u7ec4\u5143\u7d20\u603b\u4e2a\u6570\n    if(l+1&gt;=r){\n        return ;\n    }\n    int first=l,last=r-1,key=num[first];\n    while(first&lt;last){\n        while(first&lt;last&amp;&amp;num[last]&gt;=key){\n            --last;\n        }\n        //\u5982\u679c\u503c\u5c0f\u4e8e key\u5206\u754c\u503c \u4ea4\u6362 \n        num[first]=num[last];\n        while(first&lt;last&amp;&amp;num[first]&lt;key){\n            ++first;\n        }\n        //\u5982\u679c\u503c\u5927\u4e8ekey\u5206\u754c\u503c \u4ea4\u6362 \n        num[last]=num[first];\n    }\n    num[first]=key;\n    //\u9012\u5f52\u5de6\u53f3\u90e8\u5206\u8fdb\u884c\u5feb\u6392 \n    quick_sort(num,l,first);\n    quick_sort(num,first+1,r);\n}\n</code></pre> \u4ee5first\u4e3a\u533a\u95f4\u5de6\u7aef\uff0c\u4ee5last\u4e3a\u533a\u95f4\u53f3\u7aef\uff0c\u4ee5key\u4f5c\u4e3a\u57fa\u51c6\u503c\u3002</p> <p>\u8fd9\u91cckey\u53d6num[last]:\uff08\u8bf4\u660e\u4e86last\u7684\u4f4d\u7f6e\u53ef\u4ee5\u88ab\u8986\u76d6\uff09</p> <p>key\u548c\u533a\u95f4\u5de6\u7aef\u6bd4\u8f83\uff0c\u5982\u679c\u5de6\u7aef =key\uff08\u4e0d\u7b26\u5408\u6761\u4ef6\uff09\uff0c\u5219\u5c06\u533a\u95f4\u5de6\u7aef\u653e\u5230last\u7684\u4f4d\u7f6e\u4e0a\u53bb\u3002 <p>key\u548c\u533a\u95f4\u53f3\u7aef\u6bd4\u8f83\uff0c\u5982\u679c\u53f3\u7aef &gt;key\uff08\u7b26\u5408\u6761\u4ef6\uff09\uff0c\u5219\u533a\u95f4\u53f3\u7aef\u5de6\u79fb\uff1b\u5982\u679c\u53f3\u7aef &lt;=key\uff08\u4e0d\u7b26\u5408\u6761\u4ef6\uff09\uff0c\u5219\u5c06\u533a\u95f4\u53f3\u7aef\u653e\u5230first\u7684\u4f4d\u7f6e\u4e0a\u53bb\u3002</p> <p>\u5f53\u533a\u95f4\u5de6\u53f3\u7aef\u91cd\u5408\u65f6\u4e00\u8f6e\u6392\u5e8f\u7ed3\u675f\uff0c\u91cd\u5408\u4f4d\u7f6e\u5c31\u662fkey\u5e94\u5f53\u88ab\u653e\u7f6e\u7684\u4f4d\u7f6e\u3002</p> <p>\u5bf9\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6bb5\u8fdb\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u76f4\u5230\u5b50\u6bb5\u5185\u5143\u7d20\u4e2a\u6570\u4e3a1\uff0c\u8bf4\u660e\u6574\u4e2a\u6570\u5217\u5df2\u7ecf\u5b8c\u5168\u6709\u5e8f\u3002</p> <p>\u6ce8\u610f\uff0c\u5982\u679c\u662fkey\u53d6num[first]\uff0c\uff08\u8bf4\u660efirst\u7684\u4f4d\u7f6e\u53ef\u4ee5\u88ab\u8986\u76d6\uff09\uff0c\u90a3\u4e48key\u7684\u6bd4\u8f83\u5e94\u5f53\u4ece\u533a\u95f4\u53f3\u7aef\u5f00\u59cb\uff0c\u518d\u5de6\u7aef\uff0c\u518d\u5f80\u590d\u5faa\u73af\u3002</p>"},{"location":"fds/ds1/#_3","title":"\u590d\u6742\u5ea6\u5206\u6790","text":""},{"location":"fds/ds1/#merge-sort","title":"Merge Sort","text":"<p>\u5206\u5de6\u53f3\u90e8\u5206\u5206\u522b mergesort</p> <ul> <li> <p>\u9012\u5f52\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\uff1a <pre><code>function merge_sort(arr, start, end):\n    if start &gt;= end:\n        return arr\n\n    mid = (start + end) / 2\n\n    merge_sort(arr, start, mid)\n    merge_sort(arr, mid+1, end)\n    merge(arr, start, mid, end)\n\n    return arr\n</code></pre> <pre><code>void MergeSort(int Arr[], int N) {\n    int *Temp = (int *)malloc(N * sizeof(int));\n    if (Temp != NULL) {\n        Sort(Arr, Temp, 0, N-1);\n        free(Temp);\n    } else {\n        printf(\"No space for temp array!!!\");\n    }\n}\n// \u9012\u5f52\u6392\u5e8f\nvoid Sort(int Arr[], int Temp[], int left, int right) {\n    if (left &lt; right) {\n        int mid = (left + right) / 2;\n        Sort(Arr, Temp, left, mid);\n        Sort(Arr, Temp, mid+1, right);\n        Merge(Arr, Temp, left, mid, right);\n    } else {\n        return ;\n    }\n}\n// \u5f52\u5e76\nvoid Merge(int Arr[], int Temp[], int left, int mid, int right) {\n    int l_pos = left;\n    int r_pos = mid+1;\n    int i = left;\n\n    while (l_pos &lt;= mid &amp;&amp; r_pos &lt;= right) {\n        if (Arr[l_pos] &lt;= Arr[r_pos]) {\n            Temp[i] = Arr[l_pos];\n            i++;\n            l_pos++;\n        } else {\n            Temp[i] = Arr[r_pos];\n            i++;\n            r_pos++;\n        }\n    }\n\n    while (l_pos &lt;= mid) {\n        Temp[i++] = Arr[l_pos++];\n    }\n    while (r_pos &lt;= right) {\n        Temp[i++] = Arr[r_pos++];\n    }\n\n    while (left &lt;= right) {\n        Arr[left] = Temp[left];\n        left++;\n    }\n}\n</code></pre></p> </li> <li> <p>\u8fed\u4ee3\u7b97\u6cd5 <pre><code>function merge_sort(arr):\n    length = 1\n    n = length(arr)\n    sorted = new array of size n\n\n    while length &lt; n:\n        for start = 0 to n - length step 2 * length:\n            mid = start + length - 1\n            end = min(start + 2 * length - 1, n - 1)\n            merge(arr, sorted, start, mid, end)\n\n        copy sorted to arr\n\n        length = 2 * length\n\n    return arr\n</code></pre> <pre><code>void  merge_sort( ElementType list[],  int N )\n{\n    ElementType extra[MAXN];  /* the extra space required */\n    int  length = 1;  /* current length of sublist being merged */\n    while( length &lt; N ) {\n        merge_pass( list, extra, N, length ); /* merge list into extra */\n        length *= 2;\n    }\n}\nvoid merge_pass(ElementType list[], ElementType sorted[], int N, int length) {\n    int i, j, k = 0;\n\n    for (i = 0; i &lt;= N - 2 * length; i += 2 * length) { // complete 2 equal length\n        int left = i;\n        int right = i + 2 * length - 1;\n        int mid = (right + left) / 2;\n        int l_pos = left;\n        int r_pos = mid + 1;\n\n        if (right &gt;= N) {\n            right = N - 1;\n        }\n\n        while (l_pos &lt;= mid &amp;&amp; r_pos &lt;= right) { //\n            if (list[l_pos] &lt; list[r_pos]) {\n                sorted[k++] = list[l_pos++];\n            } else {\n                sorted[k++] = list[r_pos++];\n            }\n        }\n\n        while (l_pos &lt;= mid) {\n            sorted[k++] = list[l_pos++];\n        }\n        while (r_pos &lt;= right) {\n            sorted[k++] = list[r_pos++];\n        }\n\n    }\n\n    /* \u6700\u540e\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u5269\u4f59\u5143\u7d20 */\n    int left = i;\n    int mid = i + length - 1;\n    int right = N - 1;\n\n    /* \u5f52\u5e76\u64cd\u4f5c */\n    k = left;  /* k \u7528\u4e8e\u904d\u5386 sorted[] \u6570\u7ec4 */\n    int l = left;  /* l \u7528\u4e8e\u904d\u5386\u5de6\u534a\u8fb9\u5b50\u5e8f\u5217 list[left:mid] */\n    int r = mid + 1;  /* r \u7528\u4e8e\u904d\u5386\u53f3\u534a\u8fb9\u5b50\u5e8f\u5217 list[mid+1:right] */\n\n    while (l &lt;= mid &amp;&amp; r &lt;= right) {\n        if (list[l] &lt;= list[r]) {\n            sorted[k++] = list[l++];\n        } else {\n            sorted[k++] = list[r++];\n        }\n    }\n\n    while (l &lt;= mid) {\n        sorted[k++] = list[l++];\n    }\n\n    while (r &lt;= right) {\n        sorted[k++] = list[r++];\n    }\n\n    for (j = 0; j &lt; N; j++) {\n        list[j] = sorted[j];\n    }\n}\n</code></pre></p> </li> </ul>"},{"location":"fds/ds1/#bucket-sort","title":"bucket sort","text":""},{"location":"fds/ds1/#radix-sort","title":"Radix Sort \u57fa\u51c6\u6392\u5e8f","text":"<p>LSD \u6309\u7167\u6700\u5c0f\u7684\u4f4d\u6765\u6392\uff1bMSD \u6309\u7167\u6700\u5927\u7684\u4f4d\u6765\u6392</p> <p> </p>"},{"location":"fds/ds1/#search","title":"Search","text":""},{"location":"fds/ds1/#hashing","title":"Hashing","text":"<p>\u4e8c\u5206\u67e5\u627e\u6811\u65f6\u95f4\u590d\u6742\u5ea6NlogN\u5efa\u6811+logN\u67e5\u627e\uff0c\u5bf9\u4e8e\u5927\u6570\u636e\u6765\u8bf4\u592a\u6162\uff0c\u800chash\u5bf9\u4e8e\u5927\u91cf\u7684\u6570\u636e\uff0c\u67e5\u627e\u590d\u6742\u5ea6\u4e00\u76f4\u662fO(1).\uff08\u65e0\u51b2\u7a81\uff09</p> <p>hash: \u77e5\u9053key\u627e\u5230index\uff0c\u7531key\u6620\u5c04index\u3002(\u51fd\u6570)</p> <ul> <li>collision\uff1a\u4e00\u4e2akey\u67e5\u627e\u5230\u4e86\u4e24\u4e2aindex\u3002</li> <li>overflow\uff1a\u6ea2\u51fa\uff0c\u6876\u653e\u6ee1\u4e86\u3002</li> <li>\u5f53\u4e00\u884c\u53ea\u67091\u4e2a\u6876\u7684\u65f6\u5019\uff0coverflow\u548ccollision\u540c\u65f6\u53d1\u751f\u3002</li> </ul> <p>hash\uff1a\u9009\u62e9\u5408\u9002\u7684bucket\u548cslot\u5927\u5c0f+\u8bbe\u8ba1key\u6620\u5c04index\u7684\u51fd\u6570+\u6876\u6392\u5e8f+\u4e00\u4e2a\u6876\u5185\u94fe\u8868</p>"},{"location":"fds/ds1/#_4","title":"\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570","text":"<p>ascii \u7801\uff0c\u5e73\u65b9\u53d6\u4e2d\u6cd5\uff08\u4f46\u662f\u6211\u611f\u89c9\u8fd9\u4e2a\u5f88\u968f\u610f\u5427\uff09</p>"},{"location":"fds/ds1/#collision","title":"\u5982\u4f55\u5904\u7406\u4e00\u6b21 collision","text":"<ul> <li>\u7ebf\u6027\u5bfb\u5740open addressing\uff1a\u5f53\u8fd9\u4e2a\u4f4d\u7f6e\u51b2\u7a81\u4e86\u5c31\u5f80\u540e\u5bfb\u5740\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u683c\u5b50\u653e\u8fdb\u53bb</li> <li>\u5e73\u65b9\u63a2\u6d4b\uff1a <ul> <li>size = 4k + 3 \u4e14 size \u662f\u7d20\u6570\uff0c\u5e73\u65b9\u63a2\u6d4b\u53ef\u4ee5\u63a2\u6d4b\u5230\u6574\u4e2a\u7a7a\u95f4</li> </ul> </li> <li>\u53cc\u6563\u5217double hashing  \u4ee5H2\u4e3a\u6b65\u957f\u5f80\u540e\u79fb\uff0c</li> <li>rehashing<ul> <li>\u5f71\u54cd\uff08\u88c5\u586b\u56e0\u5b50\uff09arpha = identifier density = total number of identifiers in ht[ ] / total number of distinct possible values for x. \u5df2\u5360\u6709\u7a7a\u95f4\u9664\u4ee5\u5168\u90e8\u7a7a\u95f4</li> <li>\u5f53 arpha \u5728\u8303\u56f4 [0.5,0.85] \u7684\u65f6\u5019\u5fc5\u987b\u8981\u4f7f\u7528rehashing\uff08\u5728\u4e00\u4e2a\u66f4\u5927\u7684\u7a7a\u95f4\u91cc\u9762\u91cd\u5f00hash\uff09</li> <li>\u91cd\u5f00\uff0c\u7a7a\u95f4\u8303\u56f4\u8981\u6269\u5927\uff0c\u6269\u5927\u7684\u7a7a\u95f4\u662f\u539f\u6765\u7684\u7a7a\u95f4\u4e582\u7136\u540e\u5f80\u4e0a\u53d6\u6700\u8fd1\u4e00\u4e2a\u7d20\u6570</li> <li>\u91cd\u5f00\u662f\u5728\u7b2c\u4e00\u6b21hash\u4e4b\u540e\u7684\u5c0f\u6570\u7ec4\u57fa\u7840\u4e0a\u8fdb\u884c\u7684\uff0c\u4e0d\u5728\u5c0f\u6570\u7ec4\u5185\u7684\u6570\u5b57\u6309\u7167\u539f\u6570\u7ec4\u91cc\u9762\u7684\u987a\u5e8f\u53d6</li> </ul> </li> <li>seperate chaining<ul> <li>\u590d\u6742\u5ea6\u4e0d\u518d\u662f O\uff081\uff09</li> </ul> </li> </ul>"},{"location":"java/java/","title":"JAVA","text":""},{"location":"java/java/#2-elementary-programming","title":"2 Elementary Programming","text":""},{"location":"java/java/#identifiers","title":"Identifiers","text":"<p>\u6807\u8bc6\u7b26\uff1a</p> <ul> <li>\u4e0d\u80fd\u662f\u4fdd\u7559\u8bcd</li> <li>\u533a\u5206\u5927\u5c0f\u5199\uff08Int\u53ef\u4ee5\uff09</li> <li>\u4ee5\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf\u3001dollar\u5f00\u59cb\u4f46\u4e0d\u53ef\u4ee5\u662f\u6570\u5b57</li> </ul>"},{"location":"java/java/#variable","title":"variable","text":"<ul> <li> <p>\u4e0d\u533a\u5206\u5b9a\u4e49\u548c\u58f0\u660e</p> </li> <li> <p>\u4e0d\u5b58\u5728\u5168\u5c40\u7684\u53d8\u91cf\uff0c\u90fd\u5728class\u91cc\u9762</p> </li> <li> <p>\u5728\u4e00\u4e2a\u65b9\u6cd5\u5185\u90e8\u5b9a\u4e49\u7684local\u53d8\u91cf\u4e0d\u5b58\u5728\u4e00\u4e2adefaut value\uff0c\u4f1a\u76f4\u63a5\u62a5\u51fa\u201c\u7f16\u8bd1\u65f6\u9519\u8bef\u201d</p> </li> </ul>"},{"location":"java/java/#final-vs-const","title":"final vs. const","text":"<p>final</p> <ul> <li>\u4fee\u9970 variable</li> <li>\u53d8\u91cf\u4e0d\u53ef\u6539\u53d8</li> <li>\u53ef\u4ee5\u5728 \u7f16\u8bd1\u65f6\u5019\u3001\u8fd0\u884c\u65f6\u5019\u3001\u6784\u9020\u51fd\u6570\u91cc\u521d\u59cb\u5316</li> <li>\u4fee\u9970 \u7c7bvariable</li> <li>\u8868\u793a\u8fd9\u4e2a\u53d8\u91cf\u4e0d\u53ef\u8d4b\u4e3a\u5176\u4ed6\u5bf9\u8c61</li> <li>final Value v = new Value(); v = new Value(); //\u4e0d\u5141\u8bb8\uff01</li> <li>\u4fee\u9970 method</li> <li>\u8868\u793a\u51fd\u6570\u4e0d\u53ef\u4ee5\u88ab\u91cd\u8f7d</li> <li>\u4fee\u9970 clase</li> <li>\u6574\u4e2a class \u4e0d\u80fd\u88ab\u7ee7\u627f</li> <li>class \u5185\u90e8\u7684\u6240\u6709\u65b9\u6cd5\u88ab\u52a0\u4e86 final \u4e0d\u53ef\u91cd\u8f7d</li> </ul>"},{"location":"java/java/#_1","title":"\u547d\u540d","text":"<ul> <li>\u53d8\u91cf\u548c\u65b9\u6cd5\uff1a\u5c0f\u5199</li> <li>class\uff1afirstletter\u5927\u5199</li> <li>\u5e38\u91cf\uff1a\u5168\u90e8\u5927\u5199</li> </ul>"},{"location":"java/java/#data-types","title":"data types","text":"<ul> <li> <p>\u6574\u578b\u7684\u8303\u56f4\u5177\u6709\u53ef\u79fb\u690d\u6027</p> </li> <li> <p>\u6ca1\u6709 sizeof()</p> </li> </ul>"},{"location":"java/java/#_2","title":"\u4ece\u952e\u76d8\u8bfb\u53d6\u6570\u636e\u7684\u65b9\u6cd5","text":"<pre><code>Scanner input = new Scanner(System.in);\nint value = input.nextInt();\n</code></pre> <ul> <li>nextByte(),nextShort(),nextInt(),nextLong(),nextFloat(),nextDouble()</li> <li>\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u7684token\u4f46\u7126\u70b9\u4e0d\u4f1a\u79fb\u52a8\u5230\u4e0b\u4e00\u884c</li> <li>\u56e0\u6b64\u5728nextint \u540e \u65e0\u63d0\u4f9b\u8f93\u5165\u800c nextline \u4f1a\u8bfb\u5230\u7a7a\u7684 string</li> </ul>"},{"location":"java/java/#calculation","title":"calculation","text":"<ul> <li>\u6574\u6570\u548c\u5c0f\u6570\u7684\u9664\u6cd5\u4e0e c \u4e00\u81f4</li> <li>\u6240\u6709\u6d89\u53ca\u5230\u5c0f\u6570\u7684\u8fd0\u7b97\u7ed3\u679c\u90fd\u662f approximate</li> <li>System.out.println(1.0 - 0.1 - 0.1 - 0.1 - 0.1 - 0.1);</li> <li>\u5c55\u793a 0.5000000000000001</li> <li>\u6307\u6570\u8fd0\u7b97\u4e0e python \u4e00\u81f4</li> <li>System.out.println(Math.pow(2, 3)); \u5c55\u793a 8</li> <li>\u53ef\u4ee5\u5c0f\u6570\u8d1f\u6570\u7b49</li> </ul>"},{"location":"java/java/#_3","title":"\u6570\u503c","text":"<p>literal</p> <ul> <li>\u5f53literal \u8d85\u51fa\u4e86\u5b83\u7c7b\u578b\u80fd\u627f\u62c5\u7684\u8303\u56f4\uff0c\u7f16\u8bd1\u5668\u62a5\u9519</li> <li>double vs. float</li> <li>\u51fa\u73b0\u5c0f\u6570\u7684\u65f6\u5019\u9ed8\u8ba4\u662f double\uff0c \u5f3a\u8c03\u4e86 F \u5219\u662f float</li> <li>System.out.println(\"1.0 / 3.0 is \" + 1.0 / 3.0); displays 1.0 / 3.0 is 0.3333333333333333 </li> <li>System.out.println(\"1.0F / 3.0F is \" + 1.0F / 3.0F); displays 1.0F / 3.0F is 0.33333334</li> <li>\u7279\u6b8a\u7684\u6d6e\u70b9\u6570\u503c</li> <li>\u6b63\u65e0\u7a77\u8d1f\u65e0\u7a77\uff1aDouble.POSITIVE_INFINITY Double.NEGATIVE_INFINITY</li> <li>\u7528 Double.isNaN\u6765\u5224\u65ad\u662f\u5426\u662f\u6570\u5b57</li> <li>\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0ce = *10\u591a\u5c11\u6b21</li> <li>i ++ \u540c c</li> </ul>"},{"location":"java/java/#current-time","title":"\u5c55\u793a current time \u7b97\u6cd5","text":"<p>\u51fd\u6570\uff1acurrentTimeMillis()</p> <p></p>"},{"location":"java/java/#_4","title":"\u7c7b\u578b\u8f6c\u5316","text":"<ul> <li>\u6709 double \u5c31\u90fd\u8f6c double</li> <li>\u6709 float \u5c31\u90fd\u8f6c float</li> <li>\u6709 long \u5c31\u90fd\u8f6c long</li> <li>\u9664\u4ee5\u4e0a\uff0c\u90fd\u8f6c int</li> <li>int-&gt;float, long-&gt;float, long-&gt;double \u8f6c\u6362\u5b58\u5728\u7cbe\u5ea6\u635f\u5931</li> </ul>"},{"location":"java/java/#_5","title":"\u5f3a\u5236\u7c7b\u578b\u8f6c\u5316","text":"<ul> <li>round \u56db\u820d\u4e94\u5165</li> <li>int round(float x)<ul> <li>return (int)Math.floor(x+0.5)</li> </ul> </li> <li>long round(double x)<ul> <li>return (long)Math.floor(x+0.5)</li> </ul> </li> <li>double x = 9.997</li> <li>int nx = (int)Math.round(x)</li> <li> <p>round\u8fd4\u56de\u7ed3\u679c\u662flong\u7c7b\u578b\uff0c\u56e0\u6b64\u8fd4\u56de\u540e\u8fd8\u8981\u52a0\u5f3a\u5236\u8f6c\u6362</p> </li> <li> <p>\u7279\u6b8a\u7684\uff0c\u5bf9\u4e8e\u5f62\u5f0f x1 op= x2\uff08\u5982 x1+=x2)</p> </li> <li>x1 = (T)*(x1 op x2)\uff0cT \u4e3a x1 \u7684\u7c7b\u578b</li> <li> <p>\u5982</p> <ul> <li>int sum = 0;</li> <li>sum += 4.5; </li> <li>sum becomes 4 after this statement</li> </ul> </li> <li> <p>java \u8981\u6c42\u663e\u793a\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5426\u5219\u62a5\u9519</p> </li> </ul>"},{"location":"java/java/#_6","title":"\u62a5\u9519","text":"<ul> <li>Undeclared/Uninitialized Variables and Unused Variables</li> <li>Integer Overflow</li> <li>Round-off Errors</li> <li>Unintended Integer Division</li> <li></li> <li></li> </ul>"},{"location":"java/java/#selections","title":"Selections","text":""},{"location":"java/java/#if-else","title":"if-else","text":"<ul> <li> <p>\u683c\u5f0f\u540c c</p> </li> <li> <p>else \u4e0e\u6700\u8fd1\u7684 if \u5339\u914d</p> </li> <li> <p>\u8981\u8ba9else\u4e0d\u548c\u6700\u8fd1\u7684 if \u5339\u914d\uff1a\u8bf7\u52a0 {}</p> </li> <li> <p>\u6ce8\u610f\u662f\u903b\u8f91\u9519\u8bef\uff01</p> </li> <li> <p><code>java     if (radius &gt;= 0);     {         area = radius*radius*PI;         System.out.println(         \"The area for the circle of radius \" +         radius + \" is \" + area);     }</code></p> </li> <li> <p>\u7b2c\u4e00\u884c\u591a\u4f59\u5206\u53f7</p> </li> </ul>"},{"location":"java/java/#boolean","title":"boolean","text":"<ul> <li> <p>bool\uff1atrue or false</p> </li> <li> <p>\u4ee5\u4e0b\u7b49\u4ef7</p> <ul> <li>if(even == true)</li> <li>if(even)</li> </ul> </li> <li>\u4ee5\u4e0b\u9519\u8bef<ul> <li>if(even != 0)</li> </ul> </li> <li> <p>bool\u548c\u6574\u6570\u4e0d\u53ef\u4ee5\u76f8\u4e92\u8fdb\u884c\u8f6c\u6362</p> </li> <li> <p>\u64cd\u4f5c\u7b26</p> </li> <li> <p>! </p> </li> <li> <p>&amp;&amp;</p> </li> <li> <p>||</p> </li> <li> <p>^</p> </li> <li> <p>\u533a\u5206 python</p> </li> <li> <p>\u7ed3\u5408\u987a\u5e8f</p> </li> <li> <p>&amp;&amp; ||: \u77ed\u8def\u7684\u65b9\u5f0f\u6c42\u503c</p> <ul> <li>\u5982\u679c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u5df2\u7ecf\u80fd\u591f\u786e\u5b9a\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u5c31\u4e0d\u5fc5\u8ba1\u7b97\u4e86</li> </ul> </li> <li></li> </ul>"},{"location":"java/java/#switch","title":"switch\u8bed\u53e5","text":"<ul> <li>\u683c\u5f0f\u540c c</li> <li>switch \u540e\u8868\u8fbe\u5f0f\u53ea\u80fd\u662f\uff1abyte\u3001short\u3001char\u3001int\uff08java1.6\uff09\uff0c\u548cstring\uff08java1.7\uff09</li> <li>\u6ce8\u610f\uff01\uff01\u4e0d\u652f\u6301\u5bf9 string \u7684\u5224\u65ad</li> <li>\u8fd9\u91cc\u8fd8\u662f\u8981\u6ce8\u610f break\uff0c\u6ca1break\u5c31\u662ftrace \u7684\u60c5\u51b5</li> </ul>"},{"location":"java/java/#conditional-expressions","title":"Conditional Expressions","text":"<p>(boolean-expression) ? expression1 : expression2</p> <pre><code>if (num % 2 == 0)\n    System.out.println(num + \u201cis even\u201d);\nelse \n    System.out.println(num + \u201cis odd\u201d);\n</code></pre> <pre><code>System.out.println((num % 2 == 0)? num + \u201cis even\u201d :num + \u201cis odd\u201d);\n</code></pre>"},{"location":"java/java/#_7","title":"\u4f18\u5148\u7ea7","text":"<ul> <li>v++ v--</li> <li><code>+</code> <code>-</code> \uff08\u6b63\u6570\u8d1f\u6570\uff09++v --v</li> <li>\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362</li> <li>!</li> <li><code>*</code> <code>/</code> <code>%</code> </li> <li><code>+</code> <code>-</code> \u52a0 \u51cf</li> <li>&lt; &lt;= &gt; &gt;=</li> <li>== != </li> <li>^ (Exclusive OR)</li> <li>&amp;&amp; AND</li> <li>|| OR</li> <li>= += -= *= /= %=</li> </ul>"},{"location":"java/java/#4-mathematical-functions-characters-and-strings","title":"4 Mathematical Functions, Characters, and Strings","text":"<p>\u611f\u89c9\u4ece\u8fd9\u4e00\u7ae0\u6765\u8bf4java\u8ddfpython\u6bd4\u8f83\u50cf</p> <p>\u5df2\u77e5\uff1aPI, E</p>"},{"location":"java/java/#_8","title":"\u4e09\u89d2\u51fd\u6570","text":"<ul> <li>\u683c\u5f0f\uff1asin(double a), cos, tan, acos, asin, atan</li> <li>\u4f7f\u7528</li> <li>Math.sin(0) returns 0.0</li> <li>Math.sin(Math.PI / 6) returns 0.5</li> <li>Math.cos(0) returns 1.0</li> <li>Math.cos(Math.PI / 2) returns 0</li> </ul>"},{"location":"java/java/#_9","title":"\u6307\u6570","text":"<ul> <li>exp(double a)\uff0clog(double a)\uff0clog10(double a)\uff0cpow(double a, double b)\uff0csqrt(double a)</li> <li>\u4f7f\u7528</li> <li>Math.exp(1) returns 2.71</li> <li>Math.log(2.71) returns 1.0</li> <li>Math.pow(3, 2) returns 9.0</li> <li>Math.sqrt(4) returns 2.0</li> </ul>"},{"location":"java/java/#_10","title":"\u53d6\u6574","text":"<ul> <li>double ceil(double x)</li> <li>double floor(double x)</li> <li>double rint(double x)</li> <li>\u6700\u8fd1\u7684\u6574\u6570</li> <li>\u5982\u679c\u662f0.5\uff0c\u4ee5double\u5f62\u5f0f\u8fd4\u56deeven\uff08\u5076\u6570\u7684\uff09\u7684\u6574\u6570</li> <li>int round(float x)</li> <li>long round(double x)</li> </ul>"},{"location":"java/java/#min-max-and-abs","title":"min, max, and abs","text":"<ul> <li>max(a, b) min(a, b)</li> <li>Math.max(2.5, 3) returns 3.0</li> <li>abs(a)</li> <li>Math.abs(-2.1) returns 2.1</li> <li>random()</li> <li>\u8303\u56f4 [0.0, 1.0)</li> <li>a + Math.random() * b \u8303\u56f4 [a, a+b)</li> </ul>"},{"location":"java/java/#character-data-type","title":"Character Data Type","text":"<ul> <li>char letter = 'A'; (ASCII)</li> <li>char numChar = '4'; (ASCII)</li> <li>char letter = '\\u0041'; (Unicode)</li> <li>\\u \u8868\u793a\u5341\u516d\u8fdb\u5236</li> <li>\u5e38\u7528</li> <li> </li> <li> <p>\u5f3a\u5236\u7c7b\u578b\u8f6c\u5316</p> </li> <li>int i ='a'; // Same as int i = (int)'a'\uff1b</li> <li> <p>char c = 97; // Same as char c = (char)97;</p> </li> <li> <p>\u65b9\u6cd5</p> </li> <li>isDigit(ch), isLetter(ch), isLetterOfDigit(ch), isLowerCase(ch), isUpperCase(ch), toLowerCase(ch),, to UpperCase(ch)</li> </ul>"},{"location":"java/java/#string","title":"String","text":"<p>The String type is not a primitive type. It is known as a reference type</p> <ul> <li>\u65b9\u6cd5</li> <li>length()</li> <li>charAt(index)</li> <li>concat(s1): \u8fd4\u56de\u4e00\u4e2a\u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u548c s1 \u5b57\u7b26\u4e32\u76f8\u8fde\u7684\u7ed3\u679c<ul> <li>s3 = s1.concat(s2) \u7b49\u4e8e s3 = s1 + s2</li> <li>String s = \"Chapter\" + 2; // s becomes Chapter2</li> </ul> </li> <li>toUpperCase()</li> <li>toLowerCase()</li> <li>trim(): \u8fd4\u56de\u4ee5\u4e00\u4e2a\u4e24\u4fa7\u90fd\u662f\u7a7a\u767d\u5b57\u7b26\u7684\u5b57\u7b26\u4e32</li> <li>\u4ee5\u4e0a\u53eb\u505a instance methods\uff08\u56e0\u4e3a\u5e26\u6709\u7279\u5b9a\u7684string\u5b9e\u4f8b\uff09\uff0c\u5426\u5219\u53eb\u505a static method</li> <li>\u6240\u6709\u5b9a\u4e49\u5728 math \u91cc\u9762\u7684\u90fd\u662f\u9759\u6001\u65b9\u6cd5</li> <li> <p>\u9759\u6001\u65b9\u6cd5\uff1areferenceVariable.methodName(arguments).</p> </li> <li> <p>java \u7684 length \u8ba1\u6570\u548c index \u8ba1\u6570\u4e0e c \u4e00\u81f4</p> </li> <li> <p>\u4ece\u63a7\u5236\u53f0\u8bfb\u53d6 string</p> </li> <li>\u76f4\u5230\u9047\u5230\u7b2c\u4e00\u4e2a\u7a7a\u683c\u6216\u6362\u884c\u7b26\u5206\u5f00<ul> <li>Scanner input = new Scanner(System.in);</li> <li>String s1 = input.next();</li> </ul> </li> <li>\u626b\u63cf\u5269\u4f59\u6240\u6709\u5b57\u7b26\u4e32\u76f4\u5230\u56de\u8f66<ul> <li>Scanner input = new Scanner(System.in);</li> <li>String s1 = input.nextline();</li> <li>\u518d\u7528 charAt \u51fd\u6570\u6765\u8bfb\u53d6\u5355\u4e2a\u5b57\u6bcd</li> <li>\u4f1a\u8bfb\u53d6\u8fd9\u4e00\u884c\u7684\u6240\u6709\u5269\u4f59\u5185\u5bb9\uff08\u5305\u62ec\u7a7a\u683c\u548c\u6362\u884c\u7b26\uff09\uff0c\u7136\u540e\u628a\u7126\u70b9\u79fb\u52a8\u5230\u4e0b\u4e00\u884c</li> </ul> </li> <li>substring</li> <li>note\uff1a\u6240\u6709\u627e\u4e0d\u5230\u90fd\u8fd4\u56de -1\uff08\u533a\u5206python</li> <li>indexOf(ch): \u627e\u7b2c\u4e00\u6b21\u51fa\u73b0ch\u7684index</li> <li>indexOf(ch, fromIndex)\uff1a\u4ece fromIndex \u5f00\u59cb\u627ebalabaa</li> <li>indexOf(s): \u627e\u7b2c\u4e00\u6b21\u51fa\u73b0 string s \u7684index</li> <li>indexOf(s, fromIndex)</li> <li>lastIndexOf(ch): \u627e \u6700\u540e\u4e00\u6b21 balabala</li> <li>lastIndexOf(ch, fromIndex)</li> <li>lastIndexOf(s)</li> <li>lastIndexOf(s, fromIndex)</li> <li>\u5206\u79bb\u5b50\u4e32</li> <li>\u7a7a\u683c\u5206\u9694<ul> <li>int k = s.indexOf(' ');</li> <li>String firstName = s.substring(0, k);</li> <li>String lastName = s.substring(k + 1);</li> </ul> </li> <li>s.substring(0, k) \u8868\u793a\u4ece index \u4e3a 0 \u5f00\u59cb\u5230 index \u4e3a k</li> <li>s.substring(k) \u8868\u793a\u4ece index \u4e3a k \u5f00\u59cb\u5230\u672b\u5c3e</li> </ul>"},{"location":"java/java/#formatting-output","title":"Formatting Output","text":"<ul> <li> <p>System.out.printf(format, items); \u540cc</p> </li> <li> <p>%b boolean, %c character, %d decimal integer, %f float</p> </li> <li>%e \u79d1\u5b66\u8ba1\u6570\u6cd5, %s string</li> <li> <p>\u5bf9 float \u6216 double \u7684\u7cbe\u5ea6\u63a7\u5236\u540c c</p> </li> <li> <p>\u7d22\u5f15</p> </li> <li> <p>\u7d27\u8ddf%\uff0c\u4ee5$\u7ed3\u675f</p> </li> <li> <p>\u7ffb\u4e66\u53bb\u7ffb\u4e66\u53bb\u6211\u7834\u9632\u4e86</p> </li> <li> <p>\u8f6c\u6362\u7b26</p> </li> <li> <p>b: boolean</p> </li> <li>n\uff1a\u6362\u884c\u7b26</li> <li>f\uff1a\u5341\u8fdb\u5236\u6d6e\u70b9\uff0c\u663e\u793a9\u4f4d\u6709\u6548\u6570\u5b57\u56db\u820d\u4e94\u5165</li> <li>a: 16\u8fdb\u5236\u6d6e\u70b9</li> <li>e\uff1a\u6307\u6570\uff08\u79d1\u5b66\u8ba1\u6570\u6cd5</li> <li> <p>g\uff1a\u6d6e\u70b9\uff0c\u663e\u793a6\u4f4d\u6709\u6548\u6570\u5b57\u56db\u820d\u4e94\u5165</p> </li> <li> <p>string \u7684\u683c\u5f0f\u5316\u8f93\u51fa</p> </li> <li> <p>\"%s\" \u9760\u53f3</p> <ul> <li>String str = String.format(\"%7s\", \"hello\")</li> <li>\u8f93\u51fa \"  hello\"</li> </ul> </li> <li> <p>\"%-s\" \u9760\u5de6</p> <ul> <li>String str = String.format(\"%-7s\", \"hello\")</li> <li>\u8f93\u51fa \"hello  \"</li> </ul> </li> <li> <p>\u6574\u6570\u683c\u5f0f\u5316</p> </li> <li> <p>\"%04d\": \u957f\u5ea6\u6ca14\u5728\u524d\u9762\u88650</p> </li> <li> </li> <li>+\uff1a\u7ed3\u679c\u603b\u5305\u542b\u4e00\u4e2a + \u53f7\uff0c- \u540c\u7406</li> <li>\u7a7a\u683c\uff1a\u6b63\u6570\u524d\u7a7a\u683c\uff0c\u8d1f\u6570\u524d\u52a0 -</li> <li>,: \u7528\u4e8e\u5341\u8fdb\u5236\u4e0b\u4e09\u4e2a\u6570\u5b57\u4e4b\u95f4\u5206\u9694</li> <li> <p>(: \u82e5\u7ed3\u679c\u8d1f\u6570\u5219\u7528\u62ec\u53f7\u62ec\u4f4f\u4e14\u4e0d\u663e\u793a\u7b26\u53f7</p> </li> <li> <p>\u65e5\u671f\u65f6\u95f4\uff08\u4e0d\u6253\u7b97\u624b\u6413ppt\u4e86\u3001\u3001\u3001\u3001\u5bf9\u7740Java\u4e66\u7ffb\u5427\u592a\u65e0\u52a9\u4e86</p> </li> </ul>"},{"location":"java/java/#8-016-0x","title":"\uff1a\u5bf98\u8fdb\u5236\u524d\u9762\u52a0 0\uff0c16\u8fdb\u5236\u524d\u9762\u52a0 0x","text":""},{"location":"java/java/#5-loops","title":"5 Loops","text":"<ul> <li> <p>\u57fa\u672c\u6309\u7167 c</p> </li> <li> <p>sentitial value \u62a5\u8b66\u9608\u503c\uff08\u7ed3\u675f\u5faa\u73af\uff09</p> </li> <li> <p>\u4e0d\u8981\u4f7f\u7528 \u6d6e\u70b9\u6570 \u53bb\u505a\u4e00\u4e2a\u5faa\u73af\u5185\u7684 equality checking\uff0c\u56e0\u4e3a\u6d6e\u70b9\u6570approximate\u4e0d\u51c6\u786e</p> </li> <li> <p>\u540c\u7406\uff0cfor \u5faa\u73af\u540e\u9762\u52a0\u4e0a \uff1b \u4e5f\u662f\u903b\u8f91\u9519\u8bef\uff08\u8ddfifelse\u4e00\u6837\uff09</p> </li> <li> <p>\u5173\u4e8e label</p> </li> <li> <p>break</p> <ul> <li><code>java   label:   {       ...       if(condition) break label; //\u9000\u51fablock       ...   }</code></li> </ul> </li> <li> <p>\u5728\u8fd9\u91cc continue label \u7684\u4f5c\u7528\u548c break label\u4e00\u6837</p> </li> </ul>"},{"location":"java/java/#java-for","title":"java \u7684\u7b80\u6d01 for \u5faa\u73af","text":"<p>\u7528\u4e8e\u6570\u7ec4\u548c\u5bb9\u5668</p> <pre><code>float[] f = new float[10];\n...//\u8d4b\u503c\nfor (float x: f){\n    ...\n}\n</code></pre> <p>\u6216</p> <pre><code>for (char c : \"Zhejiang University\".toCharArray()){\n    ...\n}\n</code></pre>"},{"location":"java/java/#6-methods","title":"6 Methods","text":""},{"location":"java/java/#_11","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0\u8fd4\u56de\u503c\u65f6 void</p> <p>\u5b58\u5728\u7f16\u8bd1\u9519\u8bef\uff1a\u7f16\u8bd1\u5668\u4ee5\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u6ca1\u6709\u8fd4\u56de\u503c</p> <p></p>"},{"location":"java/java/#reuse-methods-from-other-classes","title":"Reuse Methods from Other Classes","text":"<p>\u4f7f\u7528 <code>ClassName.methodName</code> \u6765reuse</p>"},{"location":"java/java/#call-stack","title":"call stack","text":"<p>\u4e86\u89e3 call stack \u7684\u8fc7\u7a0b\uff0c\u5f62\u53c2\u548c\u5b9e\u53c2\u5728 stack \u4e2d\u5206\u5f00</p> <p></p>"},{"location":"java/java/#overloading","title":"overloading","text":"<p>\u86ee\u5e38\u89c4</p> <pre><code>public static int main(int n1, int n2){\n    if(n1 &gt; n2)\n        return n1;\n    else\n        return n2;\n}\npublic static double max(double n1, double n2){\n    if(n1 &gt; n2)\n        return n1;\n    else\n        return n2;\n}\npublic static double max(double n1, double n2, double n3){\n    return max(n1, max(n2, n3));\n}\n</code></pre> <p>ps: static \u4fee\u9970 method</p> <ul> <li>\u9759\u6001\u65b9\u6cd5\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u7c7b\u7684\u5b9e\u4f8b\uff08\u5bf9\u8c61\uff09\u3002</li> <li>\u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8c03\u7528\uff0c\u800c\u4e0d\u9700\u8981\u521b\u5efa\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c<code>ClassName.methodName()</code>\u3002</li> <li>\u9759\u6001\u65b9\u6cd5\u4e2d\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u53d8\u91cf\u6216\u5176\u4ed6\u9759\u6001\u65b9\u6cd5\uff0c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5b9e\u4f8b\u53d8\u91cf\u6216\u5b9e\u4f8b\u65b9\u6cd5\uff08\u56e0\u4e3a\u5b9e\u4f8b\u53d8\u91cf\u548c\u5b9e\u4f8b\u65b9\u6cd5\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u800c\u9759\u6001\u65b9\u6cd5\u5728\u7c7b\u52a0\u8f7d\u65f6\u5c31\u5b58\u5728\uff09\u3002</li> </ul>"},{"location":"java/java/#ambiguous-invocation","title":"Ambiguous Invocation","text":"<ul> <li> <p>\u7f16\u8bd1\u9519\u8bef\uff1a\u7f16\u8bd1\u5668\u4e0d\u80fd\u786e\u5b9a\u4f7f\u7528\u54ea\u4e2a\u65b9\u6cd5\uff08\u6709\u4e24\u4e2a\u65b9\u6cd5\u90fd\u53ef\u4ee5 possibly match\uff09</p> </li> <li> <p>\u5982</p> </li> <li>\u5b9a\u4e49\u51fd\u6570\uff1adouble max(int n1, double n2) \u548c double max(double n1, int n2)</li> <li>\u4f7f\u7528\u51fd\u6570\uff1amax(1, 2)</li> </ul>"},{"location":"java/java/#local","title":"local \u53d8\u91cf\u7684\u4f5c\u7528\uff08\u8d1f\u8d23/\u7ba1\u7406\uff09\u8303\u56f4","text":"<ul> <li>local \u53d8\u91cf\uff1a\u5b9a\u4e49\u5728\u4e00\u4e2a\u65b9\u6cd5\u91cc\u9762\u7684 \u53d8\u91cf</li> <li>\u5fc5\u987b\u5728\u4f7f\u7528\u524d\u5b9a\u4e49\uff08\u58f0\u660e = \u5b9a\u4e49\uff09</li> <li>\u4f5c\u7528\u8303\u56f4\uff1a\u88ab\u5b9a\u4e49 - \u5305\u542b\u8fd9\u4e2a\u53d8\u91cf\u7684\u6a21\u5757\u7684 end </li> <li>\u4e0d\u53ef\u4ee5\u5728\u5d4c\u5957\uff08nested block\uff09\u4e2d\u5b9a\u4e49\u4e24\u6b21 local \u53d8\u91cf</li> </ul>"},{"location":"java/java/#case-study-generating-random-characters","title":"Case Study: Generating Random Characters","text":"<p><code>(char)(ch1 + Math.random() * (ch2 \u2013 ch1 + 1))</code></p>"},{"location":"java/java/#main","title":"Main","text":"<p>main \u65b9\u6cd5\u53ea\u662f\u4e00\u4e2a\u5f88\u666e\u901a\u7684\u65b9\u6cd5</p> <p></p>"},{"location":"java/java/#7-single-dimensional-arrays","title":"7 Single-Dimensional Arrays","text":"<p>\u5206\u914d\u5728\u5806\u4e0a\uff08cpp\u5728\u6808\uff09</p> <ul> <li>\u4e0d\u53ef\u4ee5 int a[100];</li> <li>Java\u4e2d\u7684[]\u8fd0\u7b97\u7b26\u88ab\u9884\u5b9a\u4e49\u4e3a\u68c0\u67e5\u6570\u7ec4\u8fb9\u754c\uff0c\u800c\u4e14\u6ca1\u6709\u6307\u9488\u8fd0\u7b97\uff0c\u5c31\u4e0d\u80fd\u901a\u8fc7a+1\u5f97\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002</li> <li>\u547d\u4ee4\u884c\u53c2\u6570\uff0cargs[0]\u662f\u7b2c\u4e00\u4e2a\u53c2\u6570</li> <li>\u7a0b\u5e8f\u540d\u6ca1\u6709\u5b58\u50a8\u5728args\u4e2d</li> </ul>"},{"location":"java/java/#_12","title":"\u58f0\u660e\u548c\u521b\u9020","text":"<ul> <li>declare</li> <li><code>double[] myList;</code></li> <li><code>double myList[];</code> not preferred</li> <li>create</li> <li><code>myList = new double[10];</code><ul> <li>\u9996\u4f4d\u662f myList[0]\uff0c\u672b\u5c3e\u662f myList[9]</li> </ul> </li> <li>\u4e00\u6b65\u5185 declare \u548c create</li> <li><code>double[] myList = new double[10];</code></li> <li><code>double myList[] = new double[10];</code></li> <li>\u4e00\u79cd\u7279\u6b8a\u7684creat\u7ed3\u679c\uff1aanonymous array</li> <li>\u6ca1\u6709\u663e\u5f0f\u7684\u5f15\u7528\u5bf9\u8c61</li> <li><code>new dataType[]{literal0, literal1, ..., literalk};</code></li> <li> <p><code>new int[]{3, 1, 2, 6, 4, 2}</code></p> </li> <li> <p>array \u88ab\u521b\u9020\u65f6\u5c31\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684 value</p> </li> <li>\u6570\u5b57\u578b\u7684 type \u662f 0</li> <li>char \u662f '\\u0000'</li> <li>boolean \u662f false</li> <li>\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 myList.length \u6765\u83b7\u53d6\u957f\u5ea6</li> </ul>"},{"location":"java/java/#_13","title":"\u521d\u59cb\u5316","text":"<ul> <li>\u4e00\u53e5\u8bdd\uff1a<code>double[] myList = {1.9, 2.9, 3.4, 3.5};</code></li> <li> <p>\u6ce8\u610f\uff1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u65f6\u5fc5\u987b\u4e00\u53e5\u8bdd\u89e3\u51b3\uff0c\u4ee5\u4e0b\u62a5\u9519\uff1a</p> <ul> <li>double[] myList;</li> <li>myList = {1.9, 2.9, 3.4, 3.5};</li> </ul> </li> <li> <p>\u6216\u8005\u5206\u5f00</p> </li> <li>double[] myList = new double[4];</li> <li>myList[0] = 1.9;</li> <li>myList[1] = 2.9;</li> <li>myList[2] = 3.4;</li> <li>myList[3] = 3.5;</li> </ul>"},{"location":"java/java/#initializing-arrays-with-input-values","title":"Initializing arrays with input values","text":"<pre><code>Scanner input = new Scanner(System.in);\nSystem.out.print(\"Enter\" + myList.length + \"values:\");\nfor (int i = 0; i &lt; mtList.length; i ++){\n    myList[i] = input.nextDouble();\n}\n</code></pre> <p>random values:</p> <pre><code>myList[i] = Math.random() * 100;\n</code></pre>"},{"location":"java/java/#enhanced-for-loop","title":"enhanced for loop","text":"<pre><code>for (double value: myList) \nSystem.out.println(value);\n</code></pre> <pre><code>for (elementType value: arrayRefVar) {\n// Process the value\n}\n</code></pre>"},{"location":"java/java/#copying-arrays","title":"Copying Arrays","text":"<ul> <li>arraycopy</li> <li><code>arraycopy(sourceArray, src_pos, targetArray, tar_pos, length);</code></li> <li>arrays \u7684 copyOf()</li> <li><code>int[] copiedLuckyNumbers = Arrays.copyOf(luckNumbers,luckyNumbers.length);</code></li> <li>\u7b2c2\u4e2a\u53c2\u6570\u662f\u65b0\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u901a\u5e38\u7528\u6765\u589e\u52a0\u6570\u7ec4\u7684\u5927\u5c0f<ul> <li><code>int[] copiedLuckyNumbers = Arrays.copyOf(luckNumbers,2*luckyNumbers.length);</code></li> </ul> </li> <li>\u65b0\u6570\u7ec4\u957f\u5ea6 &gt; \u88ab copy \u7684<ul> <li>\u6570\u503c\u578b\uff1a\u8865 0</li> <li>boolean \u578b\uff1a\u8865 false</li> </ul> </li> </ul>"},{"location":"java/java/#_14","title":"\u4f20\u53c2","text":"<ul> <li>\u5bf9\u4e8e\u539f\u59cb\u7c7b\u578b\u503c primitive type value \u7684\u53c2\u6570</li> <li>\u4f20\u9012\u5b9e\u9645\u503c</li> <li>\u66f4\u6539\u65b9\u6cd5\u5185\u90e8\u5c40\u90e8\u53c2\u6570\u7684\u503c\u4e0d\u4f1a\u5f71\u54cd\u65b9\u6cd5\u5916\u90e8\u53d8\u91cf\u7684\u503c\u3002</li> <li>\u6307\u9664\u4e86 object \u5916\u7684type</li> <li>\u5bf9\u4e8e\u6570\u7ec4 array \u7c7b\u578b\u7684\u53c2\u6570</li> <li>\u5bf9\u6570\u7ec4\u7684\u5f15\u7528\u88ab\u4f20\u9012\u7ed9\u8be5\u65b9\u6cd5\uff08\u7c7b\u4f3c\u6307\u9488\uff09</li> <li>\u65b9\u6cd5\u4f53\u5185\u53d1\u751f\u7684\u4efb\u4f55\u6570\u7ec4\u66f4\u6539\u90fd\u4f1a\u5f71\u54cd\u4f5c\u4e3a\u65b9\u6cd5\u4f20\u9012\u7684\u539f\u59cb\u6570\u7ec4</li> <li>\u56e0\u4e3a java \u4e2d array \u4ee5\u4efb\u610f\u7684\u987a\u5e8f\u5b58\u653e\u5728 heap\uff08\u7528\u4e8e\u52a8\u6001\u5206\u914d\u5185\u5b58\uff09 \u4e2d</li> </ul>"},{"location":"java/java/#array","title":"\u5f53\u8fd4\u56de\u503c\u662f\u4e00\u4e2aarray","text":"<pre><code>public static int[] reverse(int[] list){\n    int[] result = new int[list.length];\n    ...\n    return result;\n}\n</code></pre>"},{"location":"java/java/#search","title":"Search","text":"<ul> <li>\u7ebf\u6027\u641c\u7d22</li> <li>\u4e8c\u5206\u6cd5\u641c\u7d22</li> </ul>"},{"location":"java/java/#sort","title":"sort","text":"<ul> <li> <p>selection sort</p> </li> <li> <p>Arrays.sort \u65b9\u6cd5</p> </li> <li> <p><code>java     double[] numbers = {6.0, 4.4, 1.9, 2.9, 3.4, 3.5};     java.util.Arrays.sort(numbers);</code></p> </li> <li> <p><code>java     char[] chars = {'a', 'A', '4', 'F', 'D', 'P'};     java.util.Arrays.sort(chars);</code></p> </li> </ul>"},{"location":"java/java/#8-multidimensional-arrays","title":"8 Multidimensional Arrays","text":""},{"location":"java/java/#delarecreate","title":"delare/create","text":"<ul> <li>declare</li> <li><code>dataType[][] refVar;</code></li> <li>create and assign reference</li> <li><code>refVar = new dataType[10][10];</code></li> <li>declare and create</li> <li><code>dataType[][] refVar = new dataType[10][10];</code></li> <li><code>dataType refVar[][] = new dataType[10][10];</code></li> </ul>"},{"location":"java/java/#length","title":"length","text":"<p><code>int[][] x = new int[3][4];</code> </p> <ul> <li>x.length = 3</li> <li>x[0].length = x[1].length = x[2].length = 4</li> </ul> <p>\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u4e00\u5b9a\u5fc5\u987b\u8981\u6709length</p>"},{"location":"java/java/#ragged-arrays","title":"Ragged Arrays","text":"<p>\u5bf9\u4e0d\u540c row \u6709\u4e0d\u540c\u957f\u5ea6\u7684 length</p> <pre><code>int[][] matrix = { \n{1, 2, 3, 4, 5},\n{2, 3, 4, 5},\n{3, 4, 5},\n{4, 5},\n{5}\n};\n</code></pre> <p>matrix.length is 5</p> <p>matrix[0].length is 5</p> <p>matrix[1].length is 4</p> <p>matrix[2].length is 3</p> <p>matrix[3].length is 2</p> <p>matrix[4].length is 1</p>"},{"location":"java/java/#_15","title":"\u904d\u5386","text":"<ul> <li>\u5bf9 row: for(int i = 0; i &lt; array.length; i ++){}</li> <li>\u5bf9 colomnn: for(int j = 0; j &lt; array[i].length; j ++){}</li> </ul>"},{"location":"java/java/#9-objects-and-classes","title":"9 Objects and Classes","text":"<p>class: datafield, constructors, method</p>"},{"location":"java/java/#constructor","title":"constructor","text":"<pre><code>Circle() {\n}\nCircle(double newRadius) { \n    radius = newRadius;\n}\n</code></pre> <ul> <li>\u4f7f\u7528 constructor \u521b\u5efa object</li> <li><code>new Circle();</code></li> <li><code>new Circle(5.0);</code></li> <li>default constructor</li> <li>\u5f53\u6ca1\u6709 constructor \u88ab\u663e\u5f0f\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u521b\u5efa\u5bf9\u8c61\u5c31\u4f7f\u7528\u9ed8\u8ba4 constructor</li> <li><code>Circle rr = new Circle()</code></li> </ul>"},{"location":"java/java/#object","title":"object","text":"<ul> <li>\u4e00\u6b21\u6027\u5b9a\u4e49\u548c\u521b\u9020 object</li> <li><code>Circle myCircle = new Circle()</code></li> <li>\u8bbf\u95ee\u6210\u5458</li> <li><code>myCircle.radius</code></li> <li><code>myCircle.getArea()</code><ul> <li>\u8fd9\u91cc <code>getArea()</code> \u4e0d\u662f static</li> <li>\u533a\u5206 <code>Math.pow()</code></li> </ul> </li> </ul>"},{"location":"java/java/#datafield","title":"datafield","text":"<ul> <li>default value</li> <li>reference: null</li> <li>numeric: 0</li> <li>boolean: false</li> <li>char: '/u0000'</li> <li>\u6ce8\u610f\uff1ajava\u5bf9\u4e00\u4e2a\u65b9\u6cd5\u91cc\u9762\u7684local value\u4e0d\u4f1a\u6709default\u503c</li> </ul>"},{"location":"java/java/#garbage-collection","title":"Garbage Collection","text":"<p>\u4e00\u4e2a\u5bf9\u8c61\u6ca1\u6709 reference \u6307\u5411\uff0c\u5c31\u4f1a\u4f5c\u4e3a\u5783\u573e\u56de\u6536\u6389</p> <p>\u4f46\u4e0d\u662f \u770b\u5230 null \u5c31\u76f4\u63a5\u56de\u6536\u4e86 \uff0c\u662f\u770b\u5230\u7cfb\u7edf\u8d44\u6e90\u53bb\u770b\u60c5\u51b5\u56de\u6536</p> <p></p> <p>\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\uff0cpop \u51fa\u6765\u4f46 reference \u8fd8\u662f\u6307\u5411\u5b83\uff0c\u8981\u628areference \u6307\u5411\u8bbe\u7f6e\u5230 null</p>"},{"location":"java/java/#class","title":"\u5176\u4ed6class","text":"<ul> <li> <p>date class</p> </li> <li> <p>random class</p> </li> <li>\u53d6seed\u4e0d\u53ef\u4ee5\u91cd\u590d\uff0c\u7ecf\u5e38\u53d6\u65f6\u95f4\u4e3a\u79cd\u5b50</li> </ul>"},{"location":"java/java/#static","title":"static","text":"<ul> <li>\u4e0d\u53d7\u5b9e\u53c2\u7684\u5f71\u54cd</li> <li>static \u65b9\u6cd5\u53ea\u80fd\u8bbf\u95ee static \u53d8\u91cf\u548c\u65b9\u6cd5</li> <li>instance \u65b9\u6cd5\u80fd\u8bbf\u95ee instance \u548c static \u53d8\u91cf\u548c\u65b9\u6cd5</li> </ul> <p>\u611f\u89c9\u4e0a\u662f\u62ff static \u4f5c\u4e3a\u5168\u5c40\u7684</p>"},{"location":"java/java/#private","title":"private","text":"<ul> <li>default</li> <li>\u5728\u4e00\u4e2apackage\u91cc\u9762\u90fd\u53ef\u4ee5\u8bbf\u95ee</li> <li>public</li> <li>\u5728\u6240\u6709\u5730\u65b9\u90fd\u53ef\u4ee5\u8bbf\u95ee</li> <li>private</li> <li>\u53ea\u6709\u5728 class \u5185</li> <li>\u5bf9\u79bb\u5f00\u4e86\u8fd9\u4e2aclass\uff0cobject\u4e5f\u4e0d\u53ef\u4ee5\u8bbf\u95eeprivate \u7684\u6210\u5458</li> <li>private Constructor</li> <li>\u4e0d\u80fd\u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b\uff0c\u7c7b\u53ea\u80fd\u88ab\u9759\u6001\u8bbf\u95ee<ul> <li>Math</li> </ul> </li> <li>\u53ea\u80fd\u521b\u5efa\u4e00\u6b21\uff0c\u8981\u63a7\u5236\u5bf9\u8c61\uff0c\u4e0d\u53ef\u4ee5 new<ul> <li>\u5355\u4f8b\u6a21\u5f0f</li> </ul> </li> <li>\u53ea\u80fd\u88ab\u5176\u4ed6\u6784\u9020\u51fd\u6570\u8c03\u7528\uff0c\u7528\u4e8e\u51cf\u5c11\u91cd\u590d\u4ee3\u7801</li> </ul>"},{"location":"java/java/#uml","title":"UML","text":"<ul> <li><code>-</code> \u8868\u793a private</li> <li>\u4e0b\u5212\u7ebf\u8868\u793a static</li> </ul>"},{"location":"java/java/#_16","title":"\u7c7b\u548c\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f","text":"<ul> <li>\u7c7b</li> <li>\u53ea\u8981\u78b0\u5230\u4e86\u8fd9\u4e2a\u7c7b\uff0c\u5c31\u5f00\u59cb</li> <li>\u7a0b\u5e8f\u7ed3\u675f\u624d\u6d88\u5931</li> <li>\u5bf9\u8c61</li> <li>new \u7684\u65f6\u5019\u5f00\u59cb</li> <li>\u6bcf new \u4e00\u6b21\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u53d8\u5bf9\u8c61</li> <li>reference \u6307\u5411 null \u7684\u65f6\u5019\u6d88\u5931</li> </ul>"},{"location":"java/java/#_17","title":"\u4f20\u503c","text":"<p>\uff08\u6ca1\u6709\u6307\u9488\u8fd9\u4e2a\u8bf4\u6cd5\uff0creference \u4f20\u7c7b\u4f3c\u4e8e\u5730\u5740\u7684\u503c\uff09</p> <p>\u8fd8\u662f\u5f3a\u8c03 int \u7ecf\u8fc7\u65b9\u6cd5\u540e\u4e0d\u6539\u53d8\u800c reference \u6539\u53d8\uff0c\u540c\u4e0a</p> <p>object \u7ecf\u8fc7\u65b9\u6cd5\u540e\u5e76\u6ca1\u6709\u53d1\u751f\u53d8\u5316</p>"},{"location":"java/java/#immutable-objects-and-classes","title":"\u4e0d\u53ef\u53d8\u5bf9\u8c61\u548c\u7c7b Immutable Objects and Classes","text":"<ul> <li> <p>\u4e0d\u53ef\u53d8\u5bf9\u8c61</p> </li> <li> <p>\u4e00\u65e6\u5bf9\u8c61\u521b\u5efa\u4e86\u5b83\u5185\u90e8\u5c31\u4e0d\u53ef\u53d8-&gt;\u53ea\u6709\u4e00\u79cd\u72b6\u6001\uff08\u88ab\u521b\u5efa\u65f6\u7684\u72b6\u6001\uff09</p> </li> <li>\u8bbe\u7f6e private\uff08\u4e0d\u662f\u5fc5\u987b\u7684\uff09\u6216\u8005\u4e0d\u63d0\u4f9b set \u65b9\u6cd5\u53ea\u63d0\u4f9b get \u65b9\u6cd5</li> <li> <p>\u4e0d\u9700\u8981\u8fdb\u884c\u4fdd\u62a4\u6027\u62f7\u8d1d\uff0c\u56e0\u4e3a\u62f7\u8d1d\u59cb\u7ec8\u90fd\u662f\u539f\u59cb\u7684\u5bf9\u8c61</p> </li> <li> <p>\u4e0d\u53ef\u53d8\u7c7b</p> </li> <li> <p>\u6807\u6ce8\u6240\u6709\u7684datafields private</p> </li> <li> <p>\u4e0d\u63d0\u4f9b\u4efb\u4f55\u6709\u53ef\u80fd\u4f1a\u8fd4\u56de reference \u7684\u65b9\u6cd5</p> <ul> <li>no mutator methods and no accessor methods</li> </ul> </li> <li> <p>\u8bbe\u8ba1\u89c4\u5219</p> <ul> <li>\u4e0d\u63d0\u4f9b\u4efb\u4f55\u4f1a\u4fee\u6539\u5bf9\u8c61\u72b6\u6001\u7684\u65b9\u6cd5 mutator</li> <li>\u4fdd\u8bc1\u7c7b\u4e0d\u88ab\u62d3\u5c55\uff0c\u8bbe\u7f6e final</li> <li>\u6240\u6709\u57df final</li> <li>\u6240\u6709\u57df private</li> <li>\u5bf9\u4efb\u4f55\u53ef\u53d8\u7ec4\u4ef6\u4e92\u65a5\u8bbf\u95ee</li> </ul> </li> <li> <p>\u4fdd\u62a4\u6027\u62f7\u8d1d</p> <ul> <li><code>java   public BirthDate getBirthDate(){       //return birthdate;       //\u6539\u4e3a       return new BirthDate(birthDate.getYear(), birthDate.getMonth(), birthDate.getDay());   }</code></li> </ul> </li> <li> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u503c\u90fd\u9700\u8981\u4e00\u4e2a\u5355\u72ec\u7684\u5bf9\u8c61</p> </li> <li> <p>String \u7c7b\u4e5f\u662f\u4e0d\u53ef\u53d8\u7c7b</p> </li> <li> <p>\u4e0d\u5141\u8bb8\u81ea\u8eab\u88ab\u5b50\u7c7b\u5316\uff0c\u8ba9\u7c7b\u7684\u6240\u6709 constructor \u53d8\u4e3a private \u6216\u8005 protected\uff0c\u6dfb\u52a0\u516c\u5171\u7684\u9759\u6001\u5de5\u5382\u6765\u4ee3\u66ffpublic\u7684 constructor</p> <ul> <li> <p>\u5e38\u91cf\u6c60\u6280\u672f Constant Pool, valueOf</p> </li> <li> <p><code>java   public class Complex{     private final double re;     private final double im;     private Complex(double re, double im){         this.re = re;         this.im = im;     }     public static Complex valueOf(double re, double im){         return new Complex(re,im);     }   }</code></p> </li> </ul> </li> </ul>"},{"location":"java/java/#this","title":"This","text":"<ul> <li>\u662f\u5bf9\u8c61\u672c\u8eab\u7684\u5f15\u7528\u7684\u540d\u5b57\uff0c\u7528\u4e8e\u8bbf\u95eehidden data fields</li> <li>\u4e00\u4e2a\u5e38\u89c1\u7684\u7528\u6cd5\u662f\u5728\u7c7b\u7684constructor\u4e2d\u53bb\u8c03\u7528\u5176\u4ed6\u7684constructor</li> </ul> <pre><code>public class Circle {\n    private double radius;\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n    public Circle() {\n        this(1.0);\n    }\n    public double getArea() {\n        return this.radius * this.radius * Math.PI;\n    }\n}\n</code></pre>"},{"location":"java/java/#tips","title":"\u5bf9\u8c61\u6784\u5efa\u7684tips","text":"<ul> <li>builder</li> <li>\u591a\u4e2a constructor \u53c2\u6570</li> <li>\u91cd\u53e0\u6784\u9020\u5668<ul> <li></li> <li>\u7f3a\u70b9\uff1a\u96be\u9605\u8bfb\uff0c\u5bfc\u81f4\u8ba4\u4e3a\u7684\u5fae\u5999\u9519\u8bef</li> </ul> </li> <li> <p>\u65e0\u53c2\u6784\u9020\u5668</p> <ul> <li>\u8c03\u7528 setter \u65b9\u6cd5\u6765\u8bbe\u7f6e\u6bcf\u4e00\u4e2a\u5fc5\u8981\u7684\u53c2\u6570\u548c\u53ef\u9009\u53c2\u6570</li> </ul> </li> <li> <p>\u9759\u6001\u5de5\u5382</p> </li> <li>\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u66f4\u9ad8\uff0c\u4e0d\u5fc5\u518d\u6bcf\u6b21\u8c03\u7528\u7684\u65f6\u5019\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8fd4\u56de\u539f\u7c7b\u578b\u7684\u4efb\u4f55\u5b50\u7c7b\u578b\u5bf9\u8c61</li> <li>valueOf</li> <li>\u5355\u4f8b\u5bf9\u8c61</li> <li>\u672c\u8d28\u4e0a\u552f\u4e00\uff1a\u6587\u4ef6\u7cfb\u7edf\u3001\u7a97\u53e3\u7ba1\u7406\u5668</li> <li>\u6709\u7279\u6743\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u8c03\u7528\u79c1\u6709\u6784\u9020\u5668\uff0c\u8981\u62b5\u5fa1\u8fd9\u79cd\u653b\u51fb\u53ef\u4ee5\u4fee\u6539\u6784\u9020\u5668\uff0c\u8981\u6c42\u521b\u5efa\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u7684\u65f6\u5019\u629b\u51fa\u5f02\u5e38</li> <li>\u679a\u4e3e\u7c7b\u65b9\u6cd5\uff1a\u7f16\u5199\u5305\u542b\u5355\u4e2a\u5143\u7d20\u7684\u679a\u4e3e</li> </ul>"},{"location":"java/java/#package","title":"package","text":"<ul> <li> <p>\u65b9\u4fbf\u7ba1\u7406\u7ec4\u7ec7\uff0c\u9632\u6b62\u4e0d\u540cjava\u6587\u4ef6\u4e4b\u95f4\u53d1\u751f\u547d\u540d\u51b2\u7a81</p> </li> <li> <p>\u53d1\u751f\u547d\u540d\u51b2\u7a81\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u5305\u7684\u540d\u5b57</p> </li> <li> <p>java.util\u548cjava.sql\u90fd\u6709Date\u7c7b\uff0c\u5982\u679c\uff1a</p> <p>import java.util.*;</p> <p>import java.sql.*;</p> <p>Date today; //\u7f16\u8bd1\u9519\u8bef</p> </li> <li> <p>\u9700\u8981\u660e\u786eimport java.util.Date</p> </li> <li> <p>import\u4e0d\u4f1a\u9012\u5f52\uff0c\u53ea\u4f1a\u5f15\u5165\u5f53\u524dpackage\u4e0b\u7684\u76f4\u63a5\u7c7b</p> </li> <li> <p>\u9ed8\u8ba4import java.lang.*;\u592a\u5e38\u7528\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8865\u4e0a</p> </li> <li> <p>\u53ef\u4ee5\u5bfc\u5165\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u57df\uff0c\u4e5f\u53ef\u4ee5\u5bfc\u5165\u7279\u5b9a\u7684\u65b9\u6cd5\u6216\u57df</p> </li> <li> <p>import static java.lang.System.*;</p> </li> <li> <p>import static java.lang.System.out;</p> </li> <li> <p>\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u6e90\u6587\u4ef6\u65f6\u4e0d\u68c0\u67e5\u76ee\u5f55\u7ed3\u6784\uff0c\u4f46\u5728\u8fd0\u884c\u65f6\u4f1a\u56e0\u4e3a\u76ee\u5f55\u7ed3\u6784\u627e\u4e0d\u5230\u800c\u62a5\u9519</p> </li> </ul>"},{"location":"java/java/#jar","title":"JAR","text":"<p>Java ARchive</p> <p>The closest you can get to having a .exefile for your Java application.</p> <ul> <li>\u521b\u5efa</li> <li>jar -cvf filename.jar files</li> <li>\u8fd0\u884c JAR</li> <li>java -jar filename.jar</li> </ul>"},{"location":"java/java/#10-thinking-in-objects","title":"10 Thinking in Objects","text":"<p>\u8fd9\u4e00\u8bfe\u667a\u4e91\u542c\u5b8c\u6211\u662fbk\u7684\uff0c\u592a\u96be\u4e86</p>"},{"location":"java/java/#_18","title":"\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\uff08\u4e0d\u8003\uff0c\u4e86\u89e3","text":"<p>aggregation \u662f\u4e00\u79cd\u7279\u6b8a\u7684 association\uff0ccomposition \u662f\u4e00\u79cd\u7279\u6b8a\u7684 aggregation</p> <ul> <li>association\uff1a\u4e24\u4e2aobjects\u4e4b\u95f4\u6709\u5173\u7cfb</li> <li>\u53ef\u4ee5\u4e00\u5bf9\u4e00\u4e00\u5bf9\u591a\u591a\u5bf9\u4e00\u591a\u5bf9\u591a</li> <li>aggregation\uff1a\u4e00\u4e2aobject\u53ef\u4ee5\u6709\u53e6\u4e00\u4e2aobject</li> <li>\u7b26\u53f7\uff1a</li> <li>\u53f3\u4fa7\u662f\u62e5\u6709\u4fa7</li> <li>composition\uff1a\u4e00\u4e2aobject\u79bb\u5f00\u4e86\u53e6\u4e00\u4e2aobject\u4e0d\u5b58\u5728</li> <li>\u7b26\u53f7\uff1a</li> <li>\u53f3\u4fa7\u662f\u5b58\u5728\u7684\u6761\u4ef6\uff08\u7236\u4f53\uff09</li> </ul>"},{"location":"java/java/#wrapper-class","title":"wrapper class \u5c01\u88c5\u7c7b","text":"<p>\u5bf9\u539f\u59cb\u6570\u636e\u7c7b\u578b\u505a\u5c01\u88c5</p> <ul> <li>\u6ca1\u6709\u65e0\u53c2 constructor</li> <li>\u6240\u6709\u5b9e\u4f8b\u81ea\u521b\u5efa\u5f00\u59cb\u4e0d\u53ef\u53d8\uff0c\u4e00\u65e6new\u5c31\u4e0d\u53ef\u4fee\u6539</li> <li>\u5982 integer class \u548c double class</li> <li>constructor</li> <li>\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a primitive data type value\u6216\u8005\u662fstring\u6765\u6784\u9020</li> <li>\u5bf9\u4e8e\u6574\u6570\uff1a\u6709\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c</li> <li>conversion methods\uff1a\u6240\u6709\u7684\u6570\u503c\u578b\u5305\u88c5\u7c7b\u5b9e\u73b0\u4e86\u5411\u5176\u4ed6\u6570\u503c\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982doubleValue\uff0cintValue\u7b49\u7b49</li> <li>\u9759\u6001\u5de5\u5382 valueOf</li> <li>parse \u8ba9string\u53d8\u6210\u4e00\u4e2a\u6570\u636e</li> <li>\u539f\u59cb\u6570\u578b\u548c\u5c01\u88c5\u7c7b\u4f1a\u81ea\u52a8\u8f6c\u5316</li> <li>BigInteger and BigDecimal\uff1a\u5904\u7406\u6253\u6570\u503c\u7684\u5305\u88c5\u7c7b</li> </ul>"},{"location":"java/java/#string_1","title":"String \u7c7b","text":"<ul> <li> <p>new \u4e00\u4e2a\u5bf9\u8c61</p> </li> <li> <p>String s = new String();</p> </li> <li> <p>\u662f\u4e0d\u53ef\u53d8\u7c7b</p> </li> <li> <p>String s = \"Java\";</p> <p>s = \"HTML\";</p> </li> <li> <p>\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u8d4b\u65b0\u503chtml</p> </li> <li> <p>\u6307 reference \u6307\u5411\u7684\u5185\u5bb9\u4e0d\u53ef\u4ee5\u53d1\u751f\u6539\u53d8</p> </li> <li> <p>Interned Strings \u9a7b\u7559\u7684</p> </li> <li> <p></p> </li> <li>\u5bf9\u4e8e s3\uff0c\u4e0d\u4f1a\u91cd\u65b0\u521b\u5efa\uff0c\u53ea\u4f1a\u5c06reference \u6307\u5411s1</li> <li>\u662fs1!=s2\uff0c\u4f46s1.equal(s2)\u662ftrue\uff0cequal\u53ea\u6bd4\u8f83\u5185\u5bb9</li> <li>\u8282\u7ea6\u5e95\u5c42\u7a7a\u95f4</li> </ul>"},{"location":"java/java/#constant-pool","title":"Constant Pool \u5e38\u91cf\u6c60\u6280\u672f","text":"<ul> <li>\u65b9\u4fbf\u5feb\u6377\u5730\u521b\u5efa\u67d0\u4e9b\u5bf9\u8c61</li> <li>\u5f53\u9700\u8981new\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5c31\u53ef\u4ee5\u4ece\u6c60\u4e2d\u53d6\u4e00\u4e2a\u51fa\u6765\uff08\u5982\u679c\u6c60\u4e2d\u6ca1\u6709\u5219\u521b\u5efa\u4e00\u4e2a\uff09\uff0c\u5219\u5728\u9700\u8981\u91cd\u590d\u521b\u5efa\u76f8\u7b49\u53d8\u91cf\u65f6\u8282\u7701\u4e86\u5f88\u591a\u65f6\u95f4</li> <li>\u5e38\u91cf\u6c60\u5176\u5b9e\u4e5f\u5c31\u662f\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u5e38\u91cf\u6c60\u5b58\u5728\u4e8e\u65b9\u6cd5\u533a\u4e2d</li> <li> <p>JVM\u7684\u7f16\u8bd1\u5668\u5c06\u6e90\u7a0b\u5e8f\u7f16\u8bd1\u6210class\u6587\u4ef6\u540e\uff0c\u4f1a\u7528\u4e00\u90e8\u5206\u5b57\u8282\u5206\u7c7b\u5b58\u50a8\u5e38\u91cf\u3002</p> </li> <li> <p>\u5728\u7f16\u8bd1\u6210.class\u65f6\u80fd\u591f\u8bc6\u522b\u4e3a\u540c\u4e00\u5b57\u7b26\u4e32\u7684,\u81ea\u52a8\u4f18\u5316\u6210\u5e38\u91cf</p> </li> </ul> <pre><code>String s1 = \"Hello\";\nString s2 = \"Hello\";\nString s3 = \"Hel\" + \"lo\";\nString s4 = \"Hel\" + new String(\"lo\");\nString s5 = new String(\"Hello\");\nString s6 = s5.intern();\nString s7 = \"H\", s8 = \"ello\";\nString s9 = s7 + s8;\ns1 == s2 true;\ns1 == s3 true; // \u7f16\u8bd1\u671f\u8fdb\u884c\u4e86\u4e00\u5b9a\u7684\u4f18\u5316\ns1 == s4 false;\ns1 == s5 false;\ns1 == s9 false; // s9\u662f\u4e24\u4e2a\u53d8\u91cf\u62fc\u8d77\u6765\u7684\ns1 == s6 true;\n</code></pre> <ul> <li> <p>\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u4e00\u6bb5\u4ee3\u7801\uff0cs1\uff0cs2\u548cs3\u662f\u76f8\u540c\u7684(\u56e0\u4e3a\u5e38\u91cf\u6c60\u6280\u672f)\u800cs1\u548cs4\u662f\u4e0d\u540c\u7684\uff0cs1\u548cs9\u4e5f\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u4e3as4\u548cs9\u4e0d\u662f\u5e38\u91cf\uff0c\u5728\u7f16\u8bd1\u671f\u6ca1\u6709\u786e\u5b9a\u662f\u4e0d\u662f\u5e38\u91cf</p> </li> <li> <p>\u800cs1\u548cs6\u662f\u76f8\u7b49\u7684\uff0c\u548cs5\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u4e3as5\u4f4d\u4e8e\u5806\u4e2d\uff0cintern\u65b9\u6cd5\u4f1a\u8bd5\u56fe\u5c06Hello\u8fd9\u4e2a\u503c\u52a0\u5165\u5e38\u91cf\u6c60\u4e2d\uff0c\u800c\u6b64\u65f6\u5e38\u91cf\u6c60\u4e2d\u5df2\u7ecf\u6709\u4e86Hello\u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e86\u5176\u5730\u5740</p> </li> <li> <p>Java\u4e2d\u5b9a\u4e49\u7684\u5305\u88c5\u7c7b\u5927\u90e8\u5206\u5b9e\u73b0\u4e86\u5e38\u91cf\u6c60\u6280\u672f\uff0c\u53ea\u6709\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u6ca1\u6709\u5b9e\u73b0</p> </li> <li> <p>\u5176\u4e2dByte,Short,Integer,Long,Character\u53ea\u5bf9-128-127\u7684\u5bf9\u8c61\u4f7f\u7528\u5e38\u91cf\u6c60</p> </li> <li> <p>\u7f13\u5b58</p> <ul> <li></li> </ul> </li> <li> <p>Double\u7c7b\u578b\u662f\u6ca1\u6709\u7f13\u5b58\u7684\uff0c\u6240\u4ee5\u5c31\u4f1a\u6709\u5982\u4e0b\u7ed3\u679c</p> <ul> <li><code>java   Double x = 1.1;   Double y = 1.1;   x == y // -&gt; false!</code></li> </ul> </li> <li> <p>Integer\u5229\u7528\u7f13\u5b58\u673a\u5236\u5b9e\u73b0\u4e86\u5e38\u91cf\u6c60\uff0c\u7f13\u5b58\u4e86256\u4e2a\u5bf9\u8c61\uff0c\u4e3b\u8981\u662f\u5e38\u7528\u7684\u8bc1\u4e66</p> </li> <li> <p></p> </li> </ul>"},{"location":"java/java/#string_2","title":"string\u64cd\u4f5c","text":"<ul> <li>\u4e0d\u53ef\u53d8\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u51fa\u6765\u66ff\u6362</li> <li>\u66ff\u6362 replace</li> <li>\u5206\u5272 split</li> <li>\u5339\u914d match</li> <li>\u6b63\u5219\u8868\u8fbe\u5f0f regular expression</li> </ul> <ul> <li> <p>Convert Character and Numbers to Strings</p> </li> <li> <p>\u4e5f\u63d0\u4f9b valueOf</p> </li> <li> <p>toString\uff0cnew String</p> </li> <li> <p>string\u683c\u5f0f\u5316</p> </li> <li><code>String s = String.format(\u201c%7.2f%6d-4s\u201d,45.556, 14, \u201cAB\u201d);</code></li> <li> <p></p> </li> <li> <p>\u4e0d\u4ee5null\u4e3a\u7ed3\u5c3e</p> </li> <li>Java\u4e2d\u7684String\u4e0d\u53ef\u6539\u53d8\uff0c\u662ffinal\u7c7b\u578b</li> <li>\u5728String\u6c60\u4e2d\u7ef4\u62a4</li> <li>\u6bd4\u8f83\u662f\u5426\u76f8\u540c\u7684\u65f6\u5019\u8981\u7528equals\u65b9\u6cd5\uff0c\u4e0d\u8981\u7528==</li> <li>\u4f7f\u7528indexOf\u7b49\u65b9\u6cd5\u53bb\u67e5\u8be2\u5143\u7d20\u7684\u4f4d\u7f6e</li> <li>\u4f7f\u7528subString\u65b9\u6cd5\u53bb\u83b7\u53d6\u5b50\u4e32\uff0c\u56e0\u4e3a==\u6bd4\u8f83\u7684\u662f\u5f15\u7528\u7684\u5bf9\u8c61\uff0cequals\u6bd4\u8f83\u7684\u662fString\u6240\u4ee3\u8868\u7684\u503c</li> <li>+\u8fd0\u7b97\u5b8c\u6210\u4e86\u5bf9String\u7684\u91cd\u8f7d</li> <li>\u4f7f\u7528trim\u65b9\u6cd5\u5220\u9664\u9996\u5c3e\u7a7a\u683c</li> <li>split\u65b9\u6cd5\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f</li> <li>\u4e0d\u8981\u5b58\u50a8\u654f\u611f\u4fe1\u606f\u5728String\u4e2d</li> </ul>"},{"location":"java/java/#stringbuilder-and-stringbuffer","title":"StringBuilder and StringBuffer","text":"<ul> <li> <p>\u5728 string \u7684\u57fa\u7840\u4e0a\u53ef\u4ee5\u5bf9 string \u7684\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\uff0c\u7075\u6d3b</p> </li> <li> <p>Builder\u548cBuffer\u62e5\u6709toString\uff0ccapacity\uff0clength\uff0csetLength\u548ccharAt\u7b49\u65b9\u6cd5</p> </li> <li> <p>\u4e09\u8005\u7684\u6bd4\u8f83</p> </li> <li> <p>\u5728\u6267\u884c\u901f\u5ea6\u4e0a\uff0cStringBuilder&gt;StringBuffer&gt;String</p> <ul> <li>\u6bd4\u5982\u5bf9\u4e8eString s = \"abcd\"\uff0c\u5982\u679c\u6211\u4eec\u6267\u884cs = s + 1\u5b9e\u9645\u4e0a\u6267\u884c\u4e4b\u540e\u7684s\u8ddf\u539f\u672c\u7684s\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u800c\u662f\u751f\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61(\u56e0\u4e3aString\u662f\u4e0d\u53ef\u53d8\u7684)\uff0c\u539f\u6765\u7684\u5bf9\u8c61\u88ab\u5783\u573e\u56de\u6536\u4e86\uff0c\u5bfc\u81f4String\u7684\u6267\u884c\u6548\u7387\u975e\u5e38\u4f4e</li> <li>Builder\u662f\u7ebf\u7a0b\u975e\u5b89\u5168\u7684\uff0cBuffer\u662f\u7ebf\u7a0b\u5b89\u5168\u7684</li> <li>\u5355\u7ebf\u7a0b builder\uff0c\u591a\u7ebf\u7a0b buffer</li> </ul> </li> </ul>"},{"location":"java/java/#enum","title":"\u679a\u4e3e\u7c7b(Enum)","text":"<ul> <li>\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684\u7c7b\uff0c\u91cc\u9762\u7684instance\u5df2\u7ecf\u5b9a\u4e49\u597d\u4e86</li> <li>\u901a\u5e38\u5e38\u91cf\u7528<code>public final static</code>\u6765\u5b9a\u4e49\uff0c\u5728\u679a\u4e3e\u7c7b\u4e2d\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u5f0f\u5b9a\u4e49</li> </ul> <pre><code>public enum Light{\n    public final static RED = 1, GREEN = 2, YELLOW = 3;\n}\n</code></pre> <ul> <li> <p>ordinal() \u8fd4\u56de\u4e00\u4e2a\u5e8f\u6570\uff0c\u4ece 0 \u5f00\u59cb</p> </li> <li> <p>\u53ef\u4ee5\u6839\u636e ordinal \u8fdb\u884c\u6392\u5e8f</p> </li> <li> <p>\u53ef\u4ee5\u7528 valueOf \u5f97\u5230\u679a\u4e3e\u5b9e\u4f8b</p> <ul> <li> <p>Light L = Light.valueOf(\"RED\");</p> </li> <li> <p><code>java   enum Seanson{       SPRING, SUMMER, AUTUMN, WINTER;       public static Season valueOf(int ordinal){           if(ordinal&lt;0 || ordinal &gt;= values().length){               throw new IndexOurOfBoundsException(\"Invalid ordinal\");           }           return values()[ordinal];       }   }</code></p> </li> <li> <p></p> </li> </ul> </li> <li> <p>enum\u7c7b\u578b\u53ef\u4ee5\u5173\u8054\u4e0d\u540c\u7684\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u7684\u65b9\u6cd5\u548c\u57df\uff0c\u6765\u589e\u5f3a\u679a\u4e3e\u7c7b\u578b</p> </li> </ul> <p></p> <p>\u7b54\u6848 4 PLUS 2 = 6</p> <p>\u7b49\u7b49</p> <p></p> <p>\u8fd9\u4e2avalueOf\u586b\u4e0d\u51fa\u6765</p>"},{"location":"java/java/#11-inheritance-and-polymorphism","title":"11 Inheritance and Polymorphism","text":"<p>\u522b\u5b66\u4e86\u545c\u545c\u545c\u545c\u545c\u545c\u545c\u545c\u545c\u545c\u545c\uff0c\u6211\u60f3\u56de\u53bb\u7761\u89c9</p>"},{"location":"java/java/#_19","title":"\u7ee7\u627f","text":"<p><code>public class Faculty extends Employee</code> \u8868\u793afaculty\u7ee7\u627f\u81eaemployee</p> <p>superclass \u7236\u7c7b</p> <ul> <li> <p>\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u88ab\u7ee7\u627f\u5417</p> </li> <li> <p>\u4e0d</p> </li> <li> <p>\u5b50\u7c7b\u9700\u8981\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570</p> </li> <li> <p>\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u88ab\u663e\u5f0f\u6216\u9690\u5f0f\u7684\u8c03\u7528</p> <ul> <li>\u5b50\u7c7b\u53ef\u4ee5\u4f7f\u7528super\u6765\u8c03\u7528</li> <li>\u5f53\u6ca1\u6709\u663e\u793a\u7684\u58f0\u660esuper\u65f6\uff0c\u5c31\u9ed8\u8ba4super\u662f\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570</li> <li>\u5173\u952e\u8bcd super\uff1a\u9690\u5f0f\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff1breference \u8bbf\u95ee\u65b9\u6cd5\u6216\u6210\u5458</li> <li>\u5fc5\u987b\u7528super</li> </ul> </li> <li>\u6784\u9020\u94fe constructor chaining</li> <li>\u4f7f\u7528\u5230\u5b50\u7c7b1-&gt;\u627e\u5b50\u7c7b1\u7684constructor-&gt;\u627e\u7236\u7c7b\u7684constructor-&gt;\u627e\u7236\u7c7b\u7684\u7236\u7c7b\u7684constructor\uff08\u76f4\u5230\u6ca1\u6709\u7236\u7c7b\uff09-&gt;\u6267\u884c\u7236\u7c7b\u7684\u7236\u7c7b\u7684constructor-&gt;\u6267\u884c\u7236\u7c7b\u7684constructor-&gt;\u6267\u884c\u5b50\u7c7b1\u7684constructor</li> <li>error\uff1a\u6709\u53c2\u65e0\u53c2\u8981\u4e00\u81f4</li> </ul> <p></p> <p>\u8c03\u7528 apple \u7684\u6784\u9020\u51fd\u6570\u662f\u65e0\u53c2\u7684\uff0c\u8981\u5148\u8c03\u7528fruit\u7684\u6784\u9020\u51fd\u6570\uff0c\u86cbfruit\u7684\u662f\u6709\u53c2\u7684</p> <p></p> <p>\u539f\u56e0\uff1a\u6ca1\u6709\u4f7f\u7528super\u53bb\u8c03\u7528\uff0c\u9ed8\u8ba4\u65e0\u53c2</p> <ul> <li>\u5b9a\u4e49\u4e00\u4e2a\u65b0\u5b50\u7c7b</li> <li>\u589e\u52a0\u6210\u5458\u53d8\u91cf\u6216\u65b9\u6cd5</li> <li> <p>\u91cd\u5199\u65b0\u65b9\u6cd5\uff1aoverride</p> </li> <li> <p>override</p> </li> <li>\u533a\u5206\uff08\u51fd\u6570\u7684\u91cd\u5199\u53eb\u505aoverload\uff0c\u7ee7\u627f\u5173\u7cfb\u91cc\u9762\u8981\u4fee\u6539\u5b50\u7c7b\u5b9e\u73b0\u53eb\u505aoverride\uff09<ul> <li>override \u6709\u4e00\u6a21\u4e00\u6837\u7684\u540d\u5b57\u548c\u53c2\u6570\uff0c\u53d1\u751f\u5728\u7ee7\u627f\u4e2d</li> </ul> </li> <li>\u6761\u4ef6<ul> <li>\u8fd9\u4e2a\u7236\u7c7b\u7684\u65b9\u6cd5\u53ef\u4ee5\u88ab\u5b50\u7c7b\u8bbf\u95ee\u5230</li> <li>private static \u4e0d\u53ef\u4ee5\u88ab overridding</li> <li>\u5982\u679c\u6ca1\u6709overridding\uff0c\u7236\u7c7b\u548c\u5b50\u7c7b\u7684\u76f8\u540c\u7684\u51fd\u6570\u6ca1\u6709\u5173\u7cfb\uff08\u4e0d\u5b58\u5728\u591a\u6001\uff09</li> </ul> </li> <li>override\u6ce8\u91ca\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u662f\u4e00\u4e2a\u91cd\u5199\u7236\u7c7b\u7684\u65b9\u6cd5 <code>@override</code></li> </ul>"},{"location":"java/java/#polymorphism","title":"Polymorphism \u591a\u6001","text":"<p>\u4e00\u4e2a\u7236\u7c7b\u53d8\u91cf\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u5b50\u7c7b\u7684\u5bf9\u8c61</p> <ul> <li>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5f53\u6210\u662f\u4e00\u4e2atype</li> <li>\u4e00\u4e2a\u5bf9\u8c61\u53bb\u8c03\u7528\u65b9\u6cd5\uff0c\u8981\u770b\u662f\u54ea\u4e2a\u5bf9\u8c61\u518d\u53bb\u5b9e\u73b0</li> <li>\u591a\u6001\u610f\u5473\u7740\u7236\u7c7b\u53ef\u4ee5\u88ab\u5f15\u7528\u4f5c\u4e3a\u4e00\u4e2a\u5b50\u7c7b\u6765\u4f7f\u7528</li> <li>Dynamic Binding \u52a8\u6001\u7ed1\u5b9a</li> <li>\u5982\u56fe\u662f\u4e00\u4e2a\u7ee7\u627f\u5173\u7cfb\uff0cc1\u662fc2\u7684\u5b50\u7c7b\uff0c\u5f80\u540e\u7c7b\u63a8</li> <li>\u8fd9\u91cc\u6211\u4eec\u8981\u5148\u628acn\u770b\u6210\u662f object</li> <li></li> <li>\u5bf9Cn o = new C1():</li> <li> <p>JVM\u4f1a\u4eceC1\u5f00\u59cb\u5bfb\u627e\u67d0\u4e2a\u65b9\u6cd5P\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u73b0\u4e3a\u6b62\uff0c\u7136\u540e\u641c\u7d22\u505c\u6b62\uff0c\u8c03\u7528\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u65b9\u6cd5</p> </li> <li> <p>\u5339\u914d Method Matching vs. binding</p> </li> <li>\u5339\u914d\uff1a\u6839\u636esignature \u7f16\u8bd1\u65f6\u5019\u5339\u914d<ul> <li>\u627e\u5c3d\u53ef\u80fd\u8d8a\u8fd1\u8d8a\u597d\u7684\u53c2\u6570\u8fdb\u884c\u5339\u914d</li> </ul> </li> <li>\u7ed1\u5b9a<ul> <li>\u5728\u8fd0\u884c\u7684\u65f6\u5019\u53bb\u52a8\u6001\u7ed1\u5b9a</li> </ul> </li> </ul> <p></p> <p>m(x) \u4f7f\u7528\u5339\u914d\uff0c\u4f7f\u7528\u54ea\u4e2a tostring \u662f\u52a8\u6001\u7ed1\u5b9a</p> <ul> <li> <p>generic programming \u6cdb\u578b\u7f16\u7a0b</p> </li> <li> <p>\u8bf4\u6765\u4e00\u901a\u6ca1\u600e\u4e48\u542c\u6e05\u695a\u5c31\u8bf4\u8fd9\u4e2a\u4e0d\u662f\u5f88\u51c6\u786e\u7684\u5b9a\u4e49\u4e4b\u540e\u540e\u9762\u4f1a\u518d\u591a\u5177\u4f53\u4ecb\u7ecd</p> </li> <li> <p>Casting Object \u7c7b\u578b\u8f6c\u6362</p> </li> <li> <p>\u5728\u7ee7\u627f\u5173\u7cfb\u4e2d\u53ef\u4ee5\u9690\u5f0f\u7684\u8f6c\u6362</p> <ul> <li>m(new Student());</li> </ul> </li> <li> <p>\u5148\u663e\u5f0f\u8f6c\u6362\uff08\u5426\u5219\u7f16\u8bd1\u5668\u4e0d\u8ba4\u8bc6\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u5230\u8fd0\u884c\u624d\u77e5\u9053\uff09Student b = (Student)o;</p> </li> <li> <p>\u5f53\u4ece\u57fa\u7c7b\u8f6c\u6362\u5230\u5b50\u7c7b\u7684\u65f6\u5019\u5fc5\u987b\u6709\u663e\u793a\u7684\u58f0\u660e\uff0c\u4f46\u4e0d\u4e00\u5b9a\u603b\u662f\u80fd\u6210\u529f</p> </li> <li> <p>instanceof \u64cd\u4f5c\uff1a\u68c0\u67e5\uff0c\u4e00\u4e2aobject\u662f\u4e0d\u662f\u67d0\u4e00\u4e2a\u7c7b\u578b\u7684</p> <ul> <li> <p>\u6bd4\u5982\u8bf4 Object myObject = new Circle();object\u5b9e\u9645\u4e0d\u662fobject\u4e8c\u662fcircle</p> </li> <li> <p>\u8fd9\u4e2a\u65f6\u5019\u5bf9object\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u6210circle\u5c31\u8f6c\u6362\u4e0d\u4e86\u4e86</p> </li> <li> <p>\u64cd\u4f5c\u65b9\u6cd5\uff1a</p> </li> <li> <p>\u5982\u679cmyOject\u4e0d\u662fCircle\uff0c\u5c31\u8f93\u51fabalabala</p> </li> <li> <p><code>java   if (myObject instanceof Circle) {     System.out.println(\"The circle diameter is \" + ((Circle)myObject).getDiameter());   ...   }</code></p> </li> </ul> </li> <li> <p>\u5982\u679c\u7c7b\u578b\u8f6c\u5316\u5931\u8d25\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38</p> <ul> <li>\u4e3a\u4e86\u907f\u514d\u629b\u51fa\u5f02\u5e38\uff0c\u5148\u4f7f\u7528instanceof\u53bb\u5224\u65ad\uff0c\u518d\u7c7b\u578b\u8f6c\u6362</li> </ul> </li> <li> <p>\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u987a\u5e8f</p> </li> <li> <p>\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u5b58\u50a8\u7a7a\u95f4\u4e3a\u96f6\u6216null\u503c\uff1b</p> </li> <li>\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570</li> <li>\u6309\u987a\u5e8f\u5206\u522b\u8c03\u7528\u7c7b\u6210\u5458\u53d8\u91cf\u548c\u5b9e\u4f8b\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f</li> <li>\u8c03\u7528\u672c\u8eab\u6784\u9020\u51fd\u6570\u5185\u5bb9</li> </ul> <pre><code>class Basel{\n    public int a = 1;\n    public Basel(){\n        test();\n    }\n    public void test(){\n        System.out.println(a);\n    }\n}\n\npublic class Child extends Basel {\n    public int a = 123;\n    public Child(){\n\n    }\n    public void test(){\n        System.out.println(a);\n    }\n    public static void main(String[] args){\n        Child c = new Child();\n        c.test();\n        Basel b = c;\n        System.out.println(b.a);\n        System.out.println(c.a);\n    }\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p>0 </p> <p>123</p> <p>1</p> <p>123</p> <p>\u597d\u96be.....</p> <p></p> <p>\u7236\u7c7b\u5f80\u4e0a\u627e\uff0c\u4e00\u76f4\u627e\u5230\u53d8\u91cf\u91cc\u8ddf\u5b83\u5173\u7cfb\u6700\u5927\uff08\u76f8\u5173\u5ea6\u6700\u9ad8\uff09\u7684\u7236\u7c7b\uff0c\u8fd0\u884c\u5b83\uff0c\u7ed3\u675f\u3002\u5982\u679c\u6709\u4e24\u4e2a\u7236\u7c7b\u8ddf\u4ed6\u5173\u7cfb\u4e00\u6837\u5927\uff0c\u5c31\u9009\u62e9\u66f4\u5c0f\u7684\u7236\u7c7b\uff08\u66f4\u9760\u8fd1\u4ed6\u7684\u7236\u7c7b\uff09\u3002</p> <ul> <li> <p>equals \u65b9\u6cd5</p> </li> <li> <p>\u9ed8\u8ba4\u5b9a\u4e49 default implementation</p> <ul> <li> <p><code>java   public boolean equals(Object obj) {       return this == obj;   }</code></p> </li> <li> <p>\u4e24\u4e2areference\u662f\u4e0d\u662f\u6307\u5411\u540c\u4e00\u4e2a\u4e1c\u897f</p> </li> </ul> </li> <li> <p>\u91cd\u5199</p> <ul> <li>\u5185\u5bb9\u662f\u4e0d\u662f\u4e00\u6837\u7684</li> <li></li> </ul> </li> <li> <p>protected \u4fee\u9970\u7b26</p> </li> <li> <p>\u53ef\u4ee5\u88ab\u4e00\u4e2apackage\u91cc\u9762\u7684\u7c7b\u8bbf\u95ee\uff0c\u5728\u4e0d\u540cpackage\u91cc\u9762\u5982\u679c\u662f\u5b50\u7c7b\u60f3\u8981\u8bbf\u95ee\u5c31\u4e5f\u53ef\u4ee5\u88ab\u8bbf\u95ee</p> </li> <li>Protected\u7684\u4e00\u4e2a\u7528\u6cd5\uff1a\u6a21\u677f\u65b9\u6cd5\uff08\u52a8\u6001\u7ed1\u5b9a</li> </ul> <p></p> <ul> <li> <p>\u5b50\u7c7b\u4e0d\u4f1a waken \u5b83\u7684 accessibility</p> </li> <li> <p>final \u4fee\u9970\u7b26</p> </li> <li> <p>\u53d8\u91cf\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u65b9\u6cd5\u4e0d\u80fd\u518d\u88ab\u91cd\u5199\uff0c\u7c7b\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f</p> </li> </ul>"},{"location":"java/java/#nested-class","title":"Nested Class (\u5d4c\u5957\u7c7b)","text":"<p>outer \u7c7b\uff0cinner \u7c7b</p> <ul> <li> <p>\u5185\u90e8\u7c7b\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5916\u90e8\u7c7b\u7684private\u53d8\u91cf\uff0c\u5916\u9762\u770b\u4e0d\u5230\uff0c\u53ef\u4ee5\u5b8c\u5168\u9690\u85cf</p> </li> <li> <p>\u53ef\u4ee5\u5b9e\u73b0\u5c01\u88c5</p> </li> <li> <p>\u5185\u90e8\u7c7b\u662f\u7f16\u8bd1\u5668\u7684\u6982\u5ff5\uff0c\u5bf9\u4e8ejvm\u6765\u8bf4\u4e0d\u77e5\u9053</p> </li> <li> <p>\u6709\u5185\u90e8\u7c7b\u7684\u65f6\u5019\u7f16\u8bd1\u65f6\u751f\u6210 class \u6587\u4ef6\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u591a\u4e2a class \u6587\u4ef6\uff0c\u6ca1\u6709\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u5c31\u591a\u4ea7\u751f\u4e00\u4e2a class \u6587\u4ef6</p> </li> <li> <p>\u5206\u7c7b</p> </li> <li> <p>\u9759\u6001\u5185\u90e8\u7c7b (Static Inner Class)</p> <ul> <li> <p>\u548c\u4e00\u822c\u7684\u7c7b\u5dee\u4e0d\u591a</p> </li> <li> <p>\u5185\u90e8\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684 static \u6210\u5458\u65b9\u6cd5\uff0c\u4f46\u4e0d\u80fd\u8bbf\u95ee\u5176\u4ed6\u6210\u5458\u65b9\u6cd5</p> </li> <li> <p>public \u7684\u9759\u6001\u5185\u90e8\u7c7b\u53ef\u4ee5\u5728\u5916\u9762\u4f7f\u7528</p> </li> <li> <p>\u4e0d\u9700\u8981\u901a\u8fc7\u5916\u90e8\u7c7b\u7684\u5bf9\u8c61\u6765\u521b\u5efa</p> </li> <li> <p><code>java     Outer.StaticInner si = new Outer.StaticInner();</code></p> </li> </ul> </li> <li> <p>\u6210\u5458\u5185\u90e8\u7c7b</p> <ul> <li> <p>\u53bb static</p> </li> <li> <p>\u4e0e\u5916\u90e8\u7c7b\u7684\u7d27\u5bc6\u5173\u7cfb\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5230\u5916\u90e8\u7c7b\u7684\u4e00\u822c\u65b9\u6cd5</p> </li> <li> <p>\u5728\u5916\u90e8\u4f7f\u7528\u4e0e\u9759\u6001\u5185\u90e8\u7c7b\u4e0d\u540c\uff1a\u8981\u5148new\u5916\u90e8\u7c7b\uff0c\u518dnew\u5185\u90e8\u7c7b\uff0c\u6210\u5458\u5185\u90e8\u7c7b\u5bf9\u8c61\u9700\u8981\u4e0e\u4e00\u4e2a\u5916\u90e8\u7c7b\u5bf9\u8c61\u76f8\u8fde\uff0c\u76f8\u5f53\u4e8e\u6709\u4e00\u4e2a\u6307\u5411\u5916\u90e8\u7c7b\u7684reference</p> </li> <li> <p><code>java     public static void main(string[]args){         Outer outer = new Outer();         Inner inner = outer.new Inner();     }</code></p> </li> <li></li> </ul> </li> <li> <p>\u65b9\u6cd5\u5185\u90e8\u7c7b (Local Class)</p> </li> <li> <p>\u533f\u540d\u5185\u90e8\u7c7b (Anonymous Class)</p> </li> </ul>"},{"location":"oop/class/","title":"OOP czp","text":""},{"location":"oop/class/#class","title":"Class","text":""},{"location":"oop/class/#_1","title":"\u5b9a\u4e49\u4e0e\u58f0\u660e","text":"<ul> <li>\u53ef\u4ee5\u4ec5\u58f0\u660e\u800c\u4e0d\u5b9a\u4e49\uff0c\u53ea\u8981\u8fd9\u4e2a\u51fd\u6570\u6ca1\u6709\u88ab\u4f7f\u7528</li> <li>\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u91cd\u65b0\u58f0\u660e</li> </ul>"},{"location":"oop/class/#using","title":"using","text":"<p>(<code>using</code>\u7684\u5f15\u5165\u662f\u4e3a\u4e86\u652f\u6301\u6a21\u7248<code>&lt;template&gt;</code>)</p> <p>c++\u5f15\u5165<code>using</code>\u6765\u58f0\u660e\u7c7b\u578b\u522b\u540d\uff0c\u7528\u9014\u548c<code>typedef</code>\u7c7b\u4f3c\uff0c\u5982<code>typedef struct arraylist_* arraylist;</code>\u53ef\u4ee5\u5199\u4f5c<code>using arraylist = struct arraylist_ *;</code></p> <pre><code>struct Foo {\n    using elem = int;\n    elem x;     // OK, x has type int\n    elem add(elem v) { x += v; return x; }\nprivate:\n    using type = char;\n    type c;     // OK, c has type char\n};\n\n// elem y;      // Error: unknown type name 'elem'\nFoo::elem z;    // OK, z has type int\n// Foo::type c; // Error: 'type' is a private member of 'Foo'   \n</code></pre>"},{"location":"oop/class/#this","title":"this \u6307\u9488","text":"<p>\u5728\u6210\u5458\u51fd\u6570\u7684\u51fd\u6570\u4f53\u4e2d\uff0c\u8bbf\u95ee\u4efb\u4f55\u6210\u5458\u65f6\u90fd\u4f1a\u88ab\u81ea\u52a8\u6dfb\u52a0 <code>this-&gt;</code>\uff0c\u4f8b\u5982 <code>void Foo::bar(int v) { x += v; }</code>\u4e2d\u7684 <code>x += v</code>; \u5b9e\u9645\u662f <code>this-&gt;x += v</code>;</p>"},{"location":"oop/class/#inline","title":"inline","text":"<ul> <li>\u5185\u8054\u51fd\u6570\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500</li> <li>\u5185\u8054\u51fd\u6570\u7684\u4ee3\u4ef7\uff1a\u5185\u8054\u51fd\u6570\u4f1a\u5728\u6bcf\u5904\u88ab\u8c03\u7528\u7684\u5730\u65b9\u5c55\u5f00\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u88ab\u5185\u8054\u7684\u51fd\u6570\u592a\u5927\u4f1a\u5bfc\u81f4\u76ee\u6807\u4ee3\u7801\u592a\u5927\uff0c\u5bf9\u4ee3\u7801\u7a7a\u95f4\u548c\u6027\u80fd\u90fd\u4f1a\u6709\u4e00\u5b9a\u5f71\u54cd</li> <li>\u53ea\u6709\u51fd\u6570\u4f53\u5199\u5728\u7c7b\u7684\u5b9a\u4e49\u4e2d\u7684\u6210\u5458\u51fd\u6570\u624d\u4f1a\u88ab\u5185\u8054</li> </ul>"},{"location":"oop/class/#constructor-ctorctor","title":"constructor \u6784\u9020\u51fd\u6570 (ctor/c'tor)","text":"<p>\u6784\u9020\u51fd\u6570\u4e0e\u4e00\u822c\u6210\u5458\u51fd\u6570\u7684\u533a\u522b\u662f\uff0c\u4ed6\u4e0d\u5199\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u800c\u4e14\u76f4\u63a5\u4f7f\u7528\u7c7b\u7684\u540d\u5b57\uff08\u6784\u9020\u51fd\u6570\u6ca1\u6709\u540d\u5b57\uff09\u3002\u4ed6\u4f7f\u7a0b\u5e8f\u5458\u80fd\u591f\u5efa\u7acb\u8d77\u67d0\u79cd\u4fdd\u8bc1\uff0c\u5176\u4ed6\u6210\u5458\u51fd\u6570\u90fd\u80fd\u4f9d\u8d56\u8fd9\u4e2a\u4fdd\u8bc1\u3002</p> <p><pre><code>class Container {\n    elem* val;\npublic:\n    Container() {\n        val = nullptr;\n    }\n};\n</code></pre> <code>Conrainer</code> \u662f\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c<code>val = nullptr</code> \u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u300c\u4fdd\u8bc1\u300d\uff0c\u5373 val \u7684\u503c\u8981\u4e48\u662f <code>nullptr</code>\uff0c\u8981\u4e48\u662f\u5176\u4ed6\u6210\u5458\u51fd\u6570\u8d4b\u7684\u503c\uff0c\u800c\u4e0d\u4f1a\u662f\u4e2a\u968f\u673a\u7684\u503c\u3002</p> <p>\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>Container c = Container();</code> \u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u4e86\u3002</p> <p>\u6216\u8005\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u4e5f\u53ef\u4ee5\u5e26\u53c2\u6570\uff1a\uff08\u6ce8\u610f\u65e0\u53c2\u6784\u9020\u65f6\u5019\u4e0d\u80fd\u52a0 <code>()</code> \uff09</p> <p><pre><code>class Container {\n    elem* val;\npublic:\n    Container(unsigned size) {\n        val = (elem*)malloc(sizeof(elem) * size);\n    }\n};\n</code></pre> \u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>Container c2 = Container(64);</code> \u6784\u9020\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5927\u5c0f\u7684\u5bb9\u5668\u4e86\u3002</p> <p>Note c++ \u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u521d\u59cb\u5316\u65b9\u5f0f\uff1a</p> <p><code>int a = 4;</code> \u7b49\u4ef7\u4e8e <code>int a(4);</code>, <code>Container c2 = Container(64);</code> \u7b49\u4ef7\u4e8e <code>Container c2(64);</code></p> <p><pre><code>class User {\n    int id, age, failTimes;\n    char* password;\npublic:\n    User(int id, int age, char* pw) {\n        this-&gt;id = id;\n        this-&gt;age = age;\n        failTimes = 0;\n        password = copyStr(pw); // assume that `copyStr` gets a string and allocate some space and copy it\n    }\n};\n</code></pre> \u8fd9\u6837\u5199\u5f88\u9ebb\u70e6\uff0c\u4e8e\u662fc++\u5141\u8bb8\uff1a <pre><code>class User {\n    int id, age, failTimes;\n    char* password;\npublic:\n    User(int id, int age, char* pw) : id(id), age(age), failTimes(0), password(copyStr(pw)) {}\n    // ...\n};\n</code></pre> \u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0cmember initializer lists \u662f\u5fc5\u8981\u7684\u3002\u4f8b\u5982\uff1a <pre><code>class Point {\n    int x, y;\npublic:\n    Point(int x, int y) : x(x), y(y) {}\n};\n\nclass Circle {\n    Point c;\n    int r;\npublic:\n    Circle(int cx, int cy, int r) : c(cx, cy), r(r) {}\n};\n</code></pre></p> <p>member initializer list \u7684\u987a\u5e8f\u4e0d\u5f71\u54cd\u6210\u5458\u88ab\u521d\u59cb\u5316\u7684\u987a\u5e8f\uff0c\u5b83\u4eec\u6309\u7167\u5728\u7c7b\u5b9a\u4e49\u4e2d\u7684\u987a\u5e8f\u521d\u59cb\u5316\u3002\u4f8b\u5982\uff1a </p> <p>member initializer list \u53ef\u4ee5\u5c06\u6784\u9020\u59d4\u6258\u7ed9\u540c\u4e00\u7c7b\u578b\u7684\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u505a\u51fa\u8fd9\u4e00\u59d4\u6258\u7684\u6784\u9020\u51fd\u6570\u79f0\u4e3a delegating constructor:</p> <p><pre><code>struct C{\n    C(int){puts(\"ctor1 called\");}\n    C() : C(42){puts(\"ctor2 called\");}\n};\nint main(){\n    C c;\n}\n</code></pre> \u6211\u4eec\u8f93\u51fa\uff1a <pre><code>ctor1 called\nctor2 called\n</code></pre></p>"},{"location":"oop/class/#new-delete","title":"\u5185\u5b58\u7a7a\u95f4\u5206\u914d <code>new</code> \u548c <code>delete</code>","text":"<p>New: \u7533\u8bf7\u5185\u5b58 + \u8c03\u7528\u6784\u9020\u51fd\u6570</p> <p>new \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6307\u9488\u3002</p> <p>\u521b\u5efa\u5bf9\u8c61 <code>int * p1 = new int;</code> \u521b\u5efa\u6570\u7ec4 <code>int * pa = new int[n];</code></p> <p>\u5982\u679c new \u7684\u662f\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u6784\u9020\u51fd\u6570\u5c31\u4f1a\u88ab\u76f4\u63a5\u8c03\u7528\uff1a</p> <p><pre><code>struct Foo{ Foo(){ puts(\"ctor called\");}};\n\nint main(){\n    Foo *p = new Foo;\n    puts(\"=======\");\n    Foo *p = new Foo[5];\n}\n</code></pre> \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8f93\u51fa\uff1a <pre><code>ctor called\n=======\nctor called\nctor called\nctor called\nctor called\nctor called\n</code></pre></p> <p>Note: <code>new</code> or <code>malloc</code></p> <ul> <li>new \u5206\u914d\u6210\u529f\u8fd4\u56de\u7684\u662f\u5bf9\u8c61\u7c7b\u578b\u6307\u9488\uff0c\u4e0e\u5bf9\u8c61\u4e25\u683c\u5339\u914d\uff0c\u65e0\u7c7b\u578b\u8f6c\u6362\uff0c\u6240\u4ee5 new \u662f\u7b26\u5408\u7c7b\u578b\u5b89\u5168\u6027\u64cd\u4f5c\u7b26\uff1bmalloc \u8fd4\u56de\u503c\u7c7b\u578b\u662f void* \uff0c\u4e00\u822c\u9700\u8981\u63a5\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u6210\u6211\u4eec\u9700\u8981\u7684\u7c7b\u578b\u3002</li> <li>new \u53ef\u4ee5\u5728\u5185\u5b58\u5206\u914d\u7684\u65f6\u5019\u901a\u8fc7\u8c03\u7528\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u4f46 malloc \u4e0d\u884c\u3002</li> </ul> <p>Delete: \u8c03\u7528\u6790\u6784\u51fd\u6570 + \u91ca\u653e\u5185\u5b58</p> <p>\u5982\u679c p \u5728 new \u7684\u65f6\u5019\u521b\u5efa\u7684\u662f\u5355\u4e2a\u5bf9\u8c61\uff0c\u5219\u5e94\u8be5\u7528 <code>delete p</code>; \u7684\u5f62\u5f0f (single-object delete expression) \u56de\u6536\uff1b\u5982\u679c p \u5728 new \u7684\u65f6\u5019\u521b\u5efa\u7684\u662f\u6570\u7ec4\uff0c\u5219\u5e94\u8be5\u7528 <code>delete[] p</code>;</p> <pre><code>struct Foo{ ~Foo(){ puts(\"dtor called\");}};\n\nint main()\n{\n    Foo *p = new Foo;\n    delete p;\n    puts(\"=====\");\n    Foo *p = new Foo[5];\n    delete[] p;\n}\n</code></pre> <p>\u6211\u4eec\u80fd\u591f\u5f97\u5230\u8f93\u51fa\uff1a <pre><code>dtor called\n=====\ndtor called\ndtor called\ndtor called\ndtor called\ndtor called\n</code></pre></p>"},{"location":"oop/class/#_2","title":"\u51fd\u6570\u9ed8\u8ba4\u53c2\u6570","text":"<pre><code>void point(int x = 3, int y = 4);\n\npoint(1, 2); // calls point(1, 2)\npoint(1);    // calls point(1, 4)\npoint();     // calls point(3, 4)\n</code></pre> <p>\u56e0\u6b64\uff0c\u5bf9\u6784\u9020\u51fd\u6570\uff1a <pre><code>class Container {\n    elem* val;\npublic:\n    Container(unsigned size = 512) {\n        val = (elem*)malloc(sizeof(elem) * size);\n    }\n};\n</code></pre> \u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>Container c1</code>; \u6784\u9020\u4e00\u4e2a\u9ed8\u8ba4\u5927\u5c0f (512) \u7684\u5bb9\u5668\uff0c\u6216\u8005\u7528 <code>Container c2(64);</code> \u6784\u9020\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5927\u5c0f\u7684\u5bb9\u5668\u4e86\u3002\u524d\u8005\u5b9e\u9645\u4e0a\u662f <code>Container(512)</code>\uff0c\u800c\u540e\u8005\u662f <code>Container(64)</code>\u3002</p>"},{"location":"oop/class/#_3","title":"\u51fd\u6570\u91cd\u8f7d","text":"<p>\u7528\u4f20\u5165\u7684\u53c2\u6570\u6765\u9009\u62e9\u4e0d\u540c\u7684\u6784\u9020\u51fd\u6570</p> <pre><code>double abd(double);\nint abs(int);\n\nabs(1.0);//calls abs(double)\nabs(1);//calls abs(int)\n</code></pre> <p>\u4e24\u4e2a\u53ea\u6709\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\u7684\u51fd\u6570\u4e0d\u662f\u5408\u6cd5\u7684\u91cd\u8f7d\uff0c\u56e0\u4e3a\u8c03\u7528\u65f6\u4e0d\u80fd\u5b8c\u6210\u91cd\u8f7d\u89e3\u6790\u3002\u5982\uff1a <pre><code>int f(int);\nvoid f(int);//error\n</code></pre> \u8981\u6ce8\u610f\u51fd\u6570\u91cd\u8f7d\u548c\u9ed8\u8ba4\u53c2\u6570\u7684\u4f7f\u7528\uff1a <pre><code>void f(int i = 1);\nvoid f();\n\nvoid foo() {\n    f(1);   // OK, call the first one\n    f();    // Error: ambiguous\n}\n</code></pre> \u6211\u4eec\u80fd\u591f\u770b\u5230\uff0c\u51fd\u6570\u91cd\u8f7d\u80fd\u591f\u5b8c\u5168\u8986\u76d6\u51fd\u6570\u9ed8\u8ba4\u53c2\u6570\u7684\u4f5c\u7528.</p>"},{"location":"oop/class/#destructor-dtordtor","title":"destructor \u6790\u6784\u51fd\u6570(dtor/d'tor)","text":"<p>\u81ea C++11 \u8d77\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7 = default; \u6216\u8005 = delete; \u6765\u751f\u6210\u9ed8\u8ba4\u7684\u6790\u6784\u51fd\u6570\uff0c\u6216\u8005\u5220\u9664 implicitly-declared destructor\u3002\u4f8b\u5982\uff1a <pre><code>class Foo{\nprivate:\n    ~Foo() = default;\n};\n</code></pre> \u8fd9\u91cc\u6211\u4eec\u544a\u8bc9\u7f16\u8bd1\u5668\u5728<code>private</code>\u8303\u56f4\u5185\u663e\u5f0f\u751f\u6210\u4e86\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570\u3002</p> <p><pre><code>struct Foo {\n    ~Foo() = delete;\n};\n</code></pre> \u8fd9\u91cc\u6211\u4eec\u5c06 implicitly-declared destructor \u6807\u8bb0\u4e3a deleted\u3002</p> <p>\u5982\u679c Foo \u7684\u6790\u6784\u51fd\u6570\u662f deleted \u7684\uff0c\u6216\u8005\u5728\u5f53\u524d\u4f4d\u7f6e\u4e0d\u53ef\u8bbf\u95ee (\u5982\u5f53\u524d\u5728\u7c7b\u5916\uff0c\u4f46\u662f\u6790\u6784\u51fd\u6570\u662f private \u7684)\uff0c\u90a3\u4e48\u7c7b\u4f3c Foo f; \u7684\u5168\u5c40\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u6216\u8005\u6210\u5458\u53d8\u91cf\u5b9a\u4e49\u662f\u975e\u6cd5\u7684\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7 new \u6765\u521b\u5efa\u4e00\u4e2a\u52a8\u6001\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a\u8fd9\u6837\u521b\u5efa\u7684\u5bf9\u8c61\u5e76\u4e0d\u9690\u5f0f\u5730\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u8c03\u7528\u6790\u6784\u51fd\u6570\u3002</p> <p>\u6570\u7ec4\u5143\u7d20\u7684\u6790\u6784\u51fd\u6570\u8c03\u7528\u987a\u5e8f\u4e0e\u5176\u6784\u9020\u987a\u5e8f\u76f8\u53cd\u3002</p> <p></p>"},{"location":"oop/class/#_4","title":"\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26","text":"<pre><code>class Container {\n    elem* val;\n    unsigned size = 0, capa;\npublic:\n    Container(unsigned capa) : val(new elem[capa]), capa(capa){}\n    ~Container() { delete[] val; }\n\n    void operator=(Container from) {\n        if (from-&gt;val != val) { // avoid self-assignment\n            if (from-&gt;capa != capa) { //\u5982\u679c capa \u548c from-&gt;capa \u7684\u503c\u76f8\u540c\uff0c\u90a3\u5c31\u6ca1\u5fc5\u8981\u91cd\u65b0\u5f00\u4e00\u4efd\u7a7a\u95f4\u4e86\n                delete[] val;\n                val = new elem[from-&gt;capa];\n            }\n            for (unsigned i = 0; i &lt; from-&gt;size; i++) {\n                val[i] = from-&gt;val[i];\n            }\n            size = from-&gt;size;\n            capa = from-&gt;capa;\n        }\n    }\n};\n</code></pre> <p>\u7528\u6237\u4e5f\u53ef\u4ee5\u5c06 operator= \u8bbe\u7f6e\u4e3a = default; \u6216\u8005 = delete;\u3002\u5982\u679c operator= \u5728\u5f53\u524d\u4e0a\u4e0b\u6587\u4e0d\u53ef\u89c1\uff0c\u90a3\u4e48 a = b; \u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u975e\u6cd5\uff1a <pre><code>class Foo { \n    void operator=(Foo){} // private operator=\n    void foo() {\n        Foo a, b;\n        a = b;      // OK, private function available here\n    }\n};\nstruct Bar { \n    void operator=(Bar) = delete; // deleted operator=\n    void foo() {\n        Bar c, d;\n        c = d;      // error: use of deleted function \n                    // 'void Bar::operator=(Bar)'\n    }\n};\n\nvoid foo() {\n    Foo a, b;\n    a = b;      // error: 'void Foo::operator=(Foo)' \n                // is private within this context\n    Bar c, d;\n    c = d;      // error: use of deleted function \n                // 'void Bar::operator=(Bar)'\n}\n</code></pre></p>"},{"location":"oop/class/#_5","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>\u5148\u8003\u8651\u4e00\u4e2a\u5b58\u653e M * M \u5927\u5c0f\u77e9\u9635\u7684\u7c7b Matrix\uff1a <pre><code>const int M = 100;\nclass Matrix {\n    int data[M][M]\n    // ...\n};\n</code></pre> \u4e8e\u662f\u6211\u4eec\u9700\u8981\u5904\u7406\u51fd\u6570\u91cd\u8f7d\uff1a <pre><code>const int M = 100;\nclass Matrix {\n    int data[M][M];\npublic:\n    Matrix operator+(Matrix mat) { /* */ }\n    Matrix operator*(int x) { /* */ }\n    Matrix operator*(Matrix mat) { /* */ }\n};\n</code></pre></p> <p>\u6b64\u65f6\uff0c\u5982\u679c\u6211\u4eec\u5199 <code>m1 * m2</code>\uff0c\u5176\u5b9e\u5c31\u7b49\u4ef7\u4e8e <code>m1 operator*(m2)</code>\uff0c\u5c31\u8c03\u7528\u6211\u4eec\u5199\u7684\u91cd\u8f7d\u4e86\uff01</p> <p>\u8fd9\u6837\u7684\u5b9e\u73b0\u65b9\u5f0f\u786e\u5b9e\u80fd\u591f\u5b9e\u73b0\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u4f46\u662f\u5b83\u9650\u5236\u4e86\u6211\u4eec\u53ea\u80fd\u5199\u51fa <code>Matrix * int</code> \u800c\u4e0d\u80fd\u5199\u51fa <code>int * Matrix</code>\uff0c\u56e0\u4e3a\u540e\u8005\u88ab\u89e3\u91ca\u4e3a <code>int::operator*(Matrix)</code>\uff0c\u4f46\u662f int \u4e2d\u5e76\u6ca1\u6709\u8fd9\u6837\u7684\u91cd\u8f7d\uff08C++ \u4e5f\u4e0d\u5e0c\u671b\u652f\u6301\u7ed9\u5185\u90e8\u7c7b\u578b\u589e\u52a0\u65b0\u7684\u8fd0\u7b972\uff09</p> <p>\u56e0\u6b64\u6211\u4eec\u8981\u8003\u8651\u628a\u8fd0\u7b97\u7b26\u91cd\u8f7d\u653e\u5728\u5168\u5c40\uff1a <pre><code>const int M = 100;\nclass Matrix {\n    int data[M][M];\npublic:\n    Matrix operator+(Matrix mat) {puts(\"func 1\"); return *this;}\n    Matrix operator+(int x) { puts(\"func 2\"); return *this; }\n    Matrix operator*(Matrix mat) { puts(\"func 3\"); return *this; }\n};\nMatrix operator+(int x, Matrix mat) { puts(\"func 4\"); return *this; }\n\nint main()\n{\n    Matrix a, b;\n    a + b;\n    a + 1;\n    1 + a;\n    a * b;\n}\n</code></pre> \u6211\u4eec\u53ef\u4ee5\u8f93\u51fa\uff1a <pre><code>func 1\nfunc 2\nfunc 4\nfunc 3\n</code></pre></p>"},{"location":"oop/class/#friend","title":"friend \u53cb\u5143\u51fd\u6570","text":"<p>c++\u5141\u8bb8\u4e00\u4e2a\u7c7b\u7684\u5b9a\u4e49\u6388\u4e88\u4e00\u4e2a\u5916\u90e8\u7684\u51fd\u6570\u8bbf\u95ee\u4ed6\u7684private\u6210\u5458\uff0c\u505a\u6cd5\u5c31\u662f\uff0c\u5c06\u8fd9\u4e2a\u51fd\u6570\u5728\u8be5\u7c7b\u7684\u5b9a\u4e49\u4e2d\u751f\u547d\u4e3a\u4e00\u4e2a\u53cb\u5143\u51fd\u6570\uff1a</p> <pre><code>const int M = 100;\nclass Matrix {\n    int data[M][M];\npublic:\n    Matrix operator+(Matrix mat) { /* */ }\n    Matrix operator*(int x) { /* */ }\n    Matrix operator*(Matrix mat) { /* */ }\n    friend Matrix operator*(int x, Matrix mat); // Designates a function as friend of this class\n};\nMatrix operator*(int x, Matrix mat) {\n    Matrix tmp = mat;   // copy mat\n    for (int i = 0; i &lt; M; i++)\n        for (int j = 0; j &lt; M; j++)\n            tmp.data[i][j] *= x;        // can access private member Matrix::data\n    return tmp;\n}\n</code></pre> <p>(\u5982\u679c\u6211\u4eec\u8981\u89e3\u51b3matrix\u4e58\u6cd5\u4f46\u662f\u53d7\u5230private\u9650\u5236\u53c8\u4e0d\u505a\u53cb\u5143\u51fd\u6570\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u89e3\u6cd5\uff1a) <pre><code>const int M = 100;\nclass Matrix {\n    int data[M][M];\npublic:\n    Matrix operator+(Matrix mat) { /* */ }\n    Matrix operator*(int x) { /* */ }\n    Matrix operator*(Matrix mat) { /* */ }\n};\nMatrix operator*(int x, Matrix mat) {\n    return mat * x;\n}\n</code></pre></p>"},{"location":"oop/class/#_6","title":"\u5f15\u7528","text":"<p>c\u8bed\u8a00\u4e2d\u6211\u4eec\u4f7f\u7528\u6307\u9488\u6765\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002\u4f8b\u5982\u6709\u51fd\u6570 <code>int getSum(Matrix mat);</code> \u5c31\u53ef\u4ee5\u6539\u4e3a <code>int getSum(Matrix * mat);</code>\uff0c\u8c03\u7528\u65f6\u901a\u8fc7 <code>getSum(&amp;m)</code>\uff0c\u5c31\u53ef\u4ee5\u53ea\u4f20\u9012\u6307\u9488\u800c\u4e0d\u5fc5\u62f7\u8d1d\u6574\u4e2a\u5bf9\u8c61\u4e86\u3002</p> <p>\u4e00\u4e2a\u5f15\u7528\u662f\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u6216\u8005\u51fd\u6570\u7684\u522b\u540d\u3002\u4f8b\u5982\uff1a \uff08**\u6ce8\u610f\u5f15\u7528\u8981\u5728\u5b9a\u4e49\u65f6\u7ed9\u51fa\u521d\u59cb\u5316\uff09 <pre><code>int x = 2;\nint &amp; y = x;    // y is an alias for x\n</code></pre></p> <p>\u8fd9\u6837\uff0c\u5bf9 y \u7684\u6240\u6709\u64cd\u4f5c\u90fd\u548c\u5bf9 x \u7684\u64cd\u4f5c\u4e00\u6837\u4e86\uff1by \u4e0d\u662f x \u7684\u6307\u9488\uff0c\u4e5f\u4e0d\u662f x \u7684\u526f\u672c\uff0c\u800c\u662f x \u672c\u8eab\u3002\u5305\u62ec\u83b7\u53d6\u5b83\u7684\u5730\u5740\u2014\u2014 &amp;y \u548c &amp;x \u7684\u503c\u76f8\u540c\u3002</p> <p>\u4e5f\u662f\u56e0\u6b64\uff0c\u6211\u4eec\u65e0\u6cd5\u91cd\u65b0\u7ea6\u675f\u4e00\u4e2a\u5f15\u7528\u6240\u7ed1\u5b9a\u7684\u53d8\u91cf\u3002\u56e0\u4e3a\uff1a <pre><code>int z = 3;\ny = z;\n</code></pre> \u8fd9\u91cc\u7684 <code>y = z</code> \u662f\u5728\u8fdb\u884c\u8d4b\u503c\u800c\u4e0d\u662f\u91cd\u65b0\u7ed1\u5b9a\u3002</p> <p>\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\uff0c\u7ed9\u4e00\u4e2a\u53d8\u91cf\u8d77\u4e00\u4e2a\u522b\u540d\u5e76\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u73b0\u5b9e\u610f\u4e49\u3002\u5f15\u7528\u6700\u5e7f\u6cdb\u7684\u7528\u6cd5\u662f\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8ba9 <code>Matrix</code> \u53bb\u4f20\u9012\u5f15\u7528\uff1a <pre><code>const int M = 100;\nclass Matrix {\n    int data[M][M];\npublic:\n    Matrix operator-(const Matrix &amp; mat) {\n        Matrix res;\n        for (int i = 0; i &lt; M; i++)\n            for (int j = 0; j &lt; M; j++)\n                res.data[i][j] = data[i][j] - mat.data[i][j];\n        return res;\n    }\n};\n</code></pre> \u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 <code>const Matrix &amp; mat</code> \u800c\u4e0d\u662f <code>Matrix &amp; mat</code>,\u662f\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u58f0\u660e <code>mat</code> \u662f\u53ea\u8bfb\u4e0d\u53ef\u5199\u7684\u3002</p> <p>\uff08\u6211\u4eec\u80fd\u611f\u89c9\u5230\uff0cc++\u4e2d&amp;\u8fd9\u4e2a\u7b26\u53f7\u8868\u793a\u7684\u662f\u5f15\u7528\uff0c\u800c*\u8fd9\u4e2a\u7b26\u53f7\u5219\u8868\u793a\u7684\u662f\u6307\u9488\u3002</p> <p>\u5f15\u7528\u4e0e\u91cd\u8f7doverload</p> <p>\u5c06\u4e00\u4e2a int \u7c7b\u578b\u7684\u53d8\u91cf\u4f20\u9012\u7ed9 int \u7c7b\u578b\u7684\u53c2\u6570\u548c int &amp; \u7c7b\u578b\u7684\u53c2\u6570\u7684\u4f18\u5148\u7ea7\u662f\u4e00\u6837\u7684\uff0c\u5c06 int \u7c7b\u578b\u7684\u53d8\u91cf\u4f20\u9012\u7ed9 int \u7c7b\u578b\u7684\u53c2\u6570\u548c const int &amp; \u7c7b\u578b\u7684\u53c2\u6570\u7684\u4f18\u5148\u7ea7\u4e5f\u662f\u4e00\u6837\u7684\u3002 <pre><code>void f(int x) { puts(\"int\"); }      // Overload #1\nvoid f(int &amp; r) { puts(\"int &amp;\"); }  // Overload #2\n\nint main() {\n    int x = 1;\n    f(1);       // OK, only #1 valid\n    f(x);       // Error: ambiguous overload\n}\n</code></pre> \u4e0d\u8fc7\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u91cd\u8f7d\uff0c\u5b83\u4eec\u5728\u67d0\u4e00\u4e2a\u53c2\u6570\u4e0a\u7684\u552f\u4e00\u533a\u522b\u662f <code>int &amp;</code> \u548c <code>const int &amp;</code>\uff0c\u800c <code>int</code> \u7c7b\u578b\u7684\u53d8\u91cf\u7ed1\u5b9a\u7ed9\u8fd9\u4e24\u79cd\u53c2\u6570\u90fd\u662f\u53ef\u884c\u7684\uff0c\u6b64\u65f6 <code>int &amp;</code> \u7684\u66f4\u4f18\u3002 <pre><code>void h(int &amp; r) { puts(\"int &amp;\"); }\nvoid h(const int &amp; r) { puts(\"const int &amp;\"); }\n\nint main() {\n    int x = 1;          // Overload #1\n    const int y = 2;    // Overload #2\n\n    h(1);   // OK, only #2 valid\n    h(x);   // OK, #1 called as x -&gt; 'int&amp;' is better than x -&gt; 'const int&amp;'\n    h(y);   // OK, only #2 valid\n}\n</code></pre></p> <p>\u5173\u4e8e\u5f15\u7528\u548cconst\u7684\u521d\u59cb\u5316</p> <p>\u5f15\u7528\u548cconst\u53d8\u91cf\u90fd\u9700\u8981\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u7ed9\u51fa\u521d\u59cb\u5316\u3002\u5f53\u5728\u4e00\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u5f15\u7528\u548cconst\u53d8\u91cf\u4f46\u53c8\u6ca1\u6709\u76f4\u63a5\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u6784\u9020\u51fd\u6570\u4e2d\u7ed9\u51fa\u521d\u59cb\u5316\u3002\u50cf\u8fd9\u6837\uff1a <pre><code>int global = 10;\n\nclass Foo {\n    const int x = 4;    // OK\n    const int y;        // must be initialized by member initializer list\n    int &amp; rz = global;  // OK\n    int &amp; rw;           // must be initialized by member initializer list\npublic:\n    Foo(int m, int &amp; n) : y(m), rw(n) {}  // OK\n    Foo() : y(0), rw(global) {}           // OK\n    Foo() : y(0) {}         // Error: uninitialized reference member in 'int&amp;'\n    Foo() : rw(global) {}   // Error: uninitialized const member in 'const int'\n};\n</code></pre></p>"},{"location":"oop/class/#io-stream","title":"I/O stream","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing std::istream;\nusing std::ostream;\nusing std::string;\nusing std::to_string;\n\nclass Complex {\nprivate:\n    double real, imaginary;\npublic:\n    // ...\n    string toString() const;\n    friend istream&amp; operator&gt;&gt;(istream&amp; is, Complex&amp; right);\n};\n\nstring Complex::toString() const {\n    string str = to_string(this-&gt;real);\n    str += \" + \";\n    str += to_string(this-&gt;imaginary);\n    str += 'i';\n    return str;\n}\n\nostream&amp; operator&lt;&lt;(ostream&amp; os, const Complex&amp; right) {\n    return os &lt;&lt; right.toString();\n}\n\nistream&amp; operator&gt;&gt;(istream&amp; is, Complex&amp; right) {\n    char op;\n    is &gt;&gt; right.real &gt;&gt; op &gt;&gt; right.imaginary &gt;&gt; op;\n    return is;\n}\n\nint main() {\n    Complex c;\n    std::cin &gt;&gt; c;\n    std::cout &lt;&lt; c;\n}\n</code></pre> <p>\u4e0d\u80fd\u89e3\u91ca\u4f46\u662f\u80fd\u770b\u61c2\u3002\u3002\u3002\u3002\u3002</p> <p>istream \u548c ostream \u662f\u7c7b\u578b\uff0c\u5206\u522b\u6307\u8f93\u5165\u548c\u8f93\u51fa\u3002</p>"},{"location":"oop/class/#const","title":"const \u6210\u5458","text":"<p>\u5f53\u6211\u4eec\u8fd9\u6837\u5b9a\u4e49\u65f6\uff0c <pre><code>class Complex {\n    string toString() const;\n};\n</code></pre> \u58f0\u660e\u4e3a const \u7684\u6210\u5458\u51fd\u6570\uff08const\u653e\u5728\u540e\u9762\uff09\u6210\u4e3a const \u6210\u5458\u51fd\u6570\u3002const \u4fdd\u8bc1\u4e0d\u4f1a\u66f4\u6539 *this \u7684\u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u58f0\u660e\u4e3a <code>const</code> \u7684\u6210\u5458\u51fd\u6570\u4e2d\uff0c<code>this</code> \u7684\u7c7b\u578b\u662f <code>const Complex *</code>\uff1b\u800c\u5982\u679c\u6ca1\u6709\u58f0\u660e\u4e3a <code>const</code>\uff0c\u5219 <code>this</code> \u7684\u7c7b\u578b\u662f <code>Complex *</code>\u3002</p> <p>\u5728 const \u6210\u5458\u51fd\u6570\u4e2d\uff0c\u8bd5\u56fe\u8c03\u7528\u5176\u4ed6\u975e const \u6210\u5458\u51fd\u6570\uff0c\u6216\u8005\u66f4\u6539\u6210\u5458\u53d8\u91cf\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\u3002</p> <p>\u6ce8\u610f\uff0c<code>const int Foo::foo();</code> \u4e0d\u662f <code>const</code> \u6210\u5458\u51fd\u6570\uff0c\u5b83\u662f\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a <code>const int</code> \u7684 non-const \u6210\u5458\u51fd\u6570\u3002</p> <p>\u6211\u4eec\u56de\u987e\u4e4b\u524d\u7684\u5bf9 <code>operator[]</code> \u7684\u91cd\u8f7d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u901a\u5e38\u7684\u8bbe\u8ba1\u4f1a\u8fd9\u6837\u91cd\u8f7d\uff1a</p> <p><pre><code>class Container {\n    elem * data;\n    // ...\npublic:\n          elem &amp; operator[](unsigned index)       { return data[index]; }\n    const elem &amp; operator[](unsigned index) const { return data[index]; }\n    // ...\n}\n</code></pre> \u5f53\u8c03\u7528\u8005\u662f <code>const Container</code> \u65f6\uff0c\u7b2c\u4e8c\u4e2a\u91cd\u8f7d\u4f1a\u88ab\u4f7f\u7528\uff0c\u6b64\u65f6\u8fd4\u56de\u7684\u662f\u5bf9\u7b2c <code>index</code> \u4e2a\u5143\u7d20\u7684 <code>const</code> \u5f15\u7528\uff1b\u800c\u5982\u679c\u8c03\u7528\u8005\u662f <code>Container</code> \u65f6\uff0c\u7b2c\u4e00\u4e2a\u91cd\u8f7d\u4f1a\u88ab\u4f7f\u7528\uff0c\u6b64\u65f6\u8fd4\u56de\u7684\u662f\u5bf9\u7b2c <code>index</code> \u5143\u7d20\u7684 <code>non-const</code> \u5f15\u7528\u3002</p>"},{"location":"oop/class/#static","title":"static \u6210\u5458\u53d8\u91cf","text":"<p>C++ \u89c4\u5b9a\uff0c\u5728\u7c7b\u5b9a\u4e49\u4e2d\uff0c\u7528 <code>static</code> \u58f0\u660e\u6ca1\u6709\u7ed1\u5b9a\u5230\u7c7b\u7684\u5b9e\u4f8b\u4e2d\u7684\u6210\u5458\uff1b\u4f8b\u5982\uff1a <pre><code>struct User {\n    static int tot;\n    int id;\n    User() : id(tot++) {}\n};\nint User::tot = 0;\n</code></pre> \u5b83\u7684\u751f\u547d\u5468\u671f\u4ecd\u7136\u4ece\u5b83\u7684\u5b9a\u4e49 <code>int User::tot = 0;</code> \u5f00\u59cb\uff0c\u5230\u7a0b\u5e8f\u7ed3\u675f\u4e3a\u6b62\u3002\u7531\u4e8e\u5b83\u662f\u7c7b\u7684\u6210\u5458\uff0c\u56e0\u6b64\u8bbf\u95ee\u5b83\u7684\u65f6\u5019\u9700\u8981\u7528 <code>User::tot</code>\u3002</p> <p>static \u6210\u5458\u4e0d\u88ab\u7ed1\u5b9a\u5230\u7c7b\u7684\u5b9e\u4f8b\u4e2d\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762 User \u7c7b\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u91cc\u4ecd\u7136\u53ea\u6709 id \u800c\u6ca1\u6709 tot\u3002(\u4f46\u662f\u8bed\u6cd5\u4e0a\u4ecd\u7136\u5141\u8bb8\u7528\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u8bbf\u95ee static \u6210\u5458\uff0c\u4f8b\u5982 user.tot)</p> <p>\u6ce8\u610f\uff0cstatic \u6210\u5458\u4e0d\u5141\u8bb8\u4f7f\u7528 default member initializer \u548c member initializer list\u3002</p> <p>\u5728\u7c7b\u4e2d\u7684 static \u6210\u5458\u53d8\u91cf\u53ea\u662f\u58f0\u660e\u3002\u6211\u4eec\u5fc5\u987b\u5728\u7c7b\u5916\u7ed9\u51fa\u5176\u5b9a\u4e49\uff0c\u624d\u80fd\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\u5728\u54ea\u91cc\u6784\u9020\u8fd9\u4e9b\u6210\u5458\u3002</p> <pre><code>class Foo {\n    static int a;\n    static int b;\n};\n\nint Foo::a = 1;\nint Foo::b;\n</code></pre>"},{"location":"oop/class/#inheritance-derived","title":"inheritance \u7ee7\u627f\u548c derived \u6d3e\u751f\u7c7b","text":"<p>\u5bf9\u4e00\u4e2a\u7c7b\u7684\u7ee7\u627f\uff1apublic \u53ef\u4ee5\u88ab\u7ee7\u627f\uff0cprivate \u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f\uff0cprotected \u53ef\u4ee5\u88ab\u7ee7\u627f\u4f46\u4e0d\u80fd\u88ab\u4ece\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u3002</p> <p>\u5728\u6d3e\u751f\u7c7b\u5185\u90e8\uff08\u6210\u5458\u51fd\u6570\u6216\u8005\u53cb\u5143\u51fd\u6570\uff09\u4f7f\u7528\u57fa\u7c7b\u6210\u5458\u65f6\uff0c\u4e0d\u53d7\u7ee7\u627f\u65b9\u5f0f\u7684\u5f71\u54cd\uff0c\u53ea\u770b\u8be5\u6210\u5458\u5728\u57fa\u7c7b\u4e2d\u7684\u5c5e\u6027\uff08\u56e0\u6b64\u79c1\u6709\u6210\u5458\u4e0d\u80fd\u88ab\u8bbf\u95ee\uff09\uff1b\u5728\u6d3e\u751f\u7c7b\u5916\u90e8\u4f7f\u7528\u57fa\u7c7b\u6210\u5458\u65f6\uff0c\u7ee7\u627f\u65b9\u5f0f\u4f1a\u5f71\u54cd\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u5c5e\u6027\u3002</p> <p>\u4e09\u79cd\u7ee7\u627f\u65b9\u5f0f\uff1aprivate \u7ee7\u627f\uff0cprotected \u7ee7\u627f\uff0cpublic \u7ee7\u627f\u3002</p> <ul> <li>public: \u6240\u6709\u57fa\u7c7b\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u4fdd\u6301\u539f\u6709\u7684\u8bbf\u95ee\u7ea7\u522b</li> <li>protected: public-&gt;protected\uff0c\u5176\u4f59\u4e0d\u53d8</li> <li>private: \u6240\u6709\u57fa\u7c7b\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u53d8\u4e3aprivate\u6210\u5458</li> </ul> \u7ee7\u627f\u65b9\u5f0f/\u57fa\u7c7b\u6210\u5458 public\u6210\u5458 protected\u6210\u5458 private\u6210\u5458 public\u7ee7\u627f public protected \u4e0d\u53ef\u89c1 protected\u7ee7\u627f protected protected \u4e0d\u53ef\u89c1 private\u7ee7\u627f private private \u4e0d\u53ef\u89c1 <p>\u6d3e\u751f\u7c7b\u62e5\u6709\u57fa\u7c7b\u6240\u6709\u6210\u5458\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u6210\u5458\u3002\u6d3e\u751f\u7c7b\u6210\u5458\u662f\u6307\u5728\u6d3e\u751f\u7c7b\u4e2d\u5305\u542b\u4f46\u4e0d\u5728\u57fa\u7c7b\u4e2d\u5305\u542b\u7684\u6210\u5458\u3002</p> <p>\u53cb\u5143\u4e0d\u662f\u7c7b\u7684\u6210\u5458\uff0c\u56e0\u6b64\u4e0d\u80fd\u88ab\u7ee7\u627f\u3002</p> <pre><code>class Derived : public Base1, private Base2{\n// \u6d3e\u751f\u7c7b\u7684\u6210\u5458\u5217\u8868\n}\n</code></pre>"},{"location":"oop/class/#virtual","title":"virtual \u865a\u51fd\u6570","text":"<p>\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u65f6\u5019\uff0c\u80fd\u6b63\u786e\u8c03\u7528\u6d3e\u751f\u7c7b\u4e2d\u7684\u5b9e\u73b0\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u591a\u6001\u3002</p> <p>\u5728\u6210\u5458\u51fd\u6570\u58f0\u660e\u7684\u65f6\u5019\uff0c\u5728\u5176\u524d\u9762\u52a0\u4e0a <code>virtual</code> \u4f7f\u5176\u53d8\u4e3a\u865a\u51fd\u6570\u3002\uff08\u5b9a\u4e49\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u52a0\uff09</p> <p>\u62e5\u6709\u865a\u51fd\u6570\u7684\u7c7b\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u865a\u51fd\u6570\u8868 <code>vtbl</code> \uff08\u5c5e\u4e8e\u7c7b\u800c\u4e0d\u662f\u5bf9\u8c61\uff09\uff0c\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u91cc\u9762\u7684\u5143\u7d20\u662f\u865a\u51fd\u6570\u7684\u51fd\u6570\u6307\u9488\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u5bf9\u8c61\u5185\u90e8\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u865a\u8868\u6307\u9488 <code>*vptr</code> \uff08\u901a\u5e38\u4f1a\u5728\u5bf9\u8c61\u5185\u5b58\u7684\u6700\u8d77\u59cb\u4f4d\u7f6e\uff09\uff0c\u6307\u5411\u7c7b\u7684\u865a\u8868 <code>vtbl</code> \u5728\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u7ecf\u7531 <code>vptr</code> \u627e\u5230 <code>vtbl</code> \uff0c\u518d\u901a\u8fc7 <code>vtbl</code> \u4e2d\u7684\u51fd\u6570\u6307\u9488\u627e\u5230\u5bf9\u5e94\u865a\u51fd\u6570\u7684\u4ee3\u7801\u5e76\u8fdb\u884c\u8c03\u7528\u3002</p>"},{"location":"oop/class/#override","title":"override \u91cd\u5199","text":"<p>\u5728\u7ee7\u627f\u65f6\uff0c\u6d3e\u751f\u7c7b\u4f1a\u7ee7\u627f\u57fa\u7c7b\u7684\u865a\u8868\uff0c\u865a\u51fd\u6570\u7ee7\u627f\u4e4b\u540e\u4ecd\u662f\u865a\u51fd\u6570\uff08\u4e0d\u7528\u52a0 <code>virtual</code> \uff09</p> <p>\u4e5f\u53ef\u4ee5\u91cd\u5199\u865a\u51fd\u6570\uff1a</p> <p>\u6ce8\u610f\uff0c\u975e\u865a\u51fd\u6570\u4e0d\u80fd\u91cd\u5199\uff01\uff08\u4e0d\u662foverride\uff09</p> <pre><code>class A {\npublic:\nvirtual void vfunc1();\nvirtual void vfunc2();\nvoid func1();\nvoid func2();\nprivate:\nint m_data1, m_data2;\n};\nclass B : public A {\npublic:\nvoid vfunc1() override; // \u6700\u597d\u7528override\u8868\u8fbe\u8fd9\u4e2a\u51fd\u6570\u662f\u7ee7\u627f\u800c\u6765\u7684\nvoid func1();\nprivate:\nint m_data3;\n};\nclass C: public B {\npublic:\nvoid vfunc2() override;\nvoid func2();\nprivate:\nint m_data1, m_data4;\n};\nB bobject; // \u7c7bB\u7684\u4e00\u4e2a\u5bf9\u8c61\nA* p = &amp;bobject; // \u901a\u8fc7\u57fa\u7c7b\u6307\u9488*p\u6307\u5411\u6d3e\u751f\u7c7bB\u7684\u5bf9\u8c61\n</code></pre>"},{"location":"oop/class/#_7","title":"\u9759\u6001\u7ed1\u5b9a\u4e0e\u52a8\u6001\u7ed1\u5b9a","text":"<p>\u9759\u6001\u7ed1\u5b9a(static/early binding)\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u51b3\u5b9a\u51fd\u6570\u662f\u54ea\u4e2a\u7c7b\u7684\u51fd\u6570\uff08\u6b64\u65f6\u5bf9\u8c61\u8fd8\u672a\u521b\u5efa\uff09\u9002\u7528\u4e8e\u666e\u901a\u6210\u5458\u51fd\u6570\uff0c\u6839\u636e\u6307\u9488\u81ea\u8eab\u7684\u7c7b\u578b\u6765\u51b3\u5b9a</p> <p>\u52a8\u6001\u7ed1\u5b9a(dynamic/late binding)\uff0c\u5728\u8fd0\u884c\u9636\u6bb5\u51b3\u5b9a\u51fd\u6570\u662f\u54ea\u4e2a\u7c7b\u7684\u51fd\u6570\uff0c\u9002\u7528\u4e8e\u865a\u51fd\u6570\uff0c\u6839\u636e\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6765\u51b3\u5b9a\uff08\u5fc5\u987b\u5728\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u540e\u624d\u80fd\u51b3\u5b9a\uff0c\u56e0\u6b64\u53ea\u80fd\u5728\u8fd0\u884c\u9636\u6bb5\u5224\u65ad\uff09\u3002\u5bf9\u4e8e\u5f88\u591a\u5176\u5b83\u8bed\u8a00\uff0c\u9ed8\u8ba4\u4e3a\u52a8\u6001\u7ed1\u5b9a</p> <pre><code>class animal {\npublic:\nvoid print() { cout &lt;&lt; \"I'm an animal.\" &lt;&lt; endl; }\nvirtual void vprint() { cout &lt;&lt; \"I'm an animal.\" &lt;&lt; endl; }\nvirtual ~animal() = default;\n};\nclass dog : public animal {\npublic:\nvoid print() { cout &lt;&lt; \"I'm a dog.\" &lt;&lt; endl; } // \u8fd9\u662foverwrite\uff0c\u4e0d\u597d\nvoid vprint() override{ cout &lt;&lt; \"I'm a dog.\" &lt;&lt; endl; } // override\nvirtual ~dog() = default;\n};\nint main() {\ndog D;\nanimal* p = &amp;D; // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\np-&gt;print(); // early binding\uff0c\u6307\u9488p\u4e3aanimal*\u7c7b\u578b\uff0c\u76f4\u63a5\u91c7\u7528\u57fa\u7c7banimal\u4e2d\u7684print()\uff0c\n\u8ddf\u6d3e\u751f\u7c7bdog\u65e0\u5173\uff0c\u65e0\u6cd5\u505a\u5230\u591a\u6001\n// \u88ab\u7ffb\u8bd1\u4e3aanimal::print(p);\np-&gt;vprint(); // late binding\uff0c\u6307\u9488p\u6307\u5411\u7684\u5bf9\u8c61\u4e3adog\u7c7b\u578b\uff0c\u6545\u91c7\u7528\u6d3e\u751f\u7c7bdog\u4e2d\u7684\nvprint()\u800c\u4e0d\u662f\u57fa\u7c7banimal\u4e2d\u7684vprint()\n// \u88ab\u7ffb\u8bd1\u4e3a( *(p-&gt;vptr)[0] )(p)\uff0c\u5373( p-&gt;vtbl[0] )(p)\n// \u539f\u7406\uff1a\u5148\u901a\u8fc7\u6307\u9488p\u627e\u5230\u5bf9\u8c61D\uff0c\u518d\u901a\u8fc7\u5bf9\u8c61D\u4e2d\u7684\u865a\u6307\u9488\u627e\u5230\u7c7bdog\u7684\u865a\u8868\uff0c\u518d\u5230\u865a\u8868\u91cc\u627e\u5230\nvprint()\u7684\u51fd\u6570\u6307\u9488\nreturn 0;\n}\n</code></pre>"},{"location":"oop/class/#_8","title":"\u7eaf\u865a\u51fd\u6570","text":"<p>\u5728\u865a\u51fd\u6570\u540e\u52a0 <code>=0</code> \uff0c\u5982 <code>virtual void func()=0</code>\uff0c\u5b50\u7c7b\u5fc5\u987b\u63d0\u4f9b\u7eaf\u865a\u51fd\u6570\u7684\u4e2a\u6027\u5316\u5b9e\u73b0\u3002</p> <p>\u5b9a\u4e49\u7eaf\u865a\u51fd\u6570\u662f\u4e3a\u4e86\u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3\uff0c\u8d77\u5230\u4e00\u4e2a\u89c4\u8303\u7684\u4f5c\u7528\uff0c\u89c4\u8303\u7ee7\u627f\u8fd9\u4e2a\u7c7b\u7684\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570\u3002</p> <p>\u4f7f\u7528\u7eaf\u865a\u51fd\u6570\uff0c\u4e00\u822c\u53d1\u751f\u5728\u57fa\u7c7b\u65e0\u6cd5\u63d0\u4f9b\u5408\u7406\u7684\u7f3a\u7701\u5b9e\u73b0\u7684\u65f6\u5019\uff08\u5426\u5219\u7528\u865a\u51fd\u6570\u5c31\u884c\u4e86\uff09\u3002</p> <p>\u7eaf\u865a\u51fd\u6570\u6ca1\u6709body\uff0c\u53ea\u6709\u58f0\u660e\uff0c\u56e0\u6b64\u7eaf\u865a\u51fd\u6570\u4e0d\u80fd\u88ab\u76f4\u63a5\u8c03\u7528\uff1b\u7eaf\u865a\u51fd\u6570\u5fc5\u987b\u88aboverride\uff0c\u82e5\u6d3e\u751f\u7c7b\u6ca1\u6709\u7ed9\u51fa\u5b9e\u73b0\uff0c\u5219\u5176\u4ecd\u7136\u4e3a\u7eaf\u865a\u51fd\u6570</p>"},{"location":"oop/class/#abstract","title":"abstract \u62bd\u8c61\u7c7b","text":"<p>\u53ea\u8981\u7c7b\u4e2d\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u662f\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u521b\u5efa\u8be5\u7c7b\u7684\u5bf9\u8c61\uff0c\u4f46\u53ef\u4ee5\u521b\u5efa\u6307\u9488\uff1b\u53ea\u80fd\u5f53\u505a\u57fa\u7c7b\uff0c\u662f\u4e00\u4e2a\u6982\u5ff5\u5316\u7684\u4e1c\u897f</p>"},{"location":"oop/class/#_9","title":"\u534f\u8bae\u7c7b","text":"<p>\u7c7b\u91cc\u6ca1\u6709\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u800c\u4e14\u6240\u6709\u6210\u5458\u51fd\u6570\u90fd\u662f\u7eaf\u865a\u51fd\u6570\uff0c\u5219\u79f0\u4e3a\u534f\u8bae\u7c7b\uff0c\u53ef\u4ee5\u5b89\u5168\u5730\u5b9e\u73b0\u591a\u7ee7\u627f</p>"},{"location":"oop/class/#stl","title":"STL","text":""},{"location":"oop/class/#stdsort","title":"std::sort","text":"<p>\u4f7f\u7528 <code>sort</code> \u9700\u8981\u6dfb\u52a0\u5934\u6587\u4ef6 <code>include &lt;algorithm&gt;</code></p> <p>sort \u53ef\u4ee5\u5bf9\u6570\u7ec4\u6216\u8005\u662fvector\u7b49\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\u4e14\u5143\u7d20\u53ef\u6bd4\u8f83\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u6392\u5e8f\uff0c\u5e73\u5747\u548c\u6700\u5dee\u590d\u6742\u5ea6\u5747\u4e3a \\(O(nlogn)\\)</p> <p><pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nint main()\n{\n    using std::vector;\n    using std::cout;\n    using std::endl;\n\n    int s[] = {5, 7, 4, 2, 8, 6, 1, 9, 0, 3};\n    vector&lt;int&gt; v = {5, 7, 4, 2, 8, 6, 1, 9, 0, 3};\n\n    std::sort(s, s + 10);\n    for (int i : s) \n        cout &lt;&lt; i &lt;&lt; \" \";\n    cout &lt;&lt; endl;\n\n    std::sort(v.begin(), v.end(), std::greater&lt;int&gt;());\n    for (int i : v) \n        cout &lt;&lt; i &lt;&lt; \" \";\n    cout &lt;&lt; endl;\n}\n</code></pre> output \u5982\u4e0b\uff1a <pre><code>0 1 2 3 4 5 6 7 8 9 \n9 8 7 6 5 4 3 2 1 0 \n</code></pre></p> <ul> <li><code>std::sort(s, s + 10)</code> \u8868\u793a\u5bf9\u6570\u7ec4 s \u7684 \\([s, s + 10)\\)\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\uff08\u8fd9\u91cc\u6ca1\u6709\u505a\u7279\u522b\u8bf4\u660e\u5c31\u662f\u9ed8\u8ba4\u5347\u5e8f\u6392\u5e8f\u3002</li> <li><code>std::sort(s, s + 10, std::greater&lt;int&gt;())</code> \u8868\u793a\u6392\u5e8f\u65f6\u5927\u7684\u653e\u524d\u9762\uff08\u964d\u5e8f\uff09</li> <li><code>std::sort(s, s + 10, cmp)</code> \u52a0\u5165\u6bd4\u8f83\u51fd\u6570\uff0c\u6bd4\u8f83\u51fd\u6570\u903b\u8f91\u4e0a<code>a \u4e25\u683c\u5728 b \u524d\u9762</code>\uff0c\u5f53\u4e24\u4e2a\u51fd\u6570\u76f8\u7b49\u65f6return false</li> <li>\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u53ef\u4ee5\u9002\u7528\u66f4\u590d\u6742\u7684\u6392\u5e8f\uff0c\u4f8b\u5982\u9700\u8981\u6bd4\u8f83\u7684\u5143\u7d20\u672c\u8eab\u5e76\u6ca1\u6709\u5185\u7f6e\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u65f6\u5019\u3002</li> </ul> <pre><code>bool cmp(const int&amp; a, const int&amp; b) { return a &gt; b; }\nvector&lt;int&gt; v = {3, 1, 4, -2, 5, 3};\nsort(v.begin(), v.end(), cmp);\n</code></pre>"},{"location":"oop/class/#stl_1","title":"STL \u90fd\u6709\u4ec0\u4e48","text":""},{"location":"oop/class/#_10","title":"\u6570\u636e\u7ed3\u6784","text":"<p>Sequence containers: vector, deque, array, list\uff08\u53cc\u5411\u94fe\u8868\uff09, forward_list</p> <p></p> <p>Associative containers: set\uff08\u7ea2\u9ed1\u6811\uff09, map\uff08\u5b57\u5178\uff09, multiset, multimap</p>"},{"location":"oop/class/#others","title":"Others","text":""},{"location":"oop/class/#template","title":"Template","text":"<pre><code>// C++ Program to demonstrate\n// Use of template\n#include &lt;iostream&gt;\nusing namespace std;\n\n// One function works for all data types.  This would work\n// even for user defined types if operator '&gt;' is overloaded\ntemplate &lt;typename T&gt; T myMax(T x, T y)\n{\n    return (x &gt; y) ? x : y;\n}\n\nint main()\n{\n    // Call myMax for int\n    cout &lt;&lt; myMax&lt;int&gt;(3, 7) &lt;&lt; endl;\n    // call myMax for double\n    cout &lt;&lt; myMax&lt;double&gt;(3.0, 7.0) &lt;&lt; endl;\n    // call myMax for char\n    cout &lt;&lt; myMax&lt;char&gt;('g', 'e') &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\u6bd4\u5982\u8bf4\uff0c\u7528c++\u7684template\u5b8c\u6210\u4e00\u4e2abubble sort</p> <pre><code>// C++ Program to implement\n// Bubble sort\n// using template function\n#include &lt;iostream&gt;\nusing namespace std;\n\n// A template function to implement bubble sort.\n// We can use this for any data type that supports\n// comparison operator &lt; and swap works for it.\ntemplate &lt;class T&gt; void bubbleSort(T a[], int n)\n{\n    for (int i = 0; i &lt; n - 1; i++)\n        for (int j = n - 1; i &lt; j; j--)\n            if (a[j] &lt; a[j - 1])\n                swap(a[j], a[j - 1]);\n}\n\n// Driver Code\nint main()\n{\n    int a[5] = { 10, 50, 30, 40, 20 };\n    int n = sizeof(a) / sizeof(a[0]);\n\n    // calls template function\n    bubbleSort&lt;int&gt;(a, n);\n\n    cout &lt;&lt; \" Sorted array : \";\n    for (int i = 0; i &lt; n; i++)\n        cout &lt;&lt; a[i] &lt;&lt; \" \";\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u662fclass templates <pre><code>// C++ Program to implement\n// template Array class\n#include &lt;iostream&gt;\nusing namespace std;\n\ntemplate &lt;typename T&gt; class Array {\nprivate:\n    T* ptr;\n    int size;\n\npublic:\n    Array(T arr[], int s);\n    void print();\n};\n\ntemplate &lt;typename T&gt; Array&lt;T&gt;::Array(T arr[], int s)\n{\n    ptr = new T[s];\n    size = s;\n    for (int i = 0; i &lt; size; i++)\n        ptr[i] = arr[i];\n}\n\ntemplate &lt;typename T&gt; void Array&lt;T&gt;::print()\n{\n    for (int i = 0; i &lt; size; i++)\n        cout &lt;&lt; \" \" &lt;&lt; *(ptr + i);\n    cout &lt;&lt; endl;\n}\n\nint main()\n{\n    int arr[5] = { 1, 2, 3, 4, 5 };\n    Array&lt;int&gt; a(arr, 5);\n    a.print();\n    return 0;\n}\n</code></pre></p>"},{"location":"oop/class/#nullptr-null","title":"nullptr \u4e0e NULL \u7684\u533a\u522b","text":"<p><code>nullptr</code> \u8868\u793a\u7a7a\u6307\u9488\uff0cc\u4e2d <code>NULL</code> \u4e5f\u53ef\u4ee5\u5f15\u5165 C++ \u4e2d\u4f7f\u7528\u3002</p> <p>c++\u4e2d\uff0c<code>int *p = NULL;</code> \u4f1a\u5f15\u53d1\u9519\u8bef\uff1b\u56e0\u6b64\u6211\u4eec\u5c06NULL \u5b9a\u4e49\u4e3a0\uff0c\u4f7f<code>int *p = 0;</code> \u5408\u6cd5</p> <p>\u51fd\u6570\u91cd\u8f7d\u65f6\uff0c <pre><code>void f(int *);\nvoid f(int);\n\nf(nullptr);   // f(int *) is called\n</code></pre></p>"},{"location":"os/os/","title":"Operating System","text":""},{"location":"os/os/#ch1-released-version","title":"CH1 released version","text":"<ul> <li>Computer startup</li> <li>bootstrap program<ul> <li>stored in ROM, loads os kernel and starts execution</li> </ul> </li> <li>\u51af\u8bfa\u4f9d\u66fc\u67b6\u6784\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u662f main memory</li> </ul>"},{"location":"os/os/#interrupt","title":"Interrupt","text":"<ul> <li>Computer system Operation</li> <li></li> <li>IO \u548c CPU \u53ef\u4ee5\u5e76\u53d1\u6267\u884c concurrently</li> <li>\u6bcf\u4e00\u4e2a device controller \u90fd\u6709\u4e00\u4e2a local buffer\uff0c\u6267\u884c\u524d CPU \u5c06\u4e3b\u5185\u5b58\u4e2d\u7684\u6570\u636e\u79fb\u5230 local buffer</li> <li>local buffer \u7684\u4f5c\u7528\u662f\u89e3\u51b3 CPU \u548c controller \u901f\u5ea6\u4e0d\u9002\u914dspeed mismatch\u7684\u95ee\u9898\uff0c\u56e0\u6b64controller \u5b8c\u6210 operation\u7684\u65f6\u5019\u4f1a\u544a\u8bc9 CPU \u4e00\u4e0b\uff0cinterrupt (\u901a\u8fc7 system bus)</li> <li>IO \u662f device \u548c local buffer \u4e4b\u95f4\u7684\u4f20\u8f93</li> <li>Interrupt</li> <li>Interrupt \u7684\u8bf7\u6c42\u4f1a\u901a\u8fc7 interrupt vector\uff08\u542b\u6709\u6240\u6709 service routine \u5730\u5740\uff09 \u4f20\u7ed9 ISR\uff08interrupt service routine\uff09</li> <li>incoming interrupt are disabled \u5f53\u53e6\u5916\u6709interrupt\u5728\u5904\u7406\u4e2d\uff0c\u9632\u6b62 lost interrupt</li> <li>interrupt \u5206\u4e3a IO \u4e2d\u65ad \u548c trap \u4e2d\u65ad</li> <li>Trap\uff1a\u8f6f\u4ef6\u5f15\u8d77\u7684\u5f15\u53d1\u7cfb\u7edf\u5173\u6ce8\u7684\u4e2d\u65ad\uff08\u8f6f\u4e2d\u65ad\uff09<ul> <li>\u4e3b\u52a8\u53d1\u51fa\uff1auser request \u8981\u53bb\u8bfb\u4e00\u4e9b\u5185\u5bb9</li> <li>\u88ab\u52a8\u53d1\u51fa\uff1aerror</li> </ul> </li> <li>interrupt handling</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u5b58\u50a8\u5bc4\u5b58\u5668 registers \u548c\u7a0b\u5e8f\u8ba1\u6570\u5668 program counter \u6765\u4fdd\u5b58CPU\u7684\u72b6\u6001</li> <li>\u5982\u4f55\u77e5\u9053\u662f\u54ea\u79cd interrupt<ul> <li>\u7528\u4e00\u4e2a\u901a\u7528\u4f8b\u7a0b\u8fdb\u884c\u8f6e\u8be2 polling</li> <li>\u5411\u91cf\u4e2d\u65ad\u7cfb\u7edf vectored interrupt system</li> <li>\u5355\u72ec\u7684\u4ee3\u7801\u6bb5\u786e\u5b9a\u5bf9\u6bcf\u79cd\u7c7b\u578b\u7684\u4e2d\u65ad\u5e94\u91c7\u53d6\u4ec0\u4e48\u64cd\u4f5c</li> </ul> </li> <li>IO structure\uff1a\u4e24\u79cd\u65b9\u5f0f</li> <li>\u53ea\u6709\u5728 IO \u5b8c\u6210\u540e \u8fd4\u56de user program \u540c\u6b65 synchronous</li> <li>user program \u4e0d\u7b49\u5f85 IO \u5904\u7406 \u5f02\u6b65 asynchronous\uff08\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u6709\u591a\u4e2a\u7ebf\u7a0b\uff0c\u975e\u963b\u585e\u5f0f</li> <li></li> <li>Direct Memory Access Structure\uff08DMA\uff09</li> <li>\u7528\u4e8e\u80fd\u591f\u4ee5\u63a5\u8fd1\u5185\u5b58\u901f\u5ea6\u4f20\u8f93\u4fe1\u606f\u7684\u9ad8\u901f I/O \u8bbe\u5907</li> <li>\u6bcf\u4e2a\u5757 block \u4ec5\u751f\u6210\u4e00\u4e2a\u4e2d\u65ad\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u4e2d\u65ad\u6bcf\u5b57\u8282\u4e2d\u65ad</li> <li>\u4e0d\u9700\u8981 CPU \u5e72\u9884\uff0c\u63a7\u5236\u529b\u5ea6\u964d\u4f4e</li> </ul>"},{"location":"os/os/#storage","title":"Storage","text":"<ul> <li>Storage structure</li> <li>Main memory\uff1a\u88ab\u770b\u4f5c\u662flast cache for secondary storage</li> <li>Secondary storage</li> <li>Magnetic disks</li> <li></li> <li>speed\uff0ccost\uff0cvolatility\u6613\u5931\u6027</li> <li>caching</li> <li>faster storage\uff0c\u89e3\u51b3\u901f\u5ea6\u9002\u914d\u7684\u95ee\u9898\uff0c\u7528\u4e2d\u7684\u4fe1\u606f\u6682\u65f6\u4ece\u8f83\u6162\u7684\u5b58\u50a8\u590d\u5236\u5230\u8f83\u5feb\u7684\u5b58\u50a8 </li> <li>cache \u5c0f\u4e8e\u88ab caching \u7684\u5185\u5b58</li> <li>data migration</li> <li></li> </ul>"},{"location":"os/os/#operating-system-structure","title":"Operating System Structure","text":"<ul> <li>Operating System Structure</li> <li>multiprogramming\uff1aefficiency \uff08CPU utilization\uff09<ul> <li>user \u4e0d\u80fd\u8ba9 CPU \u548c IO \u4e00\u76f4 busy</li> <li>multiprogramming \u7ec4\u7ec7\u4ee3\u7801\u548c\u6570\u636e\uff0cCPU \u59cb\u7ec8\u6709\u4e00\u4e2a\u8981\u6267\u884c</li> <li>One job selected and run via job scheduling</li> <li>\u5f53 job \u5728\u7b49\u5f85\u65f6\uff0cOS \u505a\u5176\u4ed6\u5de5\u4f5c</li> </ul> </li> <li>Timesharing (multitasking)\uff1aResponse time should be &lt; 1 second\uff08interactivity\uff09<ul> <li>process \u8fdb\u7a0b\uff1aat least one program executing in memory</li> <li>CPU scheduling \u8c03\u5ea6: several jobs ready to run at the same time</li> <li>swap: \u5982\u679c\u8fdb\u7a0b\u4e0d\u9002\u5408\u5185\u5b58\uff0c\u4ea4\u6362\u4f1a\u5c06\u5b83\u4eec\u79fb\u5165\u548c\u79fb\u51fa\uff0c\u6765\u4fdd\u8bc1\u91cd\u8981\u7684 process \u8fdb\u884c</li> <li>Virtual memory\uff1a\u5141\u8bb8\u4e0d\u5b8c\u5168\u5728\u5185\u5b58\u4e2d\u6267\u884c\u8fdb\u7a0b</li> </ul> </li> <li>Operating-System Operations</li> <li>\u6765\u81ea\u5916\u90e8\u786c\u4ef6\u4e2d\u65ad interrupt</li> <li>\u6765\u81ea\u8f6f\u4ef6\u7684\u4e2d\u65ad trap: user request / error</li> <li>\u5176\u4ed6\u8fdb\u7a0b\u95ee\u9898\u5305\u62ec\u65e0\u9650\u5faa\u73af\u3001\u8fdb\u7a0b\u76f8\u4e92\u4fee\u6539\u6216\u64cd\u4f5c\u7cfb\u7edf\u4fee\u6539</li> <li>Protection for Operating-System Operations</li> <li>dual mode: user mode / kernel mode(like <code>sudo</code>)<ul> <li>Mode bit provided by hardware \u63d0\u4f9b\u533a\u5206\u7cfb\u7edf\u4f55\u65f6\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u6216\u5185\u6838\u4ee3\u7801\u7684\u80fd\u529b</li> </ul> </li> <li>kernel mode: privileged</li> <li>system calls \u5c06\u6a21\u5f0f\u66f4\u6539\u4e3a\u5185\u6838\uff0c\u4ece\u8c03\u7528\u8fd4\u56de\u5c06\u5176\u91cd\u7f6e\u4e3a\u7528\u6237   </li> </ul>"},{"location":"os/os/#resource-management","title":"Resource Management","text":"<ul> <li>Timer &amp; Interrupt: to prevent infinite loop / process hogging resources</li> <li>\u5728\u8c03\u5ea6\u8fdb\u7a0b\u4e4b\u524d\u8bbe\u7f6e\u7279\u5b9a\u65f6\u95f4\u540e\u4e2d\u65ad\u3002\u64cd\u4f5c\u7cfb\u7edf\u9012\u51cf\u8ba1\u6570\u5668\uff0c\u5f53\u8ba1\u6570\u5668\u4e3a\u96f6\u65f6\u4ea7\u751f\u4e2d\u65ad\uff0c\u8ba9 CPU \u91cd\u65b0\u83b7\u5f97\u63a7\u5236\u6743\u6216\u7ec8\u6b62\u8d85\u51fa\u5206\u914d\u65f6\u95f4\u7684\u7a0b\u5e8f</li> <li>Process Management\uff1a\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u4e8e\u8d44\u6e90\u7684\u62bd\u8c61</li> <li>process \u8fdb\u7a0b: a program in execution. program \u662f\u88ab\u52a8 passive \u5b9e\u4f53\uff0cprocess \u662f\u4e3b\u52a8 active \u5b9e\u4f53</li> <li>\u9700\u8981\u7684 resource\uff1aCPU, memory\uff0cI/O\uff0cfiles\uff0cInitialization data</li> <li>\u8fdb\u7a0b\u7ec8\u6b62\u8981\u56de\u6536\u6240\u6709\u53ef\u91cd\u7528\u8d44\u6e90</li> <li>Single-threaded process \u6709\u4e00\u4e2a\u7a0b\u5e8f\u8ba1\u6570\u5668\u6307\u5b9a\u4e0b\u4e00\u6761\u8981\u6267\u884c\u7684\u6307\u4ee4\u7684\u4f4d\u7f6e\uff0c\u8fdb\u7a0b\u6309\u987a\u5e8f\u6267\u884c\u6307\u4ee4\uff0c\u4e00\u6b21\u4e00\u4e2a\uff0c\u4f9d\u6b21\u5b8c\u6210</li> <li>Multi-threaded process \u6bcf\u4e2a\u7ebf\u7a0b\u6709\u4e00\u4e2a\u7a0b\u5e8f\u8ba1\u6570\u5668</li> <li>\u901a\u5e38\u7cfb\u7edf\u6709\u8bb8\u591a\u8fdb\u7a0b\u3001\u4e00\u4e9b\u7528\u6237\u3001\u4e00\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u5728\u4e00\u4e2a\u6216\u591a\u4e2a CPU \u4e0a\u540c\u65f6\u8fd0\u884c<ul> <li>\u901a\u8fc7\u5728\u8fdb\u7a0b/\u7ebf\u7a0b\u4e4b\u95f4\u590d\u7528 CPU \u5b9e\u73b0\u5e76\u53d1 Concurrency by multiplexing the CPUs among the processes / threads</li> </ul> </li> <li></li> <li>Memory Management</li> <li>data\uff1a\u8fdb\u7a0b\u524d\u6216\u5b8c\u6210\u540e\u5fc5\u987b\u5728\u5185\u5b58\u4e2d</li> <li>instructions\uff1a\u5fc5\u987b\u653e\u5728\u5185\u5b58\u4e2d\u6765\u8fd0\u884c</li> <li>Memory Management\u51b3\u5b9a\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\uff0c\u4f18\u5316CPU\u5229\u7528\u7387\u548c\u8ba1\u7b97\u673a\u5bf9\u7528\u6237\u7684\u54cd\u5e94</li> <li>\u8bbe\u8ba1\uff1a<ul> <li>\u8bb0\u5f55\u662f\u8c01\u5728\u7528\u5185\u5b58\u5206\u522b\u7528\u4e86\u591a\u5c11\u5185\u5b58</li> <li>\u5206\u53d1\u548c\u56de\u6536\u5185\u5b58\u7a7a\u95f4</li> <li>\u51b3\u5b9a\u5c06\u54ea\u4e9b\u8fdb\u7a0b\uff08\u6216\u5176\u90e8\u5206\uff09\u548c\u6570\u636e\u79fb\u5165\u548c\u79fb\u51fa\u5185\u5b58</li> </ul> </li> <li>Storage Management</li> <li>OS<ul> <li>file\uff1a\u5c06\u7269\u7406\u5c5e\u6027\u62bd\u8c61\u4e3a\u903b\u8f91\u5b58\u50a8\u5355\u5143</li> <li>control\uff1a\u6bcf\u79cd\u4ecb\u8d28\u5747\u7531\u8bbe\u5907\uff08\u5373\u78c1\u76d8\u9a71\u52a8\u5668\u3001\u78c1\u5e26\u9a71\u52a8\u5668\uff09\u63a7\u5236</li> </ul> </li> <li>File-System management</li> <li>directories</li> <li>access control\uff1a\u8bbf\u95ee\u6743\u9650\u63a7\u5236\uff0cprivelege</li> <li>Mass-Storage Management\uff1a\u901a\u5e38\u78c1\u76d8\u7528\u4e8e\u5b58\u50a8\u4e3b\u5b58\u65e0\u6cd5\u5bb9\u7eb3\u7684\u6570\u636e\u6216\u5fc5\u987b\u957f\u671f\u4fdd\u5b58\u7684\u6570\u636e\u3002</li> <li>\u8ba1\u7b97\u673a\u8fd0\u884c\u7684\u6574\u4f53\u901f\u5ea6\u53d6\u51b3\u4e8e\u78c1\u76d8\u5b50\u7cfb\u7edf\u53ca\u5176\u7b97\u6cd5Entire speed of computer operation hinges on disk subsystem and its algorithms</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u7684\u4f5c\u7528\uff1astorage\u5206\u914d\uff0cdisk\u89c4\u5212\uff0cfree-space\u7ba1\u7406</li> <li>I/O Subsystem</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u7684\u76ee\u7684\u4e4b\u4e00\u662f\u5411\u7528\u6237\u9690\u85cf\u786c\u4ef6\u8bbe\u5907\u7684\u7279\u6027\u2014\u2014\u6613\u4e8e\u4f7f\u7528\u548c\u7f16\u7a0b hide peculiarities of hardware devices from the user \u2013 ease of usage &amp; programming </li> <li>IO \u7684\u5185\u5b58\u7ba1\u7406\u5305\u62ec\u4e86buffering\uff08\u5728\u4f20\u8f93\u6570\u636e\u65f6\u4e34\u65f6\u5b58\u50a8\u6570\u636e\uff09caching\uff08\u5c06\u90e8\u5206\u6570\u636e\u4fdd\u5b58\u5728\u66f4\u5feb\u7684\u5b58\u50a8\u4e2d\u4ee5\u63d0\u9ad8\u6027\u80fd\uff09spooling\uff08\u4e00\u9879\u5de5\u4f5c\u7684\u8f93\u51fa\u4e0e\u5176\u4ed6\u5de5\u4f5c\u7684\u8f93\u5165\u91cd\u53e0\uff09</li> </ul>"},{"location":"os/os/#ch2-operating-system-structures","title":"CH2 Operating-System Structures","text":""},{"location":"os/os/#operating-system-services","title":"Operating System Services","text":"<ul> <li>a set of services</li> <li>user interface (UI): Command-Line(CLI), Graphics User Interface(GUI)</li> <li>program execution: \u7cfb\u7edf\u5fc5\u987b\u80fd\u591f\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u5e76\u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u7ed3\u675f\u6267\u884c\uff0c\u65e0\u8bba\u662f\u6b63\u5e38\u8fd8\u662f\u5f02\u5e38\uff08\u6307\u793a\u9519\u8bef\uff09</li> <li>IO operations</li> <li>File-system manipulation\u64cd\u7eb5</li> <li>Communication\uff1aprocesses\u4ea4\u6362\u4fe1\u606f\uff0c\u901a\u8fc7computer\uff08shared memory \u6216message passing\u8fd9\u79cd\u9700\u8981\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\uff09\u6216\u8005\u662f\u5728 \u540c\u4e00\u7f51\u7edc\u73af\u5883\u4e0b \u7684\u7535\u8111</li> <li>Error detection</li> <li>Resource allocation<ul> <li>\u8bb8\u591a\u7c7b\u578b\u7684\u8d44\u6e90 - \u4e00\u4e9b\uff08\u4f8b\u5982 CPU \u5468\u671f\u3001\u5185\u5b58\u548c\u6587\u4ef6\u5b58\u50a8\uff09\u53ef\u80fd\u5177\u6709\u7279\u6b8a\u7684\u5206\u914d\u4ee3\u7801\uff0c\u5176\u4ed6\uff08\u4f8b\u5982 I/O \u8bbe\u5907\uff09\u53ef\u80fd\u5177\u6709\u901a\u7528\u8bf7\u6c42\u548c\u91ca\u653e\u4ee3\u7801</li> </ul> </li> <li>accounting\uff1a\u8bb0\u8d26\uff0c\u8ddf\u8e2a\u54ea\u4e9b\u7528\u6237\u4f7f\u7528\u4e86\u591a\u5c11\u8ba1\u7b97\u673a\u8d44\u6e90\u4ee5\u53ca\u4f55\u79cd\u7c7b\u578b\u7684\u8ba1\u7b97\u673a\u8d44\u6e90</li> <li>Protection and security<ul> <li>protection: \u786e\u4fdd\u6240\u6709\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684access\u90fd\u662f\u53d7\u63a7\u5236\u7684</li> <li>security\uff1a\u8981\u6c42user authentication\uff0c\u6269\u5c55\u5230\u4fdd\u62a4\u5916\u90e8 I/O \u8bbe\u5907\u514d\u53d7\u65e0\u6548\u8bbf\u95ee\u5c1d\u8bd5</li> </ul> </li> </ul>"},{"location":"os/os/#user-operating-system-interface","title":"User Operating System Interface","text":"<ul> <li>CLI allows direct command entry</li> <li>Sometimes implemented in kernel, sometimes by systems program</li> </ul>"},{"location":"os/os/#_1","title":"\u8865\u5199\uff01\uff01\uff01\uff01","text":""},{"location":"os/os/#system-calls","title":"System Calls","text":"<ul> <li>Application Program Interface (API)\uff1a\u66f4\u4e3a\u9ad8\u5c42\u7684\u7a0b\u5e8f\u63a5\u53e3\u7684\u5c01\u88c5</li> <li>system calls \u4f4e\u9636\uff0c\u4e0d\u65b9\u4fbf\uff0c\u7528high-level language\u6bd4\u8f83\u591a   </li> <li>System Call Implementation<ul> <li>\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u90fd\u6709\u4e00\u4e2a\u5173\u8054\u7684\u53f7\u7801\u3002\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u7ef4\u62a4\u4e00\u4e2a\u6839\u636e\u8fd9\u4e9b\u53f7\u7801\u7d22\u5f15\u7684\u8868</li> <li></li> <li></li> </ul> </li> <li>System Call Parameter Passing</li> <li>simpliest: registers</li> <li>\u5f53\u5bc4\u5b58\u5668\u4e2a\u6570\u4e0d\u591f<ul> <li>block\uff0c\u6216\u8005table\uff08linux\u7cfb\u7edf\u6216solaris\u7cfb\u7edf\u4f7f\u7528\u8fd9\u4e2a\u65b9\u5f0f\uff09</li> <li>parameters \u88ab push \u5230\u7a0b\u5e8f\u7684 stack \u4e2d\uff0c\u88ab\u64cd\u4f5c\u7cfb\u7edf pop \u51fa\u53bb\uff08\u538b\u6808\uff0cOS \u51fa\u6808\uff0c\u6808\u4e0d\u4e00\u5b9a\u5171\u4eab\uff09</li> </ul> </li> <li>Types of System Calls   </li> </ul>"},{"location":"os/os/#system-programs","title":"System Programs\u7cfb\u7edf\u7a0b\u5e8f","text":"<ul> <li>File manipulation\uff0cStatus information\uff0cFile modification\uff0cProgramming language support\uff0cProgram loading and execution\uff0cCommunications\uff0cApplication programs</li> </ul>"},{"location":"os/os/#operating-system-design-and-implementation","title":"Operating System Design and Implementation","text":"<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1not solvable\u4f46\u662f\u610f\u5473\u7740creative\uff0c\u4f46\u662f\u4e00\u4e9b\u5177\u4f53\u7684 \u5b9e\u73b0\u65b9\u5f0f\u88ab\u8bc1\u660e\u662f\u6b63\u786e\u7684</li> <li>Important principle to separate (2.6.2)</li> <li>Policy:   What will be done?\u7b56\u7565\uff08\u786e\u5b9a\u5177\u4f53\u505a\u4ec0\u4e48\u4e8b\uff09</li> <li>Mechanism:  How to do it? \u673a\u5236\uff08\u5b9a\u4e49\u505a\u4e8b\u65b9\u5f0f\uff09<ul> <li>Example: timer for CPU protection is a mechanism</li> </ul> </li> <li>Example: Separation of Mechanism and Policy</li> <li>hotel\uff1acard/keys<ul> <li>policy\uff1a\u4ec0\u4e48\u4eba\u5728\u4ec0\u4e48\u65f6\u95f4\u53ef\u4ee5\u4f7f\u7528card/keys\u8fdb\u5165</li> <li>mechanisms\uff1amagnetic card readers, remote controlled locks, connections to a security server</li> </ul> </li> <li>The matrix data determines a policy, and the switching network is a mechanism   </li> </ul>"},{"location":"os/os/#ch3processes","title":"CH3\uff1aProcesses","text":""},{"location":"os/os/#concept","title":"concept","text":"<ul> <li>program</li> <li>batch system \u6279\u5904\u7406\u7cfb\u7edf\uff1asequence of jobs</li> <li>time-sharing system \uff1auser program or tasks<ul> <li>multitasking</li> <li>less turnaround, less CPU idle, user interaction </li> </ul> </li> <li>process: program in execution</li> <li>include:<ul> <li>text section(code)</li> <li>data section(global vars)</li> <li>stack(function parameters, local vars, return addresses)</li> <li>heap (dynamically allocated memory)</li> <li>program counter </li> </ul> </li> </ul>"},{"location":"os/os/#process-state","title":"process state","text":""},{"location":"os/os/#process-schedule","title":"Process Schedule","text":"<ul> <li>Process Scheduling Queues</li> <li>\u4e3b\u6d41\uff1a\u94fe\u8868\u5b9e\u73b0</li> <li>Job queue\u4efb\u52a1\u5806\u53e0 \u2013 \u7cfb\u7edf\u4e2d\u6240\u6709\u8fdb\u7a0b\u7684\u96c6\u5408</li> <li>Ready queue\uff08\u6700\u5173\u5fc3 \u2013 \u7b49\u5f85\u4f7f\u7528 CPU \u7684\u8fdb\u7a0b\u5e8f\u5217</li> <li>Device queues \u2013 \u7b49\u5f85\u4f7f\u7528IO\u7684</li> <li>scheduler</li> <li>Long-term scheduler  (or job scheduler) <ul> <li>selects which processes should be brought into memory (the ready queue)</li> </ul> </li> <li>Short-term scheduler  (or CPU scheduler) <ul> <li>selects which process should be executed next and allocates CPU</li> </ul> </li> </ul>"},{"location":"os/os/#ch3","title":"CH3 \u6ca1\u5199\u5b8c","text":""},{"location":"os/os/#ch4threads","title":"CH4\uff1aThreads","text":""},{"location":"os/os/#ch5cpu-scheduling","title":"CH5\uff1aCPU Scheduling","text":""},{"location":"os/os/#cpu-scheduling","title":"CPU Scheduling","text":"<p>goal\uff1a\u5728 multiprogramming \u4e0b\u4f7f CPU \u5229\u7528\u7387 utilization \u8fbe\u5230\u6700\u9ad8</p> <p>\uff08\u539f\u56e0\uff1a\u8fdb\u7a0b\u5728 IO burst \u7684\u65f6\u5019 waiting \u4f1a\u964d\u4f4e CPU \u7684\u4f7f\u7528\u7387\uff0c\u5728 IO burst\u7684\u65f6\u5019\u8fdb\u884c CPU \u8c03\u5ea6\uff09</p> <p></p> <p>histogram of CPU-burst times\uff1a CPU \u8c03\u5ea6\u975e\u5e38\u9891\u7e41\u4e14\u5927\u591a\u975e\u5e38\u5feb-&gt;frequently and efficient</p> <ul> <li>CPU Scheduler\uff08\u533a\u5206longterm\u548cshortterm\uff09</li> <li>\u4ece\u5185\u5b58\u4e2d\u9009\u62e9\u9700\u8981\u6267\u884c\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u5c06 CPO \u5206\u914d\u7ed9\u5176\u4e2d\u4e00\u4e2a</li> <li>CPU \u8c03\u5ea6takeplace\uff1a<ul> <li>\u8fdb\u7a0b\u4ecerunning\u5230waiting\uff08IO \u6216\u8005 wait()\uff09\uff0c\u548c\u53cd\u4e4b\uff08IO \u5b8c\u6210\uff09</li> <li>\u8fdb\u7a0b\u4ecerunning\u5230ready\uff08interrupt\uff09</li> <li>\u8fdb\u7a0b\u7ed3\u675f</li> </ul> </li> <li>\u4ee5\u4e0a\u539f\u56e0\u53d1\u751f\u7684 CPU \u8c03\u5ea6\u662f nonpreemptive \u7684\uff0c\u975e\u62a2\u5360\u5f0f</li> <li>\u5176\u4ed6\u539f\u56e0\u5bfc\u81f4\u7684\u8c03\u5ea6\u662f preemptive \u7684\uff0c\u62a2\u5360\u5f0f</li> <li>Dispatcher</li> <li>\u4f7f CPU \u53ef\u4ee5\u63a7\u5236\u8fdb\u7a0b\uff08\u5728 short-term \u8c03\u5ea6\u4e0b\uff09<ul> <li>\u8f6c\u6362\u5185\u5bb9\u3001\u8f6c\u5165usermode\u3001\u8f6c\u5165\u6b63\u786e\u7684\u65b0 user program \u7684\u5730\u5740</li> </ul> </li> <li>dispatch latency<ul> <li>stop \u65e7\u8fdb\u7a0b\u548c start \u65b0\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5ef6\u8fdf\u65f6\u95f4</li> <li></li> </ul> </li> <li>\u8c03\u5ea6\u6cd5\u5219 Scheduling Criteria</li> <li>CPU utilization \u5229\u7528\u7387\uff1a\u8ba9 CPU \u5c3d\u91cf busy\uff08\u4f7f\u7528\u5230 CPU \u7684\u65f6\u95f4 / \u5168\u90e8\u8fdb\u7a0b\u5b8c\u6210\u7684\u65f6\u95f4\uff09</li> <li>Thoughtput \u541e\u5410\u7387\uff1a\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u5b8c\u6210\u7684\u8fdb\u7a0b\u6570\u91cf\uff08\u8fdb\u7a0b\u6570 / \u5168\u90e8\u8fdb\u7a0b\u5b8c\u6210\u7684\u65f6\u95f4\uff09</li> <li>Turnroundtime \u5468\u8f6c\u65f6\u95f4\uff1a\u8fd0\u884c\u4e00\u4e2aparticular process\u7684\u65f6\u95f4\uff0c\u8981\u5305\u62ec\u8c03\u5ea6\u7684\u65f6\u95f4\uff01\uff01\uff08\u7ec8\u6b62\u51cf\u53bb\u8d77\u59cb\u7684\u65f6\u95f4\uff09</li> <li>Waitingtime \u7b49\u5f85\u65f6\u95f4\uff1a\u8fdb\u7a0b\u5728 ready queue\u91cc\u9762\u7b49\u5f85 CPU \u7684\u65f6\u95f4\uff08\u6ce8\u610f\u4e0d\u662f\u7b49\u5f85 IO \u7684\u65f6\u95f4\uff09</li> <li>Responsetime \u54cd\u5e94\u65f6\u95f4\uff1a\u8fdb\u7a0b\u63d0\u4ea4\u540e\u7b2c\u4e00\u6b21\u8ddf\u7528\u6237\u53cd\u9988\u7ed3\u679c\u7b2c\u4e00\u6b21\u54cd\u5e94\u7684\u65f6\u95f4\uff0c\u4e0d\u6307\u5f97\u5230\u6700\u7ec8\u7ed3\u679coutput</li> </ul>"},{"location":"os/os/#fcfs-sjf-srtf-schedule","title":"FCFS SJF SRTF schedule\u7b97\u6cd5","text":"<ul> <li>First-Come, First-Served (FCFS) Scheduling \u6700\u5e38\u89c1</li> <li>Arrival order makes difference!</li> <li>\u975e\u62a2\u5360\u5f0f</li> <li>Convoy effect\uff08\u62a4\u822a\u6548\u5e94\uff09: \u5f53\u77ed\u8fdb\u7a0b\u6392\u5728\u957f\u8fdb\u7a0b\u540e\u8fd0\u884c\u65f6\uff0c\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u4f1a\u8f83\u957f\uff0cIO \u548c CPU \u5c31\u4f1a\u5f88\u7a7a\u95f2</li> <li>\u6709\u5229\u4e8e\u957f\u4f5c\u4e1a\uff0c\u4e0d\u5229\u4e8e\u77ed\u4f5c\u4e1a\uff1b\u6709\u5229\u4e8eCPU\u7e41\u5fd9\u578b\uff0c\u4e0d\u5229\u4e8eI/O\u7e41\u5fd9\u578b</li> <li>Shortest-Job-First (SJF) Scheduling</li> <li>\u5c06\u4e00\u4e2a\u8fdb\u7a0b\u4e0e\u5b83\u7684\u4e0b\u4e00\u4e2a CPU burst\u7efc\u5408\u8003\u8651\u6765\u8c03\u5ea6\u4f7f\u5f97\u7528\u6700\u77ed\u7684\u65f6\u95f4</li> <li>\u4e24\u79cd\u6846\u67b6<ul> <li>\u975e\u62a2\u5360\u5f0f\uff1a\u4e00\u65e6 CPU \u7ed9\u4e86\u4e00\u4e2a\u8fdb\u7a0b\uff0cCPU \u5c31\u4e0d\u80fd\u88ab\u62a2\u5360\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u76f4\u5230\u8fd9\u4e2a\u8fdb\u7a0b\u7684 CPU burst \u7ed3\u675f</li> <li>\u62a2\u5360\u5f0f Shortest-Remaining-Time-First (SRTF)\uff1a\u5f53\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u6765\uff0c\u8fd9\u4e2a\u65b0\u8fdb\u7a0b\u7684 CPUburst \u65f6\u95f4\u6bd4\u5f53\u524d\u5269\u4f59\u7684 CPU burst</li> </ul> </li> <li>Determining Length of Next CPU Burst</li> <li>\u6211\u4eec\u65e0\u6cd5\u77e5\u9053\u4e0b\u4e00\u6b21 burst \u7684\u957f\u5ea6\uff0c\u53ea\u80fd\u4f7f\u7528 estimate \u7684\u65b9\u5f0f</li> <li>exponential averaging (\u6307\u6570\u5e73\u5747\u6cd5)</li> <li></li> <li></li> <li></li> <li>SJF better\uff0c\u63d0\u4f9b\u4e86\u6700\u77ed\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u957f</li> <li>\u8fdb\u7a0b startvation</li> <li>Priority Scheduling</li> <li>\u5bf9\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a integer \u4f5c\u4e3a\u5b83\u7684 priority number \u4e0e\u5b83\u8054\u7cfb\uff0c\u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8</li> <li>CPU \u4f1a\u88ab\u5206\u914d\u7ed9\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\uff08\u62a2\u5360\u5f0f/\u975e\u62a2\u5360\u5f0f\uff09</li> <li>SJF\u662f\u4f18\u5148\u7ea7\u8c03\u5ea6\uff0c\u5176\u4e2d\u4f18\u5148\u7ea7\u662f\u9884\u6d4b\u7684\u4e0b\u4e00\u4e2a CPU burst \u65f6\u95f4</li> <li>Static Priority\uff1astatic=notchange\uff0c\u5728\u8fdb\u7a0b\u521b\u5efa\u7684\u65f6\u5019\u51b3\u5b9a</li> <li> <p>\u4f1a\u51fa\u73b0\u7684\u95ee\u9898\uff1aStarvation - low priority processes may never execute</p> <ul> <li>solution\uff1aDynamic Priority </li> <li>\u5177\u4f53\u65b9\u5f0f\uff1aAging - \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u8fdb\u7a0b\u4f18\u5148\u7ea7\u63d0\u9ad8</li> </ul> </li> <li> <p>Highest Response Ratio Next \uff08HRRN\uff09</p> </li> <li>\u9ad8\u54cd\u5e94\u6bd4\u4f18\u5148</li> <li>\u7b97\u6cd5\u5de5\u4f5c\u539f\u7406<ul> <li>\u521d\u59cb\u5316\uff1a\u8bb0\u5f55\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5230\u8fbe\u65f6\u95f4\u548c\u6240\u9700\u7684\u670d\u52a1\u65f6\u95f4</li> <li>\u8ba1\u7b97\u54cd\u5e94\u6bd4\uff1a\u5bf9\u6bcf\u4e00\u4e2a\u5c31\u7eea\u961f\u5217\u4e2d\u7684\u8fdb\u7a0b\uff0c\u8ba1\u7b97\u5176\u54cd\u5e94\u6bd4</li> <li>\u9009\u62e9\u9ad8\u54cd\u5e94\u6bd4\u7684\u8fdb\u7a0b\uff1a\u9009\u62e9\u5177\u6709\u6700\u9ad8\u54cd\u5e94\u6bd4\u7684\u8fdb\u7a0b\u6267\u884c\uff08\u5982\u679c\u6709\u76f8\u540c\u7684\u6700\u9ad8\u54cd\u5e94\u6bd4\uff0c\u5c31\u6309\u7167\u5176\u4ed6\u7684\u89c4\u5219\u6bd4\u5982FCFS\u7b49\u6765\u9009\u62e9</li> <li>\u66f4\u65b0\u7b49\u5f85\u65f6\u95f4\u548c\u54cd\u5e94\u6bd4\uff1a\u4e00\u6b21\u8c03\u5ea6\u540e\u5c31\u66f4\u65b0\u6240\u6709\u5c31\u7eea\u961f\u5217\u4e2d\u8fdb\u7a0b\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u5e76\u91cd\u65b0\u8ba1\u7b97\u6240\u6709\u8fdb\u7a0b\u7684\u54cd\u5e94\u6bd4</li> </ul> </li> <li>HRRN \u662f FCFS \u548c SJF \u7684\u6298\u4e2d</li> <li>\u6ce8\u610f\u8ba1\u7b97\u54cd\u5e94\u65f6\u95f4\u672c\u8eab\u662f\u9700\u8981\u65f6\u95f4\u7684</li> <li>Round Robin (RR) \uff08emmmm\u8c37\u6b4c\u7ffb\u8bd1\u6210\u300a\u5faa\u73af\u8d5b\u300b\uff09</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u83b7\u5f97\u4e00\u4e2a\u5c0f\u7684CPU\u65f6\u95f4\u5355\u4f4d\uff08time quantum \u65f6\u95f4\u91cf\u5b50\uff09\uff0c\u901a\u5e38\u662f10-100\u6beb\u79d2\u3002\u7ecf\u8fc7\u8be5\u65f6\u95f4\u540e\uff0c\u8be5\u8fdb\u7a0b\u5c06\u88ab\u62a2\u5360\u5e76\u6dfb\u52a0\u5230\u5c31\u7eea\u961f\u5217\u7684\u672b\u5c3e\u3002</li> <li>\u6bd4 SJF \u6709\u66f4\u9ad8\u7684\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\uff0c\u4f46 CPU \u5229\u7528\u7387\u63d0\u9ad8\u548cbetter\u4ea4\u4e92\u6027\u4e0d\u80fd\u540c\u65f6\u5b9e\u73b0</li> <li>\u5bf9\u7b49\u5f85\u5e8f\u5217\u4e2d\u7684 n \u4e2a\u8fdb\u7a0b\uff0c\u65f6\u95f4\u91cf\u5b50\u4e3a q\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u4f1a\u83b7\u5f971/n\u7684 CPU \u65f6\u95f4\u3002<ul> <li>\u4e0d\u4f1a\u6709\u8fdb\u7a0b\u7684\u7b49\u5f85\u65f6\u95f4\u4f1a\u8d85\u8fc7 (n-1)q\u3002</li> <li>\u5982\u679c q \u7684\u503c\u5927\uff0c\u9009\u62e9 FCFS \u7b97\u6cd5 \u2014\u2014Time-sharing system</li> <li>\u5982\u679c q \u7684\u503c\u5c0f\uff0c\u8981\u8981\u6c42 q \u7684\u503c\u4e0d\u80fd\u592a\u5c0f\uff0c\u5426\u5219context switch\u7684\u6b21\u6570\u4f1a\u8fc7\u9ad8\uff0coverhead \u5f00\u9500\u592a\u5927 \u2014\u2014 Multitasking system</li> <li></li> <li>\u5468\u8f6c\u65f6\u95f4\u7531\u65f6\u95f4\u91cf\u5b50\u7684\u5927\u5c0f\u51b3\u5b9a</li> </ul> </li> <li>Multilevel queue</li> <li>ready queue \u88ab\u5206\u4e3a\u4e24\u4e2a queue\uff1aforeground\uff08\u4ea4\u4e92\u6027\u7684\uff09\u548c background\uff08batch\uff09</li> <li>\u5bf9\u6bcf\u4e2a\u5206\u5f00\u7684 queue \u4f7f\u7528\u4e0d\u540c\u7684\u8c03\u5ea6\u7b97\u6cd5\uff1aforeground \u2014\u2014 RR\uff0cbackground \u2014\u2014 FCFS</li> <li></li> <li>Multilevel Feedback Queue<ul> <li>Aging \u53ef\u4ee5\u4f7f\u7528\u6b64\u7b97\u6cd5</li> <li></li> <li>\u8bbe\u7f6e\u591a\u4e2a\u5c31\u7eea\u961f\u5217\uff0c\u4f18\u5148\u7ea7\u4ece\u7b2c\u4e00\u7ea7\u4f9d\u6b21\u964d\u4f4e</li> <li>\u4f18\u5148\u7ea7\u9ad8\u7684\u961f\u5217\uff0c\u8fdb\u7a0b\u65f6\u95f4\u7247\u8d8a\u77ed</li> <li>\u6bcf\u4e2a\u961f\u5217\u90fd\u91c7\u7528FCFS\uff0c\u82e5\u5728\u8be5\u65f6\u95f4\u7247\u5b8c\u6210\uff0c\u5219\u6492\u79bb\u7cfb\u7edf\uff0c\u672a\u5b8c\u6210\uff0c\u8f6c\u5165\u4e0b\u4e00\u7ea7\u7ea7\u961f\u5217</li> <li>\u6309\u961f\u5217\u4f18\u5148\u7ea7\u8c03\u5ea6\uff0c\u4ec5\u5f53\u4e0a\u4e00\u7ea7\u4e3a\u7a7a\u65f6\uff0c\u624d\u8fd0\u884c\u4e0b\u4e00\u7ea7</li> </ul> </li> <li>examples<ul> <li></li> <li>3 queues: RR with 8 \u5355\u4f4d\uff0c RR with 16 \u5355\u4f4d\uff0cFCFS</li> <li>scheduling  </li> <li>\u4e00\u4e2a\u65b0\u4efb\u52a1\u8fdb\u5165 Q0\u3002\u5f53\u4ed6\u83b7\u5f97 CPU \u65f6\uff0c\u4efb\u52a1\u83b7\u5f97\u4e86 8 \u5355\u4f4d\u7684\u6267\u884c\u65f6\u95f4\uff0c\u5f53\u4efb\u52a1\u4e0d\u80fd\u57288\u5355\u4f4d\u91cc\u5b8c\u6210\uff0c\u5219\u8fdb\u5165 Q1</li> <li>\u4efb\u52a1\u5728 Q1 \u4e2d\u83b7\u5f97\u4e8616 \u5355\u4f4d\u7684 CPU \u65f6\u95f4\uff0c\u5f53\u4efb\u52a1\u4e0d\u80fd\u5728 Q1 \u4e2d\u5b8c\u6210\uff0c\u8fdb\u5165 Q2</li> </ul> </li> <li>Asymmetric multiprocessing\uff1aonly one processor accesses the system data structures, alleviating the need for data sharing; others execute only user code.</li> <li>Symmetric multiprocessing(SMP)\uff1aeach processor is self-scheduling. Multiple processors might access and 6update a common data structure.</li> </ul>"},{"location":"os/os/#real-time-scheduling","title":"Real-time Scheduling","text":"<ul> <li>hard real-time scheduling: \u8981\u5728\u4e00\u4e2a guaranteed \u65f6\u95f4\u5185\u5b8c\u5168\u4e00\u4e2a critical task\u5173\u952e\u4efb\u52a1</li> <li>soft reall-time scheduling: \u8981\u6c42\u5173\u952e\u6d41\u7a0b\u4f18\u5148\u4e8e\u4e0d\u592a\u5e78\u8fd0\u7684\u6d41\u7a0b</li> <li>Earliest Deadline First (\u6700\u65e9\u622a\u6b62\u65f6\u95f4\u4f18\u5148)</li> <li>Least Laxity First (\u6700\u4f4e\u677e\u5f1b\u5ea6\u4f18\u5148)<ul> <li>A \u7684\u677e\u5f1b\u5ea6 = A \u5fc5\u987b\u5b8c\u6210\u7684\u65f6\u95f4 - A \u8fd0\u884c\u9700\u8981\u7684\u65f6\u95f4 - \u5f53\u524d\u65f6\u95f4</li> <li>\u6709\u4e00\u4e2a\u4efb\u52a1\u9700\u8981\u5728 400ms \u65f6\u5fc5\u987b\u5b8c\u6210\uff0c\u5b83\u9700\u8981\u8fd0\u884c 150ms\uff0c\u5f53\u524d\u65f6\u523b\u4e3a100ms, \u5176\u677e\u5f1b\u7a0b\u5ea6\u4e3a 400 \u2013 150 \u2013 100 = 150ms</li> </ul> </li> <li>Rate Monotonic Scheduling\uff08\u901f\u7387\u5355\u8c03\u8c03\u5ea6\uff09<ul> <li>\u57fa\u4e8e\u4efb\u52a1\u7684\u5468\u671f\u6765\u5206\u914d\u4f18\u5148\u7ea7\uff0c\u5468\u671f\u8d8a\u77ed\u7684\u4efb\u52a1\u4f18\u5148\u7ea7\u8d8a\u9ad8</li> </ul> </li> </ul>"},{"location":"os/os/#thread-scheduling","title":"Thread Scheduling","text":"<p>\u4e5f\u53eb Contention Scope</p>"},{"location":"os/os/#operating-systems-examples","title":"Operating Systems Examples","text":""},{"location":"os/os/#java-thread-scheduling","title":"Java Thread Scheduling","text":""},{"location":"os/os/#algorithm-evaluation","title":"Algorithm Evaluation","text":""},{"location":"os/os/#ch6-process-synchronization","title":"CH6: Process Synchronization","text":"<p>\u8fdb\u7a0b\u540c\u6b65\uff1a\u786e\u4fdd\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\u6216\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\u6b63\u786e\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90 Concurrent access to shared data may result in data inconsistency \uff0c\u5e76\u53d1\u8bbf\u95ee\u5171\u4eab\u6570\u636e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4</p>"},{"location":"os/os/#61-critical-section-problem","title":"6.1 critical-section problem \u4e34\u754c\u533a\u95ee\u9898","text":"<ul> <li>race condition \u7ade\u6001\u6761\u4ef6\uff1a\u540c\u4e00\u4e2a\u5185\u5b58\u4f4d\u7f6e\u88ab\u5e76\u53d1\u5730\u8bbf\u95ee\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u6b21\u8bbf\u95ee\u8fdb\u884c\u4e86\u5199\u64cd\u4f5c\u3002</li> <li>\u975e\u62a2\u5360\u5f0f\u5185\u6838\u4e5f\u4f1a\u53d7\u5230\u7ade\u6001\u6761\u4ef6\u7684\u5f71\u54cd\uff1acritical-section problem \u4e34\u754c\u533a\u95ee\u9898</li> <li>\u4e34\u754c\u8d44\u6e90\uff1a\u5728\u591a\u8fdb\u7a0b\uff08\u6216\u7ebf\u7a0b\uff09\u4e2d\u88ab\u5171\u4eab\u7684\u8d44\u6e90<ul> <li>\u8981\u4f7f\u7528\u4e00\u5b9a\u7684\u673a\u5236\u8fdb\u884c\u4fdd\u62a4\uff0c\u6765\u786e\u4fdd\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\uff08\u6216\u7ebf\u7a0b\uff09\u5bf9\u4ed6\u8bbf\u95ee</li> <li>CPU \u4e0d\u662f\u4e34\u754c\u8d44\u6e90</li> </ul> </li> <li>\u4e34\u754c\u533a\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u8bbf\u95ee\u4e34\u754c\u8d44\u6e90\u7684\u4ee3\u7801</li> <li>Solution \u7684\u76ee\u6807</li> <li> <p>\u4e92\u65a5\uff08Mutual Exclusion\uff09\uff1a\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u3002</p> </li> <li> <p>\u7a7a\u95f2\u8ba9\u8fdb\uff08Progress\uff09\uff1a\u5982\u679c\u6ca1\u6709\u8fdb\u7a0b\u5728\u4e34\u754c\u533a\u5185\u4e14\u6709\u5176\u4ed6\u8fdb\u7a0b\u60f3\u8981\u8fdb\u5165\uff0c\u5219\u5e94\u8be5\u5141\u8bb8\u8fd9\u4e9b\u8fdb\u7a0b\u6700\u7ec8\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u800c\u4e0d\u80fd\u65e0\u9650\u7b49\u5f85\u3002</p> </li> <li> <p>\u6709\u9650\u7b49\u5f85\uff08Bounded Waiting\uff09\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u6709\u9650\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u4e0d\u4f1a\u53d1\u751f\u9965\u997f\uff08\u5373\u4e00\u4e2a\u8fdb\u7a0b\u6c38\u8fdc\u4e0d\u80fd\u8fdb\u5165\u4e34\u754c\u533a\u7684\u60c5\u51b5\uff09\u3002</p> </li> </ul>"},{"location":"os/os/#62","title":"6.2 \u8f6f\u4ef6\u540c\u6b65\u65b9\u5f0f","text":""},{"location":"os/os/#1","title":"1 \u5355\u6807\u5fd7\u6cd5","text":"<ul> <li>\u8bbe\u7f6e\u516c\u5171\u6574\u578b\u53d8\u91cf turn\uff0c\u5141\u8bb8\u8fdb\u5165\u8fdb\u9636\u53bb\u7684\u8fdb\u7a0b\u7f16\u53f7 turn = i\uff0c\u8868\u793a\u5141\u8bb8\u8fdb\u7a0b Pi \u8fdb\u5165\u4e34\u754c\u533a\uff1b\u8fdb\u7a0b\u9000\u51fa\u4e34\u754c\u533a\u7684\u65f6\u5019\u4ea4\u7ed9\u65b0\u8fdb\u7a0b turn = j</li> </ul> <p>(\u4e0b\u56fe\uff0c\u5982\u679c turn \u4e0d\u7b49\u4e8e i\uff0c\u8fdb\u7a0b Pi \u4f1a\u7b49\u5f85\uff1b\u9000\u51fa\u4e34\u754c\u533a\u65f6\uff0c\u5c06 turn \u8bbe\u4e3a j\uff0c\u5141\u8bb8 Pj \u8fdb\u5165)</p> <p></p>"},{"location":"os/os/#2","title":"2 \u53cc\u6807\u5fd7\u540e\u68c0\u67e5\u6cd5","text":"<ul> <li>\u8bbe\u7f6e\u5e03\u5c14\u578b\u6570\u7ec4 flag[2]\uff0c\u7528\u6765\u6807\u8bb0\u5404\u8fdb\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u7684\u610f\u613f flag[i] = true \u8868\u793a\u8fdb\u7a0b Pi \u60f3\u8fdb\u5165</li> <li>\u5148\u8868\u8fbe\u81ea\u5df1\u8fdb\u5165\u4e34\u754c\u533a\u610f\u613f</li> <li>\u518d\u8f6e\u8be2\u5bf9\u65b9\u662f\u5426\u60f3\u8fdb\u5165\uff0c\u786e\u5b9a\u5bf9\u65b9\u4e0d\u60f3\u8fdb\u5165\u540e\u518d\u8fdb\u5165</li> <li>\u8bbf\u95ee\u7ed3\u675f\u9000\u51fa\u540e\u8bbe\u7f6e flag[i] = false\uff0c\u8868\u793a\u4e0d\u60f3\u8fdb\u5165\uff0c\u5141\u8bb8\u5bf9\u65b9\u8fdb\u5165</li> </ul> <p>\uff08\u4e0b\u56fe\uff0cPi \u5148\u8868\u8fbe\u60f3\u8fdb\u5165\uff0c\u8f6e\u8be2\u95ee Pj \u60f3\u4e0d\u60f3\u8fdb\u5165\uff0c\u7b49\u5f85\u81f3 Pj \u5b8c\u6210\u6216\u8005 Pj \u4e0d\u60f3\u8fdb\u5165\uff0cPi \u8fdb\u5165\u4e34\u754c\u533a\uff09</p> <p></p> <p>\u53ef\u80fd\u5bfc\u81f4\u53cc\u65b9\u90fd\u4e0d\u80fd\u8fdb\u5165\uff0c\u8fdd\u53cd\u4e86\u7a7a\u95f2\u8ba9\u8fdb\u548c\u6709\u9650\u7b49\u5f85</p>"},{"location":"os/os/#3","title":"3 \u53cc\u6807\u5fd7\u5148\u68c0\u67e5\u6cd5","text":"<ul> <li>\u8bbe\u7f6e\u5e03\u5c14\u578b\u6570\u7ec4 flag[2]\uff0c\u7528\u6765\u6807\u8bb0\u5404\u8fdb\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u7684\u610f\u613f flag[i] = true \u8868\u793a\u8fdb\u7a0bPi\u60f3\u8fdb\u5165</li> <li>\u8fdb\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u524d\u5148\u8f6e\u8be2\u5bf9\u65b9\u662f\u5426\u60f3\u8fdb\u5165</li> <li>\u786e\u5b9a\u5bf9\u65b9\u4e0d\u60f3\u8fdb\u5165\u540e\u518d\u8fdb\u5165</li> <li>\u8bbf\u95ee\u7ed3\u675f\u9000\u51fa\u540e\u8bbe\u7f6e flag[i] = false\uff0c\u8868\u793a\u4e0d\u60f3\u8fdb\u5165\uff0c\u5141\u8bb8\u5bf9\u65b9\u8fdb\u5165</li> </ul> <p>\uff08\u4e0b\u56fe\uff0cPi \u5148\u7b49\u5f85 Pj \u5b8c\u6210\uff0c\u7136\u540e\u8868\u8fbe\u60f3\u8fdb\u5165\uff0c\u7136\u540e\u8fdb\u5165\uff09</p> <p></p>"},{"location":"os/os/#4-petersons-solution","title":"4 Peterson\u2019s Solution","text":"<ul> <li>flag[i] \u6807\u8bb0\u8fdb\u7a0b i \u4e3a ready\uff0cturn \u6807\u8bb0 whose turn it is to enter the critical section.  </li> <li>assume load \u548c store \u64cd\u4f5c\u662f\u4e0d\u53ef\u4ee5\u88ab\u6253\u65ad\u7684\uff0catomic \u539f\u5b50\u7684</li> <li>idea</li> <li>\u9996\u5148\u8868\u8fbe\u81ea\u8eab\u610f\u613f(flag[]=true)\u4e4b\u540e\u8bbe\u7f6e\u81ea\u8eab\u8981\u8fdb\u5165(turn=0/1)\uff1b</li> <li>\u82e5\u53cc\u65b9\u4e92\u76f8\u786e\u5b9a\u5bf9\u65b9\u90fd\u60f3\u8fdb\u5165\u65f6\uff0cturn\u53ea\u80fd\u7b49\u4e8e\u4e00\u4e2a\u503c\uff0c\u56e0\u6b64\u4f1a\u8c26\u8ba9\u5bf9\u65b9\u8fdb\u5165</li> <li>\u82e5\u4e00\u65b9\u4e0d\u60f3\u8fdb\u5165\uff0c\u5219\u5176flag[i]=false\uff0c\u5bf9\u65b9\u53ef\u76f4\u63a5\u8fdb\u5165</li> </ul> <p>\uff08i \u8868\u8fbe\u610f\u613f\uff0c\u4f46\u4f18\u5148\u8ba9 j \u8fdb\u884c\uff0c\u76f4\u5230 j \u4e0d\u60f3\u8fdb\u884c\uff09</p> <p></p> <ul> <li>\u5b58\u5728\u7684\u95ee\u9898\uff1a\u4e0d\u80fd\u4fdd\u8bc1\u4ed6\u80fd\u89e3\u51b3\u73b0\u4ee3\u8ba1\u7b97\u673a\u67b6\u6784\u4e0a\u7684\u95ee\u9898</li> <li>\u89e3\u51b3\u65b9\u6848\uff1aMemory barrier (\u5185\u5b58\u6805\u680f)</li> <li>\u4ee3\u7801\u4e2d\u65b0\u589e\u4e86 <code>asm(\"mfence\")</code> \u6307\u4ee4\uff0c\u8fd9\u662f\u4e00\u6761\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\uff0c\u7528\u4e8e\u9632\u6b62\u7f16\u8bd1\u5668\u548cCPU\u5bf9\u67d0\u4e9b\u5185\u5b58\u64cd\u4f5c\u8fdb\u884c\u91cd\u6392\u5e8f\u3002<code>mfence</code> \u786e\u4fdd\u5728\u5176\u524d\u540e\u7684\u5185\u5b58\u64cd\u4f5c\u6309\u7167\u7a0b\u5e8f\u4e2d\u7684\u987a\u5e8f\u6267\u884c\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u4e25\u683c\u7684\u5185\u5b58\u8bbf\u95ee\u987a\u5e8f\u63a7\u5236\u3002</li> </ul> <p></p>"},{"location":"os/os/#5-bakery-algorithm-lamport","title":"5 Bakery Algorithm (\u9762\u5305\u623f\u7b97\u6cd5) Lamport","text":"<ul> <li>\u7279\u70b9</li> <li>\u4efb\u4f55\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165 critical section</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6700\u7ec8\u4f1a\u8fdb\u5165 critical section</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u80fd\u505c\u5728 noncritical section</li> <li>\u4e0d\u80fd\u5bf9\u8fdb\u7a0b\u7684\u901f\u5ea6\u505a\u4efb\u4f55\u5047\u8bbe</li> <li>idea</li> <li>\u5728\u8fdb\u5165\u4e34\u754c\u533a\u4e4b\u524d\u4f1a\u6536\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u62ff\u5230\u6700\u5c0f\u6570\u5b57\u7684\u8fdb\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u3002</li> <li>\u5982\u679c\u8fdb\u7a0b Pi \u548c Pj \u6536\u5230\u76f8\u540c\u7684\u7f16\u53f7\uff0c\u5982\u679c i &lt; j\uff0c\u5219\u5148\u670d\u52a1 Pi\uff1b\u5426\u5219\u9996\u5148\u4e3a Pj \u63d0\u4f9b\u670d\u52a1\u3002</li> <li>\u7f16\u53f7\u65b9\u6848\u59cb\u7ec8\u6309\u9012\u589e\u7684\u679a\u4e3e\u987a\u5e8f\u751f\u6210\u6570\u5b57\uff1b\u4f8b\u5982\uff0c1\u30012\u30013\u30013\u30013\u30013\u30014\u30015\u3002</li> <li>\u7ed3\u6784</li> <li>boolean choosing[n]: \u8868\u793a\u8fdb\u7a0b\u662f\u5426\u6b63\u5728\u53d6\u53f7\uff1b\u521d\u59cbfalse\uff0c\u53d6\u597d\u53f7\u4e3a false</li> <li>int number[n]: \u8bb0\u5f55\u6bcf\u4e2a\u8fdb\u7a0b\u53d6\u5230\u7684\u53f7\u7801\uff1b\u521d\u59cb0</li> </ul>"},{"location":"os/os/#63","title":"6.3 \u786c\u4ef6\u540c\u6b65\u65b9\u5f0f","text":"<ul> <li>\u5355\u5904\u7406\u5668 \u2013 \u53ef\u4ee5\u7981\u7528\u4e2d\u65ad</li> <li>\u5f53\u524d\u8fd0\u884c\u7684\u4ee3\u7801\u5c06\u5728\u6ca1\u6709\u62a2\u5360\u7684\u60c5\u51b5\u4e0b\u6267\u884c</li> <li>\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\u901a\u5e38\u6548\u7387\u592a\u4f4e</li> <li>\u4f7f\u7528\u6b64\u529f\u80fd\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u5177\u6709\u5e7f\u6cdb\u7684\u53ef\u6269\u5c55\u6027</li> <li>\u73b0\u4ee3\u673a\u5668\u63d0\u4f9b\u7279\u6b8a\u7684\u539f\u5b50\u786c\u4ef6\u6307\u4ee4</li> <li>\u539f\u5b50=\u4e0d\u53ef\u4e2d\u65ad</li> <li>\u8981\u4e48\u6d4b\u8bd5\u5185\u5b58\u5b57\u5e76\u8bbe\u7f6e\u503c</li> <li>\u8981\u4e48\u4ea4\u6362\u4e24\u4e2a\u5185\u5b58\u5b57\u7684\u5185\u5bb9</li> </ul>"},{"location":"os/os/#1-disable-interrupts","title":"1 Disable Interrupts","text":"<pre><code>while (true) {\n  Disable Interrupts; \n  Critical section;\n  Enable Interrupts;          \n  Remainder section;\n}\n</code></pre> <ul> <li>idea</li> <li>\u8fdb\u5165\u4e34\u754c\u533a\u524d\u76f4\u63a5\u5c4f\u853d\u4e2d\u65ad\uff0c\u4fdd\u8bc1\u4e34\u754c\u533a\u8d44\u6e90\u987a\u5229\u4f7f\u7528</li> <li>\u7f3a\u70b9</li> <li>\u53ef\u80fd\u5f71\u54cd\u7cfb\u7edf\u6548\u7387<ul> <li>\u6ee5\u7528\u5173\u4e2d\u65ad\u4f1a\u4e25\u91cd\u5f71\u54cdCPU\u6267\u884c\u6548\u7387</li> <li>\u5176\u9501\u4f4fCPU\u53ef\u80fd\u5bfc\u81f4\u539f\u672c\u4e00\u4e9b\u77ed\u65f6\u95f4\u5373\u53ef\u5b8c\u6210\u7684\u9700\u8981\u7b49\u5f85\u5f00\u4e2d\u65ad</li> </ul> </li> <li>\u4e0d\u9002\u7528\u4e8e\u591aCPU\u7cfb\u7edf<ul> <li>\u4e2d\u65ad\u5c4f\u853d\u6cd5\u53ea\u9002\u7528\u4e8e\u5355CPU\u7cfb\u7edf\uff0c\u5728\u591aCPU\u7cfb\u7edf\u4e2d\u65e0\u6cd5\u6709\u6548\u540c\u6b65\u5404\u4e2aCPU\u7684\u64cd\u4f5c</li> </ul> </li> <li>\u5b89\u5168\u6027\u95ee\u9898<ul> <li>\u6ee5\u7528\u5173\u4e2d\u65ad\u6743\u529b\u53ef\u80fd\u5bfc\u81f4\u4e25\u91cd\u540e\u679c</li> <li>\u4f8b\u5982\u5728\u5173\u95ed\u4e2d\u65ad\u671f\u95f4\uff0c\u4e00\u4e9b\u91cd\u8981\u7684\u4e2d\u65ad\u8bf7\u6c42\u53ef\u80fd\u88ab\u9519\u8fc7\uff0c\u5f71\u54cd\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u9760\u6027</li> </ul> </li> </ul>"},{"location":"os/os/#2-testandset-instruction","title":"2 TestAndSet Instruction","text":"<p>\u81ea\u52a8\u6d4b\u8bd5\u548c\u4fee\u6539\u5355\u8bcd\u7684\u5185\u5bb9</p> <pre><code>boolean TestAndSet (boolean *target){\n  boolean rv = *target;\n  *target = TRUE;\n  return rv;\n}\n</code></pre> <p>Solution using TestAndSet:</p> <p>Shared boolean variable lock., initialized to false.</p> <pre><code>while (true) {\n  while ( TestAndSet (&amp;lock ));   // do nothing\n  //critical section\n  lock = FALSE;\n  //remainder section \n}\n</code></pre> <p>\u6ee1\u8db3\u4e92\u65a5\u548c\u7a7a\u95f2\u8fdb\u5165\uff0c\u4f46\u4e0d\u6ee1\u8db3\u6709\u9650\u7b49\u5f85</p>"},{"location":"os/os/#3-swap-instruction","title":"3 Swap Instruction","text":"<ul> <li>\u5bf9\u6bcf\u4e2a\u4e34\u754c\u8d44\u6e90\uff0cswap\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40bool\u53d8\u91cflock(\u521d\u503c\u4e3afalse)\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u8bbe\u7f6e\u5c40\u90e8\u53d8\u91cfkey(\u521d\u503c\u4e3atrue)</li> <li>\u8fdb\u7a0b\u8c03\u7528swap()\u6307\u4ee4\u8bbf\u95ee\u4e34\u754c\u533a\uff0c\u4f1a\u4ea4\u6362key\u548clock\u7684\u503c\uff0c\u5b9e\u73b0\u4e0a\u9501\uff0c\u8fdb\u5165\u8bbf\u95ee</li> <li>\u9000\u51fa\u65f6\u628alock\u91cd\u7f6e\u4e3afalse</li> </ul> <pre><code>void Swap(boolean *a, boolean *b){\n  boolean temp = *a;\n  *a = *b;\n  *b = *temp;\n}\n</code></pre> <p>\u6ee1\u8db3\u4e92\u65a5\u548c\u7a7a\u95f2\u8fdb\u5165\uff0c\u4f46\u4e0d\u6ee1\u8db3\u6709\u9650\u7b49\u5f85</p>"},{"location":"os/os/#_2","title":"\u4ee5\u4e0b\u6709\u597d\u591a\u6ca1\u5199\u5b8c","text":""},{"location":"os/os/#4-the-compare_and_swap-cas-instruction","title":"4 The compare_and_swap (CAS)  Instruction","text":""},{"location":"os/os/#5-bounded-waiting-with-compare-and-swap","title":"5 Bounded-waiting with compare-and-swap","text":"<p>Boolean waiting[n]: \u6392\u961f\u961f\u5217to be initialize to false</p> <p>\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u5f80\u540e\u627e\u4e0b\u4e00\u4e2a\u7b49\u5f85\u7684 \u8fdb\u7a0b\uff0c\u9632\u6b62\u8fdb\u7a0b\u6c38\u8fdc\u5f97\u4e0d\u5230\u6267\u884c</p>"},{"location":"os/os/#64-mutex-locks-ppt46","title":"6.4 Mutex Locks \u4e92\u65a5\u9501 ppt46","text":"<p>\u7528\u4e00\u4e2a bool \u53d8\u91cf\u6307\u793a lock</p>"},{"location":"os/os/#65-semaphore","title":"6.5 Semaphore \u4fe1\u53f7\u91cf\u673a\u5236","text":"<p>\u4fe1\u53f7\u91cf S\uff08\u53ef\u4ee5\u7406\u89e3\u6210 CPU \u8d44\u6e90\uff09</p> <p>\u53ea\u6709\u901a\u8fc7 wait(P) \uff08CPU \u88ab\u5360\u7528\uff09\u548c signal(V) \uff08CPU \u7a7a\u51fa\u6765\u4e86\uff09\u64cd\u4f5c\uff08atomic\uff09\u624d\u80fd\u5bf9\u4fe1\u53f7\u91cf\u8fdb\u884c\u64cd\u4f5c</p> <pre><code>wait (S) { \n  while S &lt;= 0; // no-op\n  S--;\n}\nsignal (S) { \n  S++;\n}\n</code></pre>"},{"location":"os/os/#1-semaphore-type","title":"1 Semaphore Type","text":"<ul> <li>Counting semaphore \uff08\u8ba1\u6570\u578b\uff09</li> <li>\u53ef\u4ee5\u53d6\u4efb\u610f\u7684\u6574\u6570</li> <li>Binary semaphore \uff08\u4e8c\u8fdb\u5236\u578b\uff09\u591a\u7528</li> <li>\u53ea\u80fd\u53d6 0 \u548c 1\uff0c\u4e5f\u79f0\u4e3a\u4e92\u65a5\u9501\uff0c\u662f\u4fe1\u53f7\u91cf\u7684\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f</li> <li>\u8054\u7cfb\u8ba1\u6570\u578b\uff1a\u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u6709\u5b83\u7684\u4e8c\u8fdb\u5236\u8f6c\u6362</li> <li>\u5176\u4ed6\uff1aAND\u578b\u4fe1\u53f7\u91cf\uff08\u6240\u6709\u8d44\u6e90\u90fd\u8981\u6ee1\u8db3\u624d\u53ef\u4ee5\uff0c\u5bf9\u4e8e\u89e3\u51b3\u6b7b\u9501\uff09\u3001\u4fe1\u53f7\u91cf\u96c6</li> </ul>"},{"location":"os/os/#2-usage","title":"2 Usage","text":""},{"location":"os/os/#1_1","title":"1 \u5b9e\u73b0\u4e92\u65a5","text":"<p>S \u4e8c\u8fdb\u5236\u578b\uff0c\u56e0\u4e3a\u8981\u5148 --\uff0c\u6240\u4ee5\u521d\u59cb\u5316 1</p> <pre><code>Semaphore S;   //initialize to 1\nwait (S); //--\nCritical Section\nsignal (S); //++\nRemainder Section\n</code></pre>"},{"location":"os/os/#2_1","title":"2 \u5b9e\u73b0\u540c\u6b65","text":"<p>\u4e24\u4e2a\u8fdb\u7a0b P1 \u72b6\u6001 S1, P2 S2\uff0c\u8981\u6c42 S1 \u5728 S2 \u524d</p> <pre><code>//initialize to 0\nP1 S1;\nSignal(S); \nWait(S);  //\u53d6\u4e4b\u524d\u770b\u770b\u6709\u6ca1\u6709item\u5148\u7b49\nP2 S2; \n</code></pre> <p>\u8fd9\u91cc S \u4e0d\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u91cc</p>"},{"location":"os/os/#3_1","title":"3 \u5b9e\u73b0\u5f02\u6b65","text":"<ul> <li>4\u4e2a\u623f\u95f4\uff0c4\u4e2a\u4e00\u6837\u7684\u94a5\u5319\uff0c1\u4e2a\u4fe1\u53f7\u91cf\u5c31\u591f\u4e86</li> <li>4\u4e2a\u623f\u95f4\uff0c4\u4e2a\u4e0d\u540c\u94a5\u5319\uff0c\u9700\u89814\u4e2a\u4fe1\u53f7\u91cf</li> <li>1\u4e2a\u4fe1\u53f7\u91cf\u5bfc\u81f4\u591a\u4e2a\u623f\u95f4\u4e4b\u95f4\u7684\u8bbf\u95ee\u51b2\u7a81\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u4e92\u65a5\u6027</li> </ul>"},{"location":"os/os/#3-implementation","title":"3 Implementation","text":"<ul> <li>wait \u548c signal \u662f\u4e92\u65a5\u7684\uff0c\u4e0d\u80fd\u540c\u65f6\u5728\u76f8\u540c\u4fe1\u53f7\u91cf\u4e0a\u6267\u884c</li> <li>\u5b9e\u73b0\u7684\u4e24\u79cd\u65b9\u5f0f\uff1abusywaiting</li> <li>\u76f2\u7b49\uff1a\u7528 while \u7b49</li> <li>\u975e\u76f2\u7b49</li> </ul>"},{"location":"os/os/#1-busy-waiting","title":"1 busy Waiting","text":"<ul> <li>\u4e3a\u5141\u8bb8\u4e00\u4e2a\u751f\u4ea7\u8005\u548c\u4e00\u4e2a\u6d88\u8d39\u8005\uff0cP V \u5fc5\u987b\u5728\u5728\u4e0d\u540c\u7684 CPU \u4e0a\u8dd1</li> <li>\u56e0\u4e3a P V \u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u5176\u4ed6\u8fdb\u7a0b\u5c31\u5fc5\u987bwait\u4e86\u4e00\u76f4\u5360\u7528</li> <li>\u5982\u679c\u751f\u4ea7\u8005\u5f88\u5c11\u6267\u884c\uff0c\u4f1a\u5bfc\u81f4\u6d88\u8d39\u8005 while \u7b49\u5f85\u7684\u65f6\u95f4\u5f88\u957f</li> <li>while \u7684\u5faa\u73af\u65f6\u95f4\u7531 P \u51b3\u5b9a</li> </ul>"},{"location":"os/os/#2-no-busywaiting","title":"2 no busywaiting","text":"<ul> <li>\u65b0\u589e\u4e0e\u4fe1\u53f7\u91cf\u5bf9\u5e94\u7684 waiting queue\uff0cready queue\u8fd8\u662f CPU \u8c03\u5ea6\u7684</li> <li>\u65b0\u589e\u4e24\u4e2a\u64cd\u4f5c\uff1a</li> <li>block(sleep)\uff1a\u5728\u76f2\u7b49\u4e2d\u6302\u8d77\u5728 waiting queue\u91cc\u9762</li> <li>wakeup\uff1a\u5524\u9192 waiting queue\u7684\u8fdb\u7a0b\u5230 ready queue\u4e2d</li> </ul> <pre><code>wait (S){ \n  value--;\n  if (value &lt; 0) { \n    // add this process to waiting queue\n    block();  \n  }\n}\nSignal (S){ \n  value++;\n  if (value &lt;= 0) { \n    // remove a process P from the waiting queue\n    wakeup(P);  \n  }\n}\n</code></pre> <ul> <li>S \u53ef\u4ee5\u53d6\u503c\u8d1f</li> <li>\u5f53 S \u53d6\u8d1f\u8868\u793a\u961f\u5217\u91cc\u9762\u5728\u7b49\u5f85\u7684\u8fdb\u7a0b\u7684\u4e2a\u6570</li> <li>\u53ea\u8981\u6709\u8fdb\u7a0b\u8fdb\u5165 waiting queue \u90fd\u4f1a\u6267\u884c wait S--</li> </ul> <ul> <li>\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e22\u5931 wakeup \u7684\u8fdb\u7a0b</li> <li>\u8f6e\u5230\u5b83 wakeup \u4e86\u4f46\u5b83\u8fd8\u6ca1\u6709 sleep</li> <li>\u5728 212 213\u4e4b\u95f4\u8fd8\u6ca1\u6267\u884c\u5230 sleep \u7684\u65f6\u5019\u5c31\u6267\u884c\u4e86 wakeup</li> <li>\u6839\u672c\u539f\u56e0\uff1a\u6ca1\u6709\u5b8c\u5168\u4e92\u65a5</li> <li>sleep \u7b49\u5f85\u4e4b\u524d\u5148\u4e0a\u9501\uff1f\uff1f</li> </ul> <p>\u9519\u3002\u4e0a\u9501\u4e4b\u540e s \u6c38\u8fdc\u4e0d\u80fd\u88ab\u4fee\u6539\u4e86\uff0csleep forever\uff0c\u6b7b\u9501 deadlock</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1fsleep \u63d2\u5165 waitingqueue \u540e\u5c31\u653e\u9501\uff08\u8bbe\u8ba1\u65b0\u7684 sleep \u51fd\u6570\uff09</p> <p></p> <ul> <li>busywaiting</li> <li>\u5982\u679c\u8ba1\u7b97\u673a\u4e00\u5b9a\u8981\u5b9e\u73b0 busywaiting\uff0c\u90a3\u5fc5\u987b\u591a\u6838\uff1b</li> <li>\u5e76\u4e14\u8981\u6c42 P \u6267\u884c\u7684\u65f6\u95f4\u8d8a\u77ed\u8d8a\u597d\uff0c\u5426\u5219 waiting \u592a\u4e45\u4e86</li> <li>no busywaiting</li> <li>\u672c\u8d28\uff1a\u8fdb\u7a0b\u8c03\u5ea6</li> <li>\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u65f6\u95f4\u5e94\u5f53\u8bbe\u8ba1\u8981\u6bd4 busywaiting \u7684\u65f6\u95f4\u77ed</li> </ul>"},{"location":"os/os/#4-deadlock-and-starvation","title":"4 Deadlock and Starvation","text":"<p>\u6b7b\u9501\uff1a\u5148 wait \u7684\u5148 signal</p> <p></p> <p>starvation\uff1a\u65e0\u9650\u7b49\u5f85</p>"},{"location":"os/os/#5","title":"5 \u5b9e\u9645\u95ee\u9898","text":"<p>\u4fe1\u53f7\u91cf\uff1a\u4e34\u754c\u533a\u4e34\u754c\u8d44\u6e90\uff08\u4e92\u65a5\uff09</p> <ul> <li>\u4fe1\u53f7\u91cf\u7684\u7269\u7406\u542b\u4e49</li> <li>S.value &gt;0 \u8868\u793a\u6709S.value\u4e2a\u8d44\u6e90\u53ef\u7528;</li> <li>S.value=0 \u8868\u793a\u65e0\u8d44\u6e90\u53ef\u7528\u6216\u8868\u793a\u4e0d\u5141\u8bb8\u8fdb\u7a0b\u518d\u8fdb\u4eba\u4e34\u754c\u533a\uff1b</li> <li> <p>S.value&lt;0 \u5219|S.value|\u8868\u793a\u5728\u7b49\u5f85\u961f\u5217\u4e2d\u8fdb\u7a0b\u7684\u4e2a\u6570\u6216\u8868\u793a\u7b49\u5f85\u8fdb\u5165\u4e34\u754c\u533a\u7684\u8fdb\u7a0b\u4e2a\u6570\u3002</p> </li> <li> <p>wait\u3001signal\u64cd\u4f5c\u5fc5\u987b\u6210\u5bf9\u51fa\u73b0</p> </li> <li>\u5f53\u4e3a\u4e92\u65a5\u64cd\u4f5c\u65f6\uff0c\u5b83\u4eec\u540c\u5904\u4e8e\u540c\u4e00\u8fdb\u7a0b;</li> <li> <p>\u5f53\u4e3a\u540c\u6b65\u64cd\u4f5c\u65f6\uff0c\u5219\u4e0d\u5728\u540c\u4e00\u8fdb\u7a0b\u4e2d\u51fa\u73b0\u3002</p> </li> <li> <p>\u4e24\u4e2await\u64cd\u4f5c\u76f8\u90bb\uff0c\u5b83\u4eec\u7684\u987a\u5e8f\u81f3\u5173\u91cd\u8981</p> </li> <li>\u4e24\u4e2a\u76f8\u90bb\u7684signa\u64cd\u4f5c\u7684\u987a\u5e8f\u65e0\u5173\u7d27\u8981</li> <li>\u4e00\u4e2a\u540c\u6b65wait\u64cd\u4f5c\u4e0e\u4e00\u4e2a\u4e92\u65a5wait\u64cd\u4f5c\u5728\u4e00\u8d77\u65f6\uff0c\u540c\u6b65wait\u64cd\u4f5c\u5728\u4e92\u65a5wait\u64cd\u4f5c\u524d<ul> <li>\u4e92\u65a5wait\uff1a\u5141\u8bb8\u4f60\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u540c\u6b65 wait\uff1a\u5141\u8bb8\u4f60\u540c\u6b65</li> <li>\u987a\u5e8f\u4e92\u6362\u5bfc\u81f4\u6b7b\u9501</li> </ul> </li> </ul>"},{"location":"os/os/#1-bounded-buffer-problem","title":"1 Bounded-Buffer Problem","text":"<p>N buffers, each can hold one item</p> <ul> <li>\u5206\u6790\u4fe1\u53f7\u91cf</li> <li>\u4e92\u65a5mutex\u9700\u8981\u4e00\u4e2a\u4fe1\u53f7\u91cf\uff0cinitialize to 1</li> <li>\u751f\u4ea7\u8005\u5224\u65ad\u6ee1\u4e0d\u6ee1 full\uff0c\u521d\u59cb\u503c 0\uff0c\u521a\u5f00\u59cb\u6ca1\u6709 item</li> <li>\u6d88\u8d39\u8005\u5224\u65ad\u6709\u6ca1\u6709 empty\uff0c\u521d\u59cb\u503c N\uff0c\u8ba1\u7b97\u7a7a\u7684 Buffer</li> </ul> <p></p>"},{"location":"os/os/#2-readers-writers-problem","title":"2 Readers-Writers Problem","text":"<p>\u8bfb\u8005\u5bf9 dataset \u53ea\u8bfb\uff0c\u5199\u8005\u5bf9 dataset \u53ef\u8bfb\u53ef\u5199</p> <p>\u5141\u8bb8\u591a\u4e2a\u8bfb\u8005\u8bfb\u53d6\uff0c\u4f46\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u5141\u8bb8\u4e00\u4e2a\u5199\u8005\u8fdb\u884c\u5199\u4f5c</p> <p>\u8bfb\u8005\u6709\u9650\u95ee\u9898\uff1a\u5f53\u6709\u5f88\u591a\u8bfb\u8005\u90fd\u8bfb\u53d6\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u8bfb\u8005\u90fd\u8bfb\u5b8c\u540e\u624d\u5141\u8bb8\u8fdb\u884c\u5199\u7684\u64cd\u4f5c</p> <ul> <li>\u4fe1\u53f7\u91cf\u5206\u6790</li> <li>\u8bfb\u8005\u4e0e\u5199\u8005\u4e92\u65a5 mutex\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u6d89\u53ca\u540c\u6b65</li> <li>\u5199\u8005\u5199\u7684\u65f6\u5019\u5224\u65ad\u6709\u6ca1\u6709\u8bfb\u8005\u5728\u7528 readcount\uff08\u521d\u59cb\u5316 0</li> <li>\u4fe1\u53f7\u91cf\u5199\u8005 wrt\uff08\u521d\u59cb\u5316 1</li> </ul> <p>\u5199\u8005\uff1a</p> <p></p> <p>\u8bfb\u8005\uff1a</p> <p></p> <ul> <li>\u6211\u8981\u8bfb\u4e86\uff08readcount == 1\uff09\uff0c\u5199\u8005\u4e0d\u5141\u8bb8\u5199\u4e86\uff0c\u7f6e wait</li> <li>\u8bfb\u8005\u8bfb\u5b8c\u4e86\uff08readcount == 0\uff09\uff0c\u5199\u8005\u53ef\u4ee5\u5199\u4e86\uff0c\u7f6e Signal</li> </ul> <p>\u7b2c\u4e00\u4e2a\u8fdb\u6765\u7684\u8bfb\u8005\u5bf9\u5199\u8fdb\u884c\u4e0a\u9501\uff0c\u6700\u540e\u4e00\u4e2a\u8bfb\u8005\u5bf9\u5199\u8fdb\u884c\u653e\u9501</p>"},{"location":"os/os/#3-dining-philosophers-problem","title":"3 Dining-Philosophers Problem","text":"<p>\u54f2\u5b66\u5bb6\u53ef\u4ee5\u5403\u996d\u548c\u601d\u8003\uff0c\u5fc5\u987b\u62ff\u8d77\u5de6\u53f3\u4e24\u8fb9\u7684\u7b77\u5b50\uff08\u5206\u522b1\u6839\uff09\u624d\u53ef\u4ee5\u5403\u996d\u3002</p> <p></p> <ul> <li>Shared data </li> <li>Bowl of rice (data set)</li> <li>\u4fe1\u53f7\u91cf chopstick [5] initialized to 1</li> </ul> <p>i \u8868\u793a\u5de6\u53f3\u7684\u7b77\u5b50\uff0c i + 1 \u8868\u793a\u53f3\u8fb9\u7684\u7b77\u5b50</p> <p></p> <p>\u4ee3\u7801\u6b7b\u9501\u3002\u5f53\u6240\u6709\u4eba\u90fd\u628a\u5de6\u8fb9\u62ff\u8d77\u6765\u4e86\u5c31\u6ca1\u6709\u7b77\u5b50\u4e86\uff0c\u4f46\u6ca1\u6709\u4eba\u4f1a\u653e\u4e0b\u7b77\u5b50\u6240\u4ee5\u6240\u6709\u4eba\u90fd\u7b49\u3002</p> <ul> <li>\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u5f0f</li> <li>\u6539\u53d8\u5176\u4e2d\u4e00\u4e2a\u54f2\u5b66\u5bb6\u62ff\u7b77\u5b50\u65b9\u5411\u7684\u5148\u540e\u987a\u5e8f</li> <li>\u4e00\u4e2a\u65f6\u523b\u53ea\u5141\u8bb8\u4e00\u4e2a\u54f2\u5b66\u5bb6\u62ff\u7b77\u5b50</li> <li>\u5947\u6570 ID \u548c\u5076\u6570 ID \u7684\u54f2\u5b66\u5bb6\u8bbe\u7f6e\u76f8\u53cd\u62ff\u7b77\u5b50\u7684\u987a\u5e8f</li> </ul>"},{"location":"os/os/#66-monitors","title":"6.6 Monitors \u7ba1\u7a0b","text":"<p>\u4e00\u79cd\u9ad8\u7ea7\u62bd\u8c61\uff0c\u4e3a\u8fdb\u7a0b\u540c\u6b65\u63d0\u4f9b\u65b9\u4fbf\u6709\u6548\u7684\u673a\u5236</p> <p>\u4e00\u4e2a\u65f6\u95f4\u53ea\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u5728\u7ba1\u7a0b\u91cc\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\uff08active</p> <p></p>"},{"location":"os/os/#1-condition-variables","title":"1 Condition Variables","text":"<p>condition x, y;</p> <ul> <li>x.wait () \uff1a a process that invokes the operation is suspended.</li> <li>x.signal () \uff1a resumes one of processes(if any)that invoked x.wait ()</li> </ul>"},{"location":"os/os/#2_2","title":"2 \u54f2\u5b66\u5bb6\u95ee\u9898","text":"<p>\u5f53\u5de6\u53f3\u54f2\u5b66\u5bb6 <code>self[(i+4)%5]</code> \u548c <code>self[(i+1)%5]</code> \u7ee7\u7eed\u8fdb\u98df\u65f6\uff0c<code>self[i]</code> \u53ef\u80fd\u4f1a starve</p>"},{"location":"os/os/#67-pthreads","title":"6.7 Pthreads \u540c\u6b65","text":"<p>p80 </p>"},{"location":"os/os/#7-deadlocks","title":"7 Deadlocks","text":"<p>\u6307\u591a\u4e2a\u8fdb\u7a0b\u56e0\u7ade\u4e89\u5171\u4eab\u8d44\u6e90\u800c\u9020\u6210\u76f8\u4e92\u7b49\u5f85\u7684\u4e00\u79cd\u50f5\u5c40\uff0c\u82e5\u65e0\u5916\u529b\u4f5c\u7528\uff0c\u8fd9\u4e9b\u8fdb\u7a0b\u90fd\u5c06\u6c38\u8fdc\u4e0d\u80fd\u518d\u5411\u524d\u63a8\u8fdb\u3002</p> <ul> <li>\u4ea7\u751f\u6b7b\u9501\u76844\u4e2a\u5fc5\u8981\u6761\u4ef6</li> <li>Mutual exclusion\uff08\u4e92\u65a5\u6761\u4ef6\uff09\uff1a\u5bf9\u540c\u65f6\u7684\u4e00\u4efd\u8d44\u6e90\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u4e92\u65a5</li> <li>Hold and wait\uff08\u8bf7\u6c42\u5e76\u4fdd\u6301\u6761\u4ef6\uff09\uff1a\u9700\u8981\u5176\u4ed6\u8d44\u6e90\u4f46\u5f97\u4e0d\u5230\u6240\u4ee5\u8981\u7b49\u5f85\uff0c\u7b49\u5f85\u65f6\u5019\u4e0d\u4f1a\u628a\u81ea\u5df1\u5df2\u7ecf\u62e5\u6709\u7684\u8d44\u6e90\u91ca\u653e</li> <li>No preemption\uff08\u4e0d\u62a2\u5360\u6761\u4ef6\uff09\uff1a\u5b83\u5728\u5de5\u4f5c\u7684\u65f6\u5019\u4f60\u4e0d\u80fd\u628a\u4ed6\u7684\u8d44\u6e90\u5f3a\u884c\u5265\u593a</li> <li>Circular wait\uff08\u5faa\u73af\u7b49\u5f85/\u73af\u8def\u7b49\u5f85\u6761\u4ef6\uff09\uff1a\u4e00\u4e2a\u7b49\u4e0b\u4e00\u4e2a\uff0c\u6700\u540e\u4e00\u4e2a\u7b49\u7b2c\u4e00\u4e2a</li> </ul>"},{"location":"os/os/#71-system-model","title":"7.1 System Model","text":""},{"location":"os/os/#resource-allocation-graphrag","title":"Resource Allocation Graph\uff08RAG\uff09 \u8d44\u6e90\u5206\u914d\u56fe","text":"<ul> <li>\u8d44\u6e90\u5206\u914d\u56fe\u6ca1\u6709 cycle\uff1a\u6ca1\u6709\u6b7b\u9501</li> <li>\u6709 cycle\uff1a</li> <li>\uff08\u5355\u5411\u7bad\u5934\u9996\u5c3e\u76f8\u8fde\u6210\u73af\uff0c\u6709\u6b7b\u9501\uff09</li> <li>\u6bcf\u4e2a resource type\u53ea\u6709\u4e00\u4e2a\uff0c\u6b7b\u9501</li> <li>\u73af\u8def\u91cc\u9762 resource type \u6709\u5f88\u591a\u4e2a\uff0c\u6709\u53ef\u80fd\u6b7b\u9501</li> </ul>"},{"location":"os/os/#72","title":"7.2 \u6b7b\u9501\u5904\u7406","text":"<p>\u6700\u5e38\u7528\uff1aIgnore the problem and pretend that deadlocks never occur in the system;</p> <p>----\u9e35\u9e1f\u7b97\u6cd5</p>"},{"location":"os/os/#1_2","title":"1 \u6b7b\u9501\u9884\u9632","text":"<p>\u901a\u8fc7\u7834\u574f\u4ea7\u751f\u6b7b\u9501\u7684\u5fc5\u8981\u6761\u4ef6\u4e4b\u4e00\u6765\u9632\u6b62\u6b7b\u9501\u7684\u4ea7\u751f\u3002</p> <ul> <li>\u4e92\u65a5\uff08\u672c\u8d28\u662f\u8d44\u6e90\u5171\u4eab\uff09\uff1a\u5c06\u6240\u6709\u7684\u8d44\u6e90\u90fd\u8bbe\u7f6e\u4e3a\u4e0d\u5171\u4eab\u7684\u72b6\u6001</li> <li>\u8bf7\u6c42\u4fdd\u6301\uff1a\u5f53\u4e00\u4e2a\u8d44\u6e90\u8bf7\u6c42\u7684\u65f6\u5019\u5c31\u628a\u6240\u6709\u7684\u8d44\u6e90\u90fd\u7ed9\u4ed6\uff1b\u53ea\u6709\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5b8c\u5168\u8fd0\u884c\u5b8c\u624d\u91ca\u653e\u5b83\u6240\u6709\u7684\u5171\u4eab\u8d44\u6e90</li> <li>\u5f88\u4f4e\u7684\u8d44\u6e90\u5229\u7528\u7387\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u9965\u997f</li> <li>\u4e0d\u62a2\u5360\u6761\u4ef6\uff1a\u5982\u679c\u6b63\u5728\u5360\u7528\u67d0\u4e9b\u8d44\u6e90\u7684\u8fdb\u7a0b\u8bf7\u6c42\u53e6\u4e00\u4e2a\u65e0\u6cd5\u7acb\u5373\u5206\u914d\u7ed9\u5b83\u7684\u8d44\u6e90\uff0c\u5219\u91ca\u653e\u5f53\u524d\u5360\u7528\u7684\u6240\u6709\u8d44\u6e90\u3002</li> <li>\u88ab\u62a2\u5360\u7684\u8d44\u6e90\u5c06\u6dfb\u52a0\u5230\u8be5\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u7684\u8d44\u6e90\u5217\u8868\u4e2d\u3002</li> <li>\u53ea\u6709\u5f53\u8fdb\u7a0b\u80fd\u591f\u91cd\u65b0\u83b7\u5f97\u65e7\u8d44\u6e90\u4ee5\u53ca\u5b83\u6240\u8bf7\u6c42\u7684\u65b0\u8d44\u6e90\u65f6\uff0c\u8fdb\u7a0b\u624d\u4f1a\u91cd\u65b0\u542f\u52a8\u3002</li> <li>\u5faa\u73af\u7b49\u5f85\uff1aimpose a total ordering \u5f3a\u5236\u7f16\u53f7\u987a\u5e8f\u6267\u884c</li> </ul>"},{"location":"os/os/#2_3","title":"2 \u6b7b\u9501\u907f\u514d","text":"<p>\u52a8\u6001\u76d1\u6d4b\u8d44\u6e90\u5206\u914d\u7684\u5b89\u5168\u6027\uff0c\u6765\u786e\u4fdd\u7cfb\u7edf\u4e0d\u4f1a\u8fdb\u5165\u4e0d\u5b89\u5168\u72b6\u6001\u3002</p> <p>\u8d44\u6e90\u5206\u914d\u72b6\u6001\u7531\u53ef\u7528\u548c\u5df2\u5206\u914d\u8d44\u6e90\u7684\u6570\u91cf\u4ee5\u53ca\u8fdb\u7a0b\u7684\u6700\u5927\u9700\u6c42\u6765\u5b9a\u4e49\u3002</p> <ul> <li>safe state</li> <li>\u5b89\u5168\u5e8f\u5217\uff1a\u5982\u679c\u5b58\u5728\u6240\u6709\u8fdb\u7a0b\u7684\u5e8f\u5217&lt;\uff0c\u5bf9\u4e8e\u6bcf\u4e2a Pi\uff0cPi \u4ecd\u7136\u53ef\u4ee5\u8bf7\u6c42\u7684\u8d44\u6e90\u53ef\u4ee5\u7531\u5f53\u524d\u53ef\u7528\u8d44\u6e90+\u6240\u6709Pj(j&lt;i)\u7684\u8fdb\u7a0b\u6301\u6709\u7684\u8d44\u6e90\u6765\u6ee1\u8db3 <li>\u6b7b\u9501\u4e00\u5b9a\u4e0d\u5b89\u5168\uff0c\u4e0d\u5b89\u5168\u4e0d\u4e00\u5b9a\u6b7b\u9501\uff0c\u5b89\u5168\u4e00\u5b9a\u4e0d\u6b7b\u9501\uff08deadlock \u542b\u4e8e unsafe\uff09</li> <p>avoidance\uff1a\u4fdd\u8bc1\u7cfb\u7edf\u4e0d\u4f1a\u8fdb\u5165\u4e0d\u5b89\u5168\u72b6\u6001</p> <p>\u8fd9\u4e2a\u6761\u4ef6\u4e0b\u7684\u6b7b\u9501\uff1a\u5f53\u524d\u7684\u8d44\u6e90\u6ee1\u8db3\u4e0d\u4e86\u4e24\u4e2a\u8fdb\u7a0b\u7684\u9700\u6c42\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u4f1a\u4e92\u76f8\u7b49\u5f85\uff1b\u4f46\u5982\u679c\u662f\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8bdd\uff0c\u5c31\u4e0d\u4f1a\u4e92\u76f8\u7b49\u5f85\uff0c\u53ea\u4f1a\u65e0\u6cd5\u8fdb\u884c</p>"},{"location":"os/os/#_3","title":"\u6b7b\u9501\u907f\u514d\u7684\u7b97\u6cd5","text":"<p>1. Single instance of a resource type\uff1a\u8d44\u6e90\u5206\u914d\u56fe</p> <p>\u65b0\u589eclaim edge: \u672c\u6765\u662f\u865a\u7ebf\uff0c\u5728\u8fdb\u7a0b\u8bf7\u6c42\u8d44\u6e90\u7684\u65f6\u5019\u53d8\u4e3a\u5b9e\u7ebf</p> <p>\u6388\u4e88\u8bf7\u6c42\uff1a\u53ea\u6709\u5f53\u5c06\u8bf7\u6c42\u8fb9\u8f6c\u6362\u4e3a\u5206\u914d\u8fb9\u4e0d\u4f1a\u5bfc\u81f4\u8d44\u6e90\u5206\u914d\u56fe\u4e2d\u73af\u7684\u751f\u6210</p> <p></p> <p>\u7b2c\u4e8c\u5f20\u56fe\u5c31\u4f1a\u5bfc\u81f4\u6b7b\u9501\uff0c\u5e94\u5f53\u5728P2\u5411R2\u8bf7\u6c42\u7684\u65f6\u5019\u5c31\u62d2\u7edd</p> <p>2. Multiple instances of a resource type\uff1a\u94f6\u884c\u5bb6\u7b97\u6cd5</p> <p></p> <ul> <li>assumption\uff1a</li> <li>\u591a\u4e2a\u8d44\u6e90</li> <li>\u6bcf\u4e2a\u8d44\u6e90\u90fd\u8981 claim \u81ea\u5df1\u7684\u6700\u5927\u4f7f\u7528\u91cf</li> <li>\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u80fd\u8981\u7b49\u624d\u80fd\u5f97\u5230\u5bf9\u5e94\u7684\u8d44\u6e90</li> <li>\u5f97\u5230\u6240\u6709\u9700\u8981\u7684\u8d44\u6e90\u5c31\u4e00\u5b9a\u80fd\u5728\u6709\u9650\u65f6\u95f4\u5185\u8fd0\u884c\u5b8c</li> <li>n\u4e2a\u8fdb\u7a0b\uff0cm\u79cd\u8d44\u6e90</li> <li>available\uff1a\u53ef\u4f7f\u7528\u7684\u8d44\u6e90\u6570</li> <li>max\uff1an*m\u7684\u77e9\u9635\uff0c\u4e00\u884c\u8868\u793a\u8fdb\u7a0b\uff0c\u4e00\u5217\u8868\u793a\u8d44\u6e90\uff0cPi\u6700\u591a\u53ef\u80fd\u8bf7\u6c42k\u4e2aRj\u8d44\u6e90.</li> <li>allocation\uff1an*m\u7684\u77e9\u9635\uff0c\u8868\u793a\u5df2\u7ecf\u5206\u914d\u7684\u8d44\u6e90</li> <li>need\uff1an*m\uff0cneed = max - Allocation</li> </ul> <p>\u5b89\u5168\u7b97\u6cd5\uff1a </p> <p>request-request algorithm </p>"},{"location":"os/os/#3_2","title":"3 \u6b7b\u9501\u68c0\u6d4b","text":""},{"location":"os/os/#_4","title":"\u8865\u5199\uff01\uff01","text":""},{"location":"os/os/#8-main-memory","title":"8 Main Memory","text":""},{"location":"os/os/#81-background","title":"8.1 background","text":"<ul> <li>memory hierarchy</li> </ul> <ul> <li>\u4e00\u4e2a\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f\uff1a\u7f16\u8bd1\uff0c\u94fe\u63a5\uff0c\u88c5\u5165</li> <li>\u7f16\u8bd1\u9700\u8981\u4e3b\u8981\u7684\u65f6\u95f4</li> </ul> <ul> <li>\u5730\u5740 Addresses Given in Different Ways</li> <li>Symbolic Address \u7b26\u53f7\u5730\u5740\uff1acount \u53d8\u91cf\u4f1a\u4ee3\u8868 count \u8fd9\u4e2a\u7684\u5730\u5740</li> <li>Relocatable Addresses \u53ef\u91cd\u5b9a\u4f4d\u5730\u5740\uff1a\u7f16\u8bd1\u4e4b\u540e\u4f1a\u628a\u53ef\u91cd\u5b9a\u4f4d\u5730\u5740\u548c\u7b26\u53f7\u5730\u5740\u505a\u7ed1\u5b9a\uff0c\u5982 \u5730\u5740\u662f count \u5730\u5740\u7684\u540e14byte\u4f4d\u7f6e</li> <li>Absolute Addresses\u7edd\u5bf9\u5730\u5740\uff1a\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u7269\u7406\u5730\u5740</li> <li>\u5730\u5740\u7ed1\u5b9a\u6620\u5c04</li> <li>\u7f16\u8bd1\u65f6\u523b\uff1a\u5df2\u7ecf\u77e5\u9053\u4e86\u5177\u4f53\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u76f4\u63a5\u628a\u5730\u5740\u5199\u8fdb\u53bb\u4e0d\u7528\u865a\u62df\u5730\u5740\u4e86</li> <li>\u88c5\u5165\u65f6\u523b\uff1a\u8fd9\u4e2a\u65f6\u5019\u5185\u5b58\u4f1a\u7ed9\u4e00\u4e2a\u5730\u5740\uff0c\u5c31\u53ef\u4ee5\u628a\u76f8\u5bf9\u5730\u5740\u5199\u6210\u7269\u7406\u5730\u5740\u4e86\uff0c\u4f7f\u7528\u53ef\u91cd\u5b9a\u4f4d\u5730\u5740</li> <li> <p>\u6267\u884c\u65f6\u523b\uff1a\u5b9e\u9645\u8fd0\u7528\u4e00\u822c\u91c7\u7528\uff0c\u8981\u6c42\u5730\u5740\u5fc5\u987b\u8981\u9ad8\u6548\u7ed1\u5b9a\uff0c\u6240\u4ee5\u4e00\u822c\u7528\u786c\u4ef6\u6765\u5b9e\u73b0\u5feb\u6b7b\u7684\u7269\u7406\u5730\u5740\u7684\u7ed1\u5b9a</p> <ul> <li>\u5982\u679c\u8fdb\u7a0b\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5185\u5b58\u6bb5\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\uff0c\u5219\u7ed1\u5b9a\u5c06\u5ef6\u8fdf\u5230\u8fd0\u884c\u65f6\u3002\u9700\u8981\u5730\u5740\u6620\u5c04\u7684\u786c\u4ef6\u652f\u6301\uff08\u4f8b\u5982\uff0c\u57fa\u5bc4\u5b58\u5668\u548c\u9650\u5236\u5bc4\u5b58\u5668\uff09</li> <li>base register\u57fa\u5740\u5bc4\u5b58\u5668\u548c limit register \u9650\u957f\u5bc4\u5b58\u5668</li> <li></li> <li>\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e24\u4e2a\u5bc4\u5b58\u5668\u5b9e\u73b0\u5bf9\u8fd9\u4e2a\u5185\u5b58\u7a7a\u95f4\u7684\u4fdd\u62a4</li> </ul> </li> <li> <p>Logical vs. Physical Address Space</p> </li> <li>\u5982\u679c\u8fdb\u7a0b\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5185\u5b58\u6bb5\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\uff0c\u5219\u7ed1\u5b9a\u5c06\u5ef6\u8fdf\u5230\u5185\u5b58\u65f6\uff0c\u5e76\u4e14\u5f90\u5a05\u786c\u4ef6\u6765\u652f\u6301\u5730\u5740\u6620\u5c04\uff08\u5982\u57fa\u5740\u5bc4\u5b58\u5668\u6216\u9650\u957f\u5bc4\u5b58\u5668\uff09</li> <li>\u903b\u8f91\u5730\u5740\uff1a\u7531 cpu \u751f\u6210\uff0c\u4e5f\u53eb\u865a\u62df\u5730\u5740</li> <li>\u7269\u7406\u5730\u5740\uff1a\u5185\u5b58\u5355\u5143\u770b\u5230\u7684\u5730\u5740</li> <li> <p>\u903b\u8f91\u548c\u7269\u7406\u5730\u5740\u5728\u7f16\u8bd1\u65f6\u548c\u52a0\u8f7d\u65f6\u5730\u5740\u7ed1\u5b9a\u65b9\u6848\u4e2d\u662f\u76f8\u540c\u7684\uff0c\u4f46\u5728\u6267\u884c\u65f6\u4e0d\u540c</p> </li> <li> <p>Memory-Management Unit (MMU) \u5185\u5b58\u7ba1\u7406\u5355\u5143</p> </li> <li>\u5c06\u865a\u62df\u5730\u5740\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u7684\u786c\u4ef6\u8bbe\u5907</li> <li>In MMU scheme, the value in the relocation register is added to every address generated by a user process at the time it is sent to memory\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u88c5\u5165\u5185\u5b58\u7684\u65f6\u5019\u4f1a\u5c06\u91cd\u5b9a\u5411\u5bc4\u5b58\u5668\u91cc\u7684\u5730\u5740\u4e00\u8d77\u52a0\u5165\u5730\u5740</li> <li>\u8fdb\u7a0b\u53ea\u5904\u7406\u903b\u8f91\u5730\u5740\uff0c\u4e0d\u4f1a\u89c1\u5230\u7269\u7406\u5730\u5740</li> <li>dynamic loading \u52a8\u6001\u88c5\u5165</li> <li>\u4e0d\u4f1a\u4e00\u4e0b\u5b50\u5168\u90e8\u88c5\u5165\uff0c\u9700\u8981\u7684\u65f6\u5019\u624d\u88c5\u5165</li> <li>\u53ef\u4ee5\u8282\u7701\u7a7a\u95f4</li> <li>\u4e0d\u9700\u8981\u5176\u4ed6\u7684\u652f\u6301\u6765\u5b9e\u73b0</li> <li>dynamic linking \u52a8\u6001\u94fe\u63a5</li> <li>\u94fe\u63a5\u7684\u8fc7\u7a0b\u88ab\u63a8\u8fdf\u5230\u6267\u884c\u7684\u65f6\u5019\u8fdb\u884c</li> <li>\u7a0b\u5e8f\u7684\u94fe\u63a5\u4e0e\u88c5\u5165</li> </ul> <p></p> <ul> <li>Contiguous Allocation(\u8fde\u7eed\u5206\u914d)\uff1a\u5c06\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u5206\u7ed9\u4e00\u4e2a\u8fdb\u7a0b</li> <li>\u4e3b\u5b58\u4e3b\u8981\u6709\u4e24\u4e2a\u90e8\u5206\uff1a<ul> <li>\u5e38\u9a7b resident \u64cd\u4f5c\u7cfb\u7edf\uff0c\u901a\u5e38\u7528\u4e2d\u65ad\u5411\u91cf\u4fdd\u5b58\u5728\u4f4e\u5185\u5b58\u4e2d</li> <li>\u7528\u6237\u8fdb\u7a0b\u4e00\u822c\u5b58\u5728\u9ad8\u5185\u5b58\u4e2d</li> </ul> </li> <li>\u91cd\u5b9a\u4f4d\u5bc4\u5b58\u5668\u7528\u4e8e\u4fdd\u62a4\u7528\u6237\u8fdb\u7a0b\u72ec\u7acb\u5e76\u4e14\u9632\u6b62\u6536\u5230\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u7801\u548c\u6570\u636e\u7684\u66f4\u6539\u7684\u5e72\u6270<ul> <li>\u91cd\u5b9a\u4f4d\u5bc4\u5b58\u5668\u4fdd\u5b58\u4e86\u6700\u5c0f\u7684\u7269\u7406\u5730\u5740</li> <li>\u9650\u957f\u5bc4\u5b58\u5668\u4fdd\u5b58\u4e86\u903b\u8f91\u5730\u5740\u7684\u8303\u56f4\u2014\u2014\u6bcf\u4e00\u4e2a\u903b\u8f91\u5730\u5740\u90fd\u5fc5\u987b\u6bd4\u9650\u957f\u5730\u5740\u8981\u5c0f</li> <li>MMU \u52a8\u6001\u5206\u914d\u903b\u8f91\u5730\u5740</li> <li>\u5bf9\u91cd\u5b9a\u5411\u548c\u9650\u957f\u5bc4\u5b58\u5668\u7684\u786c\u4ef6\u652f\u6301</li> </ul> </li> </ul> <p></p> <ul> <li>(cont.)</li> <li>Single Continuous Allocation \u5355\u4e00\u8fde\u7eed\u5206\u914d<ul> <li>\u5185\u5b58\u5206\u4e3a\u7cfb\u7edf\u533a\u548c\u7528\u6237\u533a\uff0c\u7528\u6237\u533a\u6bcf\u6b21\u53ea\u8c03\u5165\u4e00\u9053\u7a0b\u5e8f\u8fd0\u884c</li> <li>\u4e00\u6b21\u53ea\u653e\u4e00\u9053\u7a0b\u5e8f\uff0c\u65e0\u5e76\u53d1</li> </ul> </li> <li>Multiple-partition allocation\u591a\u5206\u533a\u5206\u914d<ul> <li>\u5c06\u5185\u5b58\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8fde\u7eed\u533a\u57df\uff0c\u6bcf\u4e2a\u8fde\u7eed\u533a\u57df\u53ea\u80fd\u5b58\u653e\u4e00\u4e2a\u8fdb\u7a0b</li> </ul> </li> <li>fixed partitioning \u56fa\u5b9a\u5206\u533a</li> <li>dynamic partitions \u52a8\u6001\u5206\u533a\u6216 Variable partition \u53ef\u53d8\u5206\u533a<ul> <li>\u52a8\u6001\u5212\u5206\u5185\u5b58\uff0c\u5728\u7a0b\u5e8f\u88c5\u5165\u5185\u5b58\u65f6\u628a\u53ef\u7528\u5185\u5b58\u201c\u5207\u51fa\u201d\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u57df\u5206\u914d\u7ed9\u8be5\u8fdb\u7a0b\uff0c\u4e14\u5206\u533a\u5927\u5c0f\u6b63\u597d\u9002\u5408\u8fdb\u7a0b\u7684\u9700\u8981\u3002</li> <li>\u8bbe\u8ba1</li> <li>hole\uff1a\u5185\u5b58\u91cc\u5f53\u524d\u53ef\u7528\u7684\u533a\u57df\uff0c\u5185\u5b58\u91cc\u53ef\u80fd\u6709\u5f88\u591a\u4e2ahole</li> <li>\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u6765\u7684\u65f6\u5019\uff0c\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684hole\u5206\u914d\u7ed9\u4ed6</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u8bb0\u5f55\u5df2\u7ecf\u5206\u914d\u7684\u90e8\u5206\u548c\u7a7a\u7684hole</li> <li>\u5b9e\u73b0\u52a8\u6001\u5206\u533a\u7684\u7b97\u6cd5</li> <li>First-fit\uff1a\u4ece\u6574\u4e2alist\u5f00\u59cb\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u5c0f\u591f\u7684\u7b2c\u4e00\u4e2ahole<ul> <li>\u4e0d\u597d\uff0c\u524d\u9762\u7684hole\u53ef\u80fd\u51fa\u73b0\u5f88\u5c0f\u7684\u7a7a\u95f4</li> </ul> </li> <li>Next-fit\uff1a\u4ece\u4e0a\u4e00\u4e2a\u9009\u5230\u7684hole\u7684\u4e0b\u4e00\u4e2ahole\u5f00\u59cb\u9009<ul> <li>\u5f88\u5c0f\u7684\u7a7a\u95f4\u53ef\u80fd\u6700\u540e\u4f1a\u5206\u5e03\u7684\u6bd4\u8f83\u5747\u5300</li> </ul> </li> <li>Best-fit\uff1a\u627e\u5230\u6700\u5c0f\u7684\u53ef\u4ee5\u88c5\u4e0b\u7684hole<ul> <li>\u4f1a\u4ea7\u751f\u5f88\u5c0f\u5f88\u5c0f\u7684\u788e\u7247hole</li> </ul> </li> <li>Worst-fit\uff1a\u627e\u5230\u6700\u5927\u7684hole<ul> <li>\u4f1a\u4ea7\u751f\u4e00\u4e9b\u6bd4\u8f83\u5927\u7684hole</li> </ul> </li> <li>\u57fa\u4e8e\u7d22\u5f15\u7684\u65b9\u6cd5\uff1a</li> </ul> </li> </ul> <p></p> <ul> <li>fragmentation \u788e\u7247 \u96f6\u5934</li> <li>external fragmentation\uff1a\u603b\u5185\u5b58\u7a7a\u95f4\u5b58\u5728\u4ee5\u6ee1\u8db3\u8bf7\u6c42\uff0c\u4f46\u5b83\u4e0d\u662f\u8fde\u7eed\u7684</li> <li>internal fragmentation\uff1a\u7ed9\u4e00\u4e2a\u8fdb\u7a0b\u5206\u914d\u4e86\u4e00\u4e2a\u6bd4\u4ed6\u9700\u8981\u7684\u8fd8\u5927\u7684\u5185\u5b58\u7a7a\u95f4\uff1b\u8fd9\u4e00\u90e8\u5206\u662f\u5206\u533a\u5185\u90e8\u7684\u5185\u5b58\uff0c\u88ab\u5206\u914d\u4e86\u4f46\u662f\u6ca1\u6709\u88ab\u4f7f\u7528</li> </ul>"},{"location":"os/os/#9-virsual-memory","title":"9 Virsual Memory","text":""},{"location":"os/os/#background","title":"Background","text":"<ul> <li> <p>\u6bd4\u7269\u7406\u5185\u5b58\u5927</p> </li> <li> <p>\u8bf7\u6c42\u5f0f\u5206\u9875\u6280\u672f</p> </li> <li> <p>\u5c40\u90e8\u6027\u539f\u7406</p> </li> <li>\u65f6\u95f4\u5c40\u90e8\u6027</li> <li>\u7a7a\u95f4\u5c40\u90e8\u6027</li> </ul>"},{"location":"os/os/#copy-on-write","title":"Copy-on-Write","text":"<ul> <li> <p>\u5f53\u7236\u8fdb\u7a0b\u521b\u9020\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u7acb\u5373\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u3002</p> </li> <li> <p>\u76f8\u53cd\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u5171\u4eab\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\u9875\u9762\uff0c\u5e76\u6807\u8bb0\u8fd9\u4e9b\u9875\u9762\u4e3a\u53ea\u8bfb\u3002</p> </li> <li>\u5f53\u7236\u8fdb\u7a0b\u6216\u5b50\u8fdb\u7a0b\u4ec5\u8bfb\u53d6\u5171\u4eab\u9875\u9762\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u89e6\u53d1\u7f3a\u9875\u4e2d\u65ad\uff0c\u8bfb\u64cd\u4f5c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5171\u4eab\u9875\u9762\u7684\u5185\u5bb9\u3002</li> <li>\u65f6\u95f4\u4e0a\u548c\u7a7a\u95f4\u4e0a\u90fd\u7701</li> </ul>"},{"location":"os/os/#demand-paging","title":"Demand Paging","text":"<p>\u8bf7\u6c42\u5f0f\u5206\u9875\uff1a\u53ea\u6709\u5728\u7528\u5230\u7684\u65f6\u5019\u624d\u4f1aBring a page into memory</p> <p>\u65b9\u4fbf\uff1aLess I/O needed \uff0cLess memory needed \uff0cFaster response</p> <ul> <li>Valid-Invalid Bit \u6765\u8868\u793a\u5f53\u524dpage\u6709\u6ca1\u6709\u88abload\u5230\u5185\u5b58\u91cc\u9762</li> <li>v\u6ca1\u6709\uff0ci\u5df2\u7ecf</li> <li>\u5982\u679ci\u4f1a\u4ea7\u751f\u7f3a\u9875\u4e2d\u65ad</li> </ul> <p></p> <p></p>"},{"location":"os/os/#page-fault","title":"Page Fault","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u770b\u7f3a\u7684\u9875\u662f\u4e0d\u662f\u5408\u6cd5\u7684\uff0c\u4e0d\u662f\u7684\u8bddabort</p> <p>\u662f\u7684\u8bdd\uff1a</p> <ul> <li>Get empty frame</li> <li>Swap page into frame</li> <li>Reset tables</li> <li>Set validation bit = v</li> <li>Restart the instruction that caused the page fault</li> </ul>"},{"location":"os/os/#page-replacement","title":"Page Replacement","text":"<ul> <li>why page replacement</li> <li>\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9632\u6b62\u5185\u5b58\u8fc7\u5ea6\u5206\u914d</li> <li>\u53ea\u6709\u5bf9\u4fee\u6539\u8fc7\u7684page\u624d\u6709\u5fc5\u8981\u91cd\u65b0\u5199\u5165\u78c1\u76d8</li> <li>\u9875\u66ff\u6362\u5b8c\u6210\u4e86\u903b\u8f91\u5185\u5b58\u548c\u7269\u7406\u5185\u5b58\u7684\u5206\u79bb\u2014\u2014\u53ef\u4ee5\u5728\u8f83\u5c0f\u7684\u7269\u7406\u5185\u5b58\u4e0a\u63d0\u4f9b\u5927\u7684\u865a\u62df\u5185\u5b58</li> <li>basic page replacement   </li> <li>\u6ce8\u610f\u5199\u56de\u7684\u65f6\u5019\u8981\u5bf9frametable\u548cpagetable\u7684\u66f4\u65b0</li> </ul> <ul> <li>Algorithm</li> <li>\u76ee\u6807\uff1apagefault\u7684\u6b21\u6570\u5c3d\u53ef\u80fd\u5c0f</li> <li>\u901a\u8fc7\u5728\u7279\u5b9a\u7684\u5185\u5b58\u5f15\u7528\u5b57\u7b26\u4e32\u4e0a\u8fd0\u884c\u7b97\u6cd5\u5e76\u8ba1\u7b97\u8be5\u5b57\u7b26\u4e32\u4e0a\u7684\u9875\u9762\u9519\u8bef\u6570\u6765\u8bc4\u4f30\u7b97\u6cd5</li> <li>\u7269\u7406\u5185\u5b58\u7684\u5927\u5c0f\u548c\u7f3a\u9875\u6b21\u6570\u7684\u5173\u7cfb\uff1a\u53cd\u6bd4\u4f8b\uff0c\u5f53\u7269\u7406\u5185\u5b58\u65e0\u9650\u5927\u7f3a\u9875\u6b21\u6570\u4f1a\u8d8b\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u503c\uff08\u56e0\u4e3a\u524d\u9762\u51e0\u9875\u4e00\u5b9a\u662f\u4f1a\u7f3a\u9875\u7684\uff09 </li> </ul>"},{"location":"os/os/#page-replacement-algorithm","title":"Page replacement Algorithm","text":"<ul> <li> <p>FIFO Algorithm \u5148\u8fdb\u5148\u51fa</p> </li> <li> <p>\u5177\u4f53\u5b9e\u73b0</p> </li> </ul> <p></p> <ul> <li>Belady\u2019s Anomaly: more frames =&gt; more page faults (not exactly)</li> </ul> <p></p> <ul> <li>Optimal Algorithm\uff08\u6700\u4f73\u7f6e\u6362\u7b97\u6cd5\uff09</li> <li>\u66ff\u6362\u5728\u4e00\u6bb5\u65f6\u95f4\u91cc\u9762\u90fd\u4e0d\u4f1a\u518d\u4f7f\u7528\u7684page</li> <li>\u5982\u4f55\u77e5\u9053\uff1f</li> </ul> <p></p> <ul> <li> <p>LRU \u6700\u4e45\u672a\u4f7f\u7528\u7f6e\u6362\u7b97\u6cd5 least recently used</p> </li> <li> <p>\u9009\u62e9\u5185\u5b58\u4e2d\u6700\u4e45\u6ca1\u6709\u5f15\u7528\u7684\u9875\u9762\u88ab\u7f6e\u6362</p> </li> <li>\u6027\u80fd\u63a5\u8fd1\u6700\u4f73\u7b97\u6cd5\u3002\u4f46\u7531\u4e8e\u9700\u8981\u8bb0\u5f55\u9875\u9762\u4f7f\u7528\u65f6\u95f4\uff0c\u786c\u4ef6\u5f00\u9500\u592a\u5927\u3002</li> </ul> <p></p> <ul> <li>counter\u5b9e\u73b0<ul> <li>\u6bcf\u4e2apage entry\u90fd\u6709\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u6bcf\u6b21\u901a\u8fc7entry\u5f15\u7528page\u65f6\uff0c\u5c06clock\u6dfb\u52a0\u5230\u8ba1\u6570\u5668\u91cc\u9762</li> <li>\u5f53\u4e00\u4e2apage\u9700\u8981\u88ab\u4fee\u6539\uff0c\u67e5\u770b\u6240\u6709\u7684page\u8ba1\u6570\u5668\u6765\u505a\u9009\u62e9</li> </ul> </li> <li>stack\u5b9e\u73b0<ul> <li>\u8bbe\u7f6e\u4e00\u4e2a\u7279\u6b8a\u7684\u6808\uff0c\u628a\u88ab\u8bbf\u95ee\u7684\u9875\u9762\u79fb\u5230\u6808\u9876\uff0c\u4e8e\u662f\u6808\u5e95\u7684\u662f\u6700\u4e45\u672a\u4f7f\u7528\u9875\u9762</li> <li>keep a stack of page numbers in a double link form</li> </ul> </li> </ul> <p></p> <ul> <li> <p>register\u5b9e\u73b0</p> <ul> <li>\u4f7f\u7528\u79fb\u4f4d\u5bc4\u5b58\u5668\uff1a</li> <li>\u88ab\u8bbf\u95ee\u65f6\u5de6\u8fb9\u6700\u9ad8\u4f4d\u7f6e1\uff0c\u5b9a\u671f\u53f3\u79fb\u5e76\u4e14\u6700\u9ad8\u4f4d\u88650\uff0c\u4e8e\u662f\u5bc4\u5b58\u5668\u6570\u503c\u6700\u5c0f\u7684\u662f\u6700\u4e45\u672a\u4f7f\u7528\u9875\u9762</li> <li>Additional-Reference-Bits Algorithm \u9644\u52a0\u5f15\u7528\u4f4d\u7b97\u6cd5</li> </ul> </li> <li> <p>Second chance algorithm, clock algorithm</p> </li> <li> <p>\u4e0e LRU \u76f8\u4f3c</p> </li> <li> <p>\u6dfb\u52a0 reference bit \u5f15\u7528\u4f4d</p> <ul> <li>\u6bcf\u4e00\u4e2a page \u90fd\u8ddf\u4e00\u4e2a bit \u5173\u8054\uff0c\u521d\u59cb\u5316\u4e3a 0</li> <li>\u5f53\u8fd9\u4e2a page \u88ab\u5f15\u7528\u65f6\uff0c\u5f15\u7528\u4f4d\u6539\u4e3a 1</li> <li>\u8fdb\u884c page replacement \u7684\u65f6\u5019\u66ff\u6362\u5173\u8054\u4f4d\u4e3a 0 \u7684 page \uff08srds \u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e2a\u987a\u5e8f\uff09</li> </ul> </li> <li> <p>second chance</p> <ul> <li>\u5f15\u7528\u4f4d</li> <li>clock replacement</li> <li>\u5728\u65f6\u949f\u987a\u5e8f\u5185\uff0c\u5982\u679c\u4e00\u4e2a\u5f15\u7528\u4f4d\u4e3a 1 \u7684 page \u8981\u88ab replaced</li> <li>\u8bbe\u7f6e\u5f15\u7528\u4f4d\u4e3a 0</li> <li>\u628a page \u7559\u5728 memory\uff08\u6307\u8865\u6254\u6389\uff09</li> <li>\u6839\u636e\u76f8\u540c\u7684\u89c4\u5219\u66ff\u6362\u65f6\u949f\u987a\u5e8f\u91cc\u7684\u4e0b\u4e00\u4e2a page</li> </ul> </li> </ul> <p></p> <ul> <li> <p>Enhanced Second Chance Algorithm</p> </li> <li> <p>\u4f7f\u7528\u5f15\u7528\u4f4d\u548c\u4fee\u6539\u4f4d\uff1a\u5f15\u7528\u8fc7\u6216\u4fee\u6539\u8fc7\u8bbe\u7f6e\u4e3a 1</p> </li> <li> <p>\uff08\u5f15\u7528\u4f4d\uff0c\u4fee\u6539\u4f4d\uff09</p> <ul> <li>(0,0)\uff1a\u6700\u4f73\u88abreplace\u7684\u4f4d\u7f6e</li> <li>(0,1)\uff1a\u7528\u6765replace\u4e0d\u662f\u5f88\u597d</li> <li>(1,0)\uff1a\u5f88\u5feb\u5c31\u4f1a\u88ab\u4f7f\u7528</li> <li>(1,1):\u6700\u4e0d\u5408\u9002\u505a\u6765replace\u7684page</li> </ul> </li> <li> <p>\u6dd8\u6c70\u987a\u5e8f\uff1a(0,0)&gt;(0,1)&gt;(1,0)&gt;(1,1)</p> </li> <li> <p>Basic idea</p> <p></p> </li> <li> <p>Counting-Based Algorithms</p> </li> <li> <p>\u5bf9\u6bcf\u4e00\u9875\u7684\u5f15\u7528\u6b21\u6570\u8bbe\u7f6e\u4e00\u4e2a counter</p> </li> <li>LFU Algorithm \u6700\u4e0d\u9891\u7e41\u4f7f\u7528\u7b97\u6cd5\uff1a\u6bcf\u6b21 replace \u6700\u5c0f count \u7684 page</li> <li> <p>MFU Algorithm \u6700\u9891\u7e41\u4f7f\u7528\u7b97\u6cd5\uff1a\u57fa\u4e8e \u6700\u5c0fcount\u53ef\u80fd\u662f\u56e0\u4e3a\u521a\u8fdb\u5165\u8fd8\u6ca1\u6709\u88ab\u4f7f\u7528 \u7684 argument</p> </li> <li> <p>Page Buffering Algorithm \u9875\u9762\u7f13\u51b2\u7b97\u6cd5</p> </li> <li> <p>\u901a\u8fc7\u88ab\u7f6e\u6362\u9875\u9762\u7684\u7f13\u51b2\uff0c\u6709\u673a\u4f1a\u627e\u56de\u521a\u88ab\u7f6e\u6362\u7684\u9875\u9762</p> </li> <li>\u88ab\u7f6e\u6362\u9875\u9762\u7684\u9009\u62e9\u548c\u5904\u7406<ul> <li>\u7528 fifo \u7b97\u6cd5\u6765\u9009\u62e9\u88ab\u7f6e\u6362\u9875\uff0c\u628a\u88ab\u7f6e\u6362\u9875\u653e\u5165\u4e24\u4e2a\u94fe\u8868\u4e4b\u4e00\uff1a</li> <li>\u9875\u9762\u672a\u88ab\u4fee\u6539\uff1a\u7a7a\u95f2\u94fe\u8868\u7684\u5c3e\u90e8</li> <li>\u88ab\u4fee\u6539\uff1a\u5df2\u4fee\u6539\u9875\u9762\u94fe\u8868</li> </ul> </li> <li>\u9700\u8981\u8c03\u5165\u65b0\u9875\u9762<ul> <li>\u5c06 \u65b0\u9875\u9762\u5185\u5bb9\u8bfb\u5165\u5230\u7a7a\u95f2\u9875\u9762\u94fe\u8868\u7684\u7b2c\u4e00\u9879\u6240\u6307\u7684\u9875\u9762\uff0c\u5220\u9664\u7b2c\u4e00\u9879</li> </ul> </li> <li>\u7a7a\u95f2\u9875\u9762\u548c\u5df2\u4fee\u6539\u9875\u9762\u4f1a\u5728\u5185\u5b58\u5145\u505c\u7559\u4e00\u6bb5\u65f6\u95f4\uff0c\u5982\u679c\u88ab\u518d\u6b21\u8bbf\u95ee\uff0c\u8fd9\u4e9b\u9875\u9762\u8fd8\u5728\u5185\u5b58\u4e2d</li> <li>\u5f53\u5df2\u4fee\u6539\u9875\u9762\u8fbe\u5230\u4e00\u5b9a\u6570\u76ee\u540e\uff0c\u518d\u5c06\u4ed6\u4eec\u4e00\u8d77\u8c03\u51fa\u5230\u5916\u5b58\uff0c\u5f52\u5165\u5230\u5df2\u4fee\u6539\u9875\u9762\u94fe\u8868</li> </ul>"},{"location":"os/os/#allocation-of-frames","title":"Allocation of Frames","text":"<ul> <li> <p>why</p> </li> <li> <p>\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u9700\u8981\u4e00\u4e2a mininum number of page\uff08\u5177\u4f53\u7531\u8ba1\u7b97\u673a\u67b6\u6784\u51b3\u5b9a</p> </li> <li> <p>\u5373\u4e00\u4e2a\u6307\u4ee4\u4f1a\u5bfc\u81f4\u56fa\u5b9a\u6570\u91cf\u7684\u7f3a\u9875</p> </li> <li> <p>\u6846\u67b6 1\uff1aFixed Allocation</p> </li> <li> <p>equal allocation\uff1a\u5b57\u9762\u610f\u601d\u5e73\u5747\u5206\u914d</p> </li> <li>Proportional Allocation\uff1a\u6839\u636e\u8fdb\u7a0b\u7684\u5927\u5c0f\u5206\u522b\u5206\u914d</li> </ul> <p></p> <ul> <li> <p>\u6846\u67b6 2\uff1aPriority Allocation</p> </li> <li> <p>\u4f7f\u7528\u4f18\u5148\u7ea7\u4ee3\u66ff\u8fdb\u7a0b\u7684 size</p> </li> <li> <p>\u5f53 \u8fdb\u7a0b Pi \u4ea7\u751f\u4e86\u7f3a\u9875</p> <ul> <li>\u5bfb\u627e\u5bf9\u4ed6\u7684\u5176\u4e2d\u4e00\u4e2a frame \u7684 replacement</li> <li>\u4ece\u4f18\u5148\u7ea7\u6bd4\u4ed6\u66f4\u4f4e\u7684\u8fdb\u7a0b\u4e2d\u5bfb\u627e\u4e00\u4e2a frame</li> </ul> </li> <li> <p>global VS. local Allocation</p> </li> <li> <p>global</p> <ul> <li>\u8fdb\u7a0b\u53ef\u4ee5\u4ece\u6240\u6709 frames \u7684set\u91cc\u9762\u53bb\u5bfb\u627e\u81ea\u5df1 frame \u7684 replacement</li> <li>\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u4ece\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u90a3\u91cc\u62ff frame</li> </ul> </li> <li>local<ul> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u53ea\u80fd\u4ece\u81ea\u5df1\u6240\u6709\u7684 frame \u7684set\u91cc\u9762\u6311\u9009</li> </ul> </li> <li>global \u7684\u95ee\u9898\uff1a\u4e0d\u80fd\u9884\u6d4b\u7684\u7f3a\u9875\u7387\uff0cmore common</li> <li>local \u7684\u95ee\u9898\uff1a\u7a7a\u95f2\u7684 frame \u4e0d\u53ef\u4ee5\u88ab\u5176\u4ed6\u8fdb\u7a0b\u4f7f\u7528\uff0c\u4f4e\u4ea7\u51fa\u7387</li> </ul>"},{"location":"os/os/#thrashing","title":"Thrashing \u6296\u52a8","text":"<ul> <li>why</li> <li>\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u6ca1\u6709\u8db3\u591f\u7684 page\uff0c\u7f3a\u9875\u7387\u5c31\u4f1a\u5f88\u9ad8</li> <li>\u4f1a\u5bfc\u81f4\u4f4e CPU \u4f7f\u7528\u7387</li> </ul>"},{"location":"os/os/#operating-system-examples","title":"Operating-System Examples","text":"<ul> <li>Page-Fault Frequency Scheme</li> <li> <p>\u5bf9\u5360\u7528frame\u8fc7\u591a\u7684\u8fdb\u7a0b\u7684frame\u91ca\u653e\u7ed9\u5360\u7528frame\u5c11\u7684</p> </li> <li> <p>\u63a7\u5236pagefault\u7387\u5728\u4e00\u4e2a\u8303\u56f4\u5185</p> </li> </ul>"},{"location":"os/os/#memory-mapped-files","title":"Memory-Mapped Files \u5185\u5b58\u6620\u5c04\u6587\u4ef6","text":"<ul> <li>\u7cfb\u7edf\u8c03\u7528 mmap, unmap</li> <li>\u5b9e\u73b0\u8fdb\u7a0b\u5171\u4eab\u6587\u4ef6</li> <li>\u52a0\u5feb\u5bf9\u6587\u4ef6\u7684\u8bbf\u95ee     </li> </ul>"},{"location":"os/os/#allocating-kernel-memory","title":"Allocating Kernel Memory","text":"<ul> <li>Buddy System \u4f19\u4f34\u7cfb\u7edf</li> <li>2 \u7684 n \u6b21   </li> <li>slab allocator</li> <li>\u5bf9\u6240\u6709\u8fd9\u79cd\u7ed3\u6784\u6765\u8fdb\u884c\u5206\u914d</li> <li>\u662f\u4e00\u4e2a\u9884\u5206\u914d\u7684\u5185\u5b58\u6c60\uff0c\u5305\u542b\u591a\u4e2a\u76f8\u540c\u5927\u5c0f\u7684\u5bf9\u8c61</li> <li>\u4e00\u4e2acache\u6709\u591a\u4e2aslab   </li> </ul>"},{"location":"os/os/#other-issues","title":"other issues","text":"<ul> <li>prepaging \u9884\u8c03\u9875</li> <li>\u5728\u5f15\u7528\u8fdb\u7a0b\u4e4b\u524d\u9884\u5148\u51c6\u5907\u8fdb\u7a0b\u6240\u9700\u7684\u5168\u90e8\u6216\u90e8\u5206\u9875\u9762</li> <li>page size</li> <li>Fragmentation -&gt; small page size</li> <li>table size -&gt; large page size</li> <li>I/O times -&gt; large page size</li> <li>Locality -&gt; small page size, accurate locality</li> <li>TLB Reach tlb\u8303\u56f4</li> <li>\u6307 \u5185\u5b58\u53ef\u4ee5\u8bbf\u95ee\u5230\u7684tlb\u6570\u91cf</li> <li>TLB Reach = (TLB Size) X (Page Size)</li> <li>Program Structure</li> <li>\u7a0b\u5e8f\u672c\u8eab\u4f1a\u5f71\u54cd\u5230pagefault</li> <li>\u5728 Each row is stored in one page \u7684\u60c5\u51b5\u4e0b   </li> <li>I/O interlock (I/O \u9501\u5b9a)</li> <li>\u5f53page\u5728\u8fdb\u884cio\u64cd\u4f5c\u7684\u65f6\u5019\u4e0d\u80fd\u88ab\u9009\u62e9\u505areplacement</li> </ul>"},{"location":"os/os/#10-file-system-interface","title":"10 File System Interface","text":""},{"location":"os/os/#file-concept","title":"File Concept","text":"<ul> <li>\u5728\u5b58\u50a8\u4ecb\u8d28\u91cc\u89c4\u5b9a\u5982\u4f55\u5b58\u50a8\u548c\u83b7\u53d6\u6570\u636e\u7684\u65b9\u6cd5</li> <li>File naming\u3001Where files are placed \u3001Metadata\u3001Access rules</li> <li> <p>\u8fde\u7eed\u7684\u5730\u5740\u7a7a\u95f4</p> </li> <li> <p>file attributes</p> </li> <li>name\uff0cidentifier\uff0ctype\uff0clocation\uff0csize\uff0c protection</li> <li> <p>kept in the directory structure</p> </li> <li> <p>open-file table</p> </li> <li> <p>open() system call returns a pointer to an entry in the open-file table</p> </li> <li> <p>per-process table \u9488\u5bf9\u6bcf\u4e2aprocess</p> </li> <li> <p>system-wide table \u5168\u5c40\u7684\u8868\u683c</p> </li> <li> <p>open file</p> </li> <li> <p>\u6587\u4ef6\u6307\u9488\uff0c\u653e\u5728per-process</p> </li> <li>\u6587\u4ef6\u6253\u5f00\u8ba1\u6570\u5668\uff0c\u653e\u5728 system-wide\uff0c\u6587\u4ef6\u6253\u5f00\u7684\u518c\u6570\uff0c\u6765\u5141\u8bb8\u5728\u6700\u540e\u4e00\u4e2a\u8fdb\u7a0b\u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\u8868\u65f6\u4ece\u8be5\u8868\u4e2d\u5220\u9664\u6570\u636e</li> <li>\u5b9e\u9645\u5728\u78c1\u76d8\u7684\u4f4d\u7f6e</li> <li> <p>access rights</p> </li> <li> <p>open file locking</p> </li> <li>\u5f3a\u5236\u9501 mandatory</li> <li>\u5efa\u8bae\u9501 advisory  </li> </ul>"},{"location":"os/os/#access-methods","title":"Access Methods","text":"<ul> <li>sequential access</li> </ul> <pre><code>read next\nwrite next\nreset\nno read after last write (rewrite)\n</code></pre> <ul> <li>direct(random) access</li> </ul> <pre><code>read n\nwrite n\nposition to n\n    read next\n    write next\nrewrite n\n(n = relative block number)\n</code></pre>"},{"location":"os/os/#directory-structure","title":"Directory Structure","text":"<p>directory: a symbol table </p> <p></p> <p>directory structure \u548c files \u90fd\u653e\u5728\u78c1\u76d8\u4e0a</p>"},{"location":"os/os/#a-typical-file-system-organization","title":"A Typical File-system Organization","text":"<p>\u7269\u7406\u4e0a\u6982\u5ff5\u53ebdisk \u903b\u8f91\u4e0a\u5377volume\uff0cpartiton\u5bf9\u5e94\u4e00\u4e2avolume</p> <p></p> <p>\u8be5\u76ee\u5f55\u8bb0\u5f55\u6709\u5173\u7cfb\u7edf\u4e2d\u6587\u4ef6\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u540d\u79f0\u3001\u4f4d\u7f6e\u3001\u5927\u5c0f\u548c\u7c7b\u578b\u3002</p>"},{"location":"os/os/#operations-performed-on-directory","title":"Operations Performed on Directory","text":"<ul> <li>search: find /path/to/search -name filename</li> <li>create: touch filename</li> <li>delete: rm filename</li> <li>list: ls /path/to/directory</li> <li>rename: mv oldname newname</li> <li>Traverse the file system \u2013 access every dir and file for backing up.</li> <li>find /path/to/backup -print0 | tar-czvf backup.tar.gz --files-from=-</li> </ul>"},{"location":"os/os/#single-level-directory","title":"Single-Level Directory","text":"<p>A single directory for all users</p> <p></p> <p>problem: naming, grouping</p>"},{"location":"os/os/#two-level-directory","title":"Two-Level Directory","text":"<p>\u4e3a\u6bcf\u4e2a user \u5206\u5f00\u76ee\u5f55</p> <p></p>"},{"location":"os/os/#tree-structured-directories","title":"Tree-Structured Directories","text":"<p>Each directory entry contains a bit defining the entry as file(0) or directory(1).</p> <p></p> <p>\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84</p>"},{"location":"os/os/#acyclic-graph-directories","title":"Acyclic-Graph Directories","text":"<p>\u4e5f\u53ef\u4ee5\u53eb aliasing\uff0c\u9632\u6b62cycle</p> <p>\u6587\u4ef6\u5171\u4eab\u7684\u9700\u6c42\uff0c\u6709\u5171\u4eab\u5b50\u76ee\u5f55\u548c\u6587\u4ef6</p> <p></p>"},{"location":"os/os/#soft-symbolic-link-vs-hard-link","title":"Soft (Symbolic) Link vs. Hard Link","text":"<ul> <li>soft link</li> <li>a separate file\uff0c\u901a\u8fc7\u5b83\u7684path\u6307\u5411\u5b83</li> <li>\u6709\u81ea\u5df1\u7684 inode(FCB)\uff0c\u5b83\u7684\u6570\u636e\u5c31\u662f path</li> <li>span file systems</li> <li>hard links</li> <li>an additional name for an existing file</li> <li>hard link \u548c original file \u90fd\u6307\u5411\u540c\u4e00\u4e2a inode\uff08FCB)</li> <li>\u4e0d\u80fd\u963b\u6b62 cycle</li> </ul>"},{"location":"os/os/#file-system-mounting","title":"File-System Mounting","text":""},{"location":"os/os/#file-sharing","title":"File Sharing","text":""},{"location":"os/os/#protection","title":"Protection","text":""},{"location":"os/os/#11-file-system-implementation","title":"11 File System Implementation","text":""},{"location":"os/os/#file-system-structure","title":"File-System Structure","text":"<p>layers</p> <p></p>"},{"location":"os/os/#file-system-implementation","title":"File-System Implementation","text":""},{"location":"os/os/#virtual-file-system-vfs","title":"Virtual File System (VFS)","text":""},{"location":"os/os/#directory-implementation","title":"Directory Implementation","text":""},{"location":"os/os/#allocation-methods","title":"Allocation Methods","text":""},{"location":"os/os/#free-space-management","title":"Free-Space Management","text":""},{"location":"os/os/#efficiency-and-performance","title":"Efficiency and Performance","text":""},{"location":"os/ppt%E4%B9%A0%E9%A2%98/","title":"PPT \u4e60\u9898","text":""},{"location":"os/ppt%E4%B9%A0%E9%A2%98/#ch5","title":"CH5","text":""},{"location":"os/ppt%E4%B9%A0%E9%A2%98/#1","title":"1","text":""},{"location":"os/ppt%E4%B9%A0%E9%A2%98/#2","title":"2","text":"<p>(1) \u82e5\u8c03\u5ea6\u7a0b\u5e8f\u53ea\u5c06nice\u7684\u503c\u4f5c\u4e3a\u8fdb\u7a0b\u7684\u4f18\u5148\u6570\uff0c\u5373priority=nice\uff0c\u5219\u53ef\u80fd\u4f1a\u51fa\u73b0\u9965\u997f\u73b0\u8c61\uff0c\u4e3a\u4ec0\u4e48\uff1f</p> <p>\u5728\u4ec5\u4f7f\u7528<code>nice</code>\u503c\u4f5c\u4e3a\u4f18\u5148\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u4f18\u5148\u6570\u8f83\u5927\u7684\u8fdb\u7a0b\uff08\u5373<code>nice</code>\u503c\u8f83\u9ad8\u7684\u8fdb\u7a0b\uff09\u5c06\u4f1a\u6709\u8f83\u4f4e\u7684\u8c03\u5ea6\u4f18\u5148\u7ea7\uff0c\u8fdb\u800c\u53ef\u80fd\u957f\u671f\u65e0\u6cd5\u88ab\u8c03\u5ea6\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f18\u5148\u6570\u8f83\u5c0f\u7684\u8fdb\u7a0b\uff08\u5373<code>nice</code>\u503c\u8f83\u4f4e\u7684\u8fdb\u7a0b\uff09\u4f1a\u9891\u7e41\u88ab\u8c03\u5ea6\uff0c\u800c\u4f18\u5148\u6570\u8f83\u5927\u7684\u8fdb\u7a0b\u53ef\u80fd\u59cb\u7ec8\u65e0\u6cd5\u83b7\u5f97\u6267\u884c\u673a\u4f1a\uff0c\u5bfc\u81f4\u8fd9\u4e9b\u8fdb\u7a0b\u4e00\u76f4\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u3002\u8fd9\u79cd\u73b0\u8c61\u5c31\u662f\u6240\u8c13\u7684\u9965\u997f\u73b0\u8c61\uff0c\u5373\u67d0\u4e9b\u8fdb\u7a0b\u7531\u4e8e\u8c03\u5ea6\u4f18\u5148\u7ea7\u4f4e\u800c\u957f\u671f\u65e0\u6cd5\u83b7\u5f97\u8fd0\u884c\u673a\u4f1a\u3002</p> <p>(2) \u4f7f\u7528nice\u3001cpuTime\u548cwaitTime\u8bbe\u8ba1\u4e00\u79cd\u52a8\u6001\u4f18\u5148\u6570\u8ba1\u7b97\u65b9\u6cd5\uff0c\u4ee5\u907f\u514d\u4ea7\u751f\u9965\u997f\u73b0\u8c61\uff0c\u5e76\u8bf4\u660ewaitTime\u7684\u4f5c\u7528\u3002</p> <p>\u4e3a\u4e86\u907f\u514d\u9965\u997f\u73b0\u8c61\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u79cd\u52a8\u6001\u4f18\u5148\u6570\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5c06<code>cpuTime</code>\u548c<code>waitTime</code>\u5f15\u5165\u5230\u4f18\u5148\u6570\u8ba1\u7b97\u4e2d\u3002\u4e00\u4e2a\u5408\u7406\u7684\u52a8\u6001\u4f18\u5148\u6570\u8ba1\u7b97\u65b9\u6cd5\u53ef\u4ee5\u662f\uff1a</p> <p>\\(priority=nice+\u03b1\u00d7cpuTime\u2212\u03b2\u00d7waitTime\\text{priority} = \\text{nice} + \\alpha \\times \\text{cpuTime} - \\beta \\times \\text{waitTime}priority=nice+\u03b1\u00d7cpuTime\u2212\u03b2\u00d7waitTime\\)</p> <p>\u5176\u4e2d\uff1a</p> <ul> <li><code>nice</code>\uff1a\u8fdb\u7a0b\u521b\u5efa\u65f6\u6307\u5b9a\u7684\u9759\u6001\u4f18\u5148\u6570\uff0c\u8868\u793a\u8fdb\u7a0b\u7684\u57fa\u672c\u4f18\u5148\u7ea7\u3002</li> <li><code>cpuTime</code>\uff1a\u8fdb\u7a0b\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u8868\u793a\u8fdb\u7a0b\u5df2\u7ecf\u6d88\u8017\u7684CPU\u65f6\u95f4\uff0c\u53ef\u4ee5\u9632\u6b62\u67d0\u4e2a\u8fdb\u7a0b\u957f\u671f\u5360\u7528CPU\u8d44\u6e90\u3002<code>cpuTime</code>\u503c\u8d8a\u5927\uff0c\u610f\u5473\u7740\u8be5\u8fdb\u7a0b\u5df2\u7ecf\u6267\u884c\u8f83\u957f\u65f6\u95f4\uff0c\u4f18\u5148\u7ea7\u5e94\u8be5\u9010\u6e10\u964d\u4f4e\uff0c\u4ece\u800c\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u63d0\u4f9b\u66f4\u591a\u7684\u8c03\u5ea6\u673a\u4f1a\u3002</li> <li><code>waitTime</code>\uff1a\u8fdb\u7a0b\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u8868\u793a\u8be5\u8fdb\u7a0b\u81ea\u4e0a\u6b21\u88ab\u8c03\u5ea6\u4ee5\u6765\u7b49\u5f85\u4e86\u591a\u957f\u65f6\u95f4\u3002<code>waitTime</code>\u503c\u8d8a\u5927\uff0c\u8868\u793a\u8be5\u8fdb\u7a0b\u957f\u671f\u6ca1\u6709\u88ab\u8c03\u5ea6\uff0c\u4f18\u5148\u7ea7\u5e94\u8be5\u63d0\u5347\uff0c\u4ee5\u786e\u4fdd\u8be5\u8fdb\u7a0b\u4e0d\u957f\u671f\u5904\u4e8e\u9965\u997f\u72b6\u6001\u3002</li> </ul> <p>waitTime\u7684\u4f5c\u7528\u5728\u4e8e\uff1a\u901a\u8fc7\u589e\u52a0\u7b49\u5f85\u65f6\u95f4\u6765\u63d0\u5347\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u786e\u4fdd\u90a3\u4e9b\u957f\u671f\u7b49\u5f85\u7684\u8fdb\u7a0b\u80fd\u591f\u5728\u4e00\u5b9a\u65f6\u95f4\u540e\u5f97\u5230\u8c03\u5ea6\uff0c\u907f\u514d\u9965\u997f\u73b0\u8c61\u3002\u968f\u7740<code>waitTime</code>\u7684\u589e\u52a0\uff0c\u4f18\u5148\u6570\u9010\u6e10\u53d8\u5c0f\uff0c\u4ece\u800c\u589e\u52a0\u8be5\u8fdb\u7a0b\u88ab\u9009\u4e2d\u7684\u53ef\u80fd\u6027\u3002</p> <ul> <li><code>\\alpha</code> \u548c <code>\\beta</code> \u662f\u4e24\u4e2a\u5e38\u6570\uff0c\u7528\u4e8e\u8c03\u8282 <code>cpuTime</code> \u548c <code>waitTime</code> \u5bf9\u4f18\u5148\u6570\u7684\u5f71\u54cd\u7a0b\u5ea6\u3002\u901a\u5e38\uff0c\u8bbe\u7f6e<code>\u03b2</code>\u8f83\u5927\u4ee5\u786e\u4fdd\u7b49\u5f85\u65f6\u95f4\u8f83\u957f\u7684\u8fdb\u7a0b\u80fd\u591f\u4f18\u5148\u88ab\u8c03\u5ea6\u3002</li> </ul> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u53ef\u4ee5\u517c\u987e<code>nice</code>\u503c\u6240\u53cd\u6620\u7684\u8fdb\u7a0b\u7684\u91cd\u8981\u6027\u548c<code>cpuTime</code>\u3001<code>waitTime</code>\u6240\u53cd\u6620\u7684\u52a8\u6001\u56e0\u7d20\uff0c\u4ece\u800c\u6709\u6548\u907f\u514d\u9965\u997f\u73b0\u8c61\u3002</p>"},{"location":"py/class/","title":"Class.py","text":"<p>py \u771f\u7684\u662f\u4e00\u79cd\u5f88\u795e\u5947\u7684\u8bed\u8a00\u3002\u3002\u3002\u6211\u89c9\u5f97\u5b83\u771f\u7684\u5206\u4e0d\u4e86\u70b9 TT\uff0c\u4e0d\u8fc7\u4e5f\u6709\u53ef\u80fd\u662f\u8001\u5e08\u7684 PPT \u505a\u5f97\u592a\u61d2\u4e86</p>"},{"location":"py/class/#1-to-start-with","title":"1 to start with","text":""},{"location":"py/class/#11","title":"1.1 \u91cf","text":""},{"location":"py/class/#111","title":"1.1.1 \u5173\u952e\u5b57","text":"<ul> <li>Python \u533a\u5206\u5927\u5c0f\u5199\u3002True not true</li> <li>raise\uff0cis\uff0cas\uff0cexpect\uff0clambda\uff0cwith\uff0cassert\uff0cfinally\uff0cnonlocal\uff0cvield\uff0cclass\uff0cfrom\uff0cglobal\uff0cpass</li> </ul>"},{"location":"py/class/#112-id","title":"1.1.2 id \u51fd\u6570","text":"<p>python\u4f60\u771f\u4f1a\u8bf4\u3002\u3002\u3002\u3002\u8fd9\u5c31\u662f\u5730\u5740</p> <ul> <li>\u8d4b\u503c\u64cd\u4f5c\u4e0d\u6539\u53d8\u5b9e\u9645\u8d4b\u503c\u503c\uff0c\u53ea\u662f\u4e3a\u6570\u636e\u5bf9\u8c61\u53bb\u4e00\u4e2a\u76f8\u5173\u7684\u540d\u5b57\u3002\u540d\u5b57\u662f\u5bf9\u8c61\u7684\u5f15\u7528\u3002</li> <li>id \u51fd\u6570\u8fd4\u56de\u5bf9\u8c61\u7684\u6807\u8bc6\uff08\u4e00\u822c\u662f\u5bf9\u8c61\u7684\u5730\u5740\uff09</li> </ul> <p><pre><code>print(id(a))\na=7\nprint(id(7))\n</code></pre> <pre><code>1566532000\n1566532000\n</code></pre></p> <p><pre><code>a=5\nprint(a)\nprint(id(a))\nprint(id(5))\nprint(id(7))\n</code></pre> <pre><code>5\n1566531936\n1566532000\n</code></pre></p>"},{"location":"py/class/#12-io","title":"1.2 IO","text":""},{"location":"py/class/#121-input","title":"1.2.1 input","text":"<ul> <li><code>input()</code> \u8bfb\u53d6\u5230 str \u7c7b\u578b</li> <li>\u4f7f\u7528 <code>int(input())</code> \u53ef\u4ee5\u8bfb\u53d6\u5230 int \u7c7b\u578b</li> <li>\u4f7f\u7528 <code>input.split()</code> \u53ef\u4ee5\u8bfb\u53d6\u5230\u4e00\u8fde\u4e32\u7684 str \u7c7b\u578b\uff0c\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\u5c31\u7528\u7a7a\u683c\u9694\u5f00\u6765\u8f93\u5165</li> <li>\u4f7f\u7528 <code>input.split(',')</code> \u53ef\u4ee5\u63a7\u5236\u8f93\u5165\u683c\u5f0f\u4e2d\u4f7f\u7528 <code>,</code> \u6765\u5206\u9694\u8f93\u5165</li> <li>\u4f7f\u7528 <code>input(\"\u8bf7\u8f93\u5165\uff1a\").split()</code> \u53ef\u4ee5\u5728\u8f93\u5165\u524d\u6dfb\u4e0a\u4e00\u884c\u8f93\u5165\u6307\u793a</li> </ul>"},{"location":"py/class/#122-print","title":"1.2.2 print","text":"<ul> <li><code>print(3,7,...)</code> \u53ef\u4ee5\u901a\u8fc7\u52a0\u9017\u53f7\u4e00\u6b21\u8f93\u51fa\u5f88\u591a\u4e2a\u6570\u5b57\uff0c\u9ed8\u8ba4\u8f93\u51fa\u4e2d\u95f4\u5e26\u7a7a\u683c\u4e14\u672b\u5c3e\u5e26\u6362\u884c</li> <li><code>print(a,b,...)</code> \u53ef\u4ee5\u8f93\u51fa\u53d8\u91cf\u7684\u503c</li> <li>\u4f7f\u7528 end \u53c2\u6570\u63a7\u5236\u8f93\u51fa\u683c\u5f0f\uff0c<code>print(3,end=' ')</code></li> </ul>"},{"location":"py/class/#13","title":"1.3","text":"<p>\u5947\u602a\u7684\u753b\u56fe\u554a\uff1f\uff1f\uff1f\uff1f</p> <p>\uff08\u6211\u4e0d\u4ec5\u6ca1\u5b66turtle\u5e93\u4e5f\u6ca1\u8f7d\uff0c\uff0c\uff0c\uff0c\uff09</p> <pre><code>import turtle\nturtle.forward(200)\nturtle.right(144)\nturtle.forward(200)\nturtle.right(144)\nturtle.forward(200)\nturtle.right(144)\nturtle.forward(200)\nturtle.right(144)\nturtle.forward(200)\nturtle.done()\n</code></pre>"},{"location":"py/class/#14-calculation","title":"1.4 calculation","text":""},{"location":"py/class/#141-data","title":"1.4.1 data","text":"<ul> <li>py \u5141\u8bb8\u7684\u6570\u636e\u7c7b\u578b\uff1a\u6574\u6570\uff0c\u6d6e\u70b9\u6570\uff0c\u590d\u6570</li> <li>\u6574\u6570\u7684\u8868\u793a\u65b9\u5f0f</li> <li>\u8fd0\u7b97\u7b26</li> <li><code>/</code> \u8868\u793a\u6d6e\u70b9\u6570\u9664\u6cd5\uff0c<code>//</code> \u8868\u793a\u6574\u6570\u9664\u6cd5\uff0c<code>//</code> \u8ba1\u7b97\u540e\u7684\u7ed3\u679c\u7684type\uff0c\u5982\u679c\u524d\u9762\u4e24\u4e2a\u6570\u4e2d\u6709\u4e00\u4e2a\u6570float\uff0c\u90a3\u4e48\u6700\u540e\u7ed3\u679c\u4e5ffloat\uff0c\u4f46\u662f\u6309\u7167\u6574\u9664\u6765\u7b97\uff0c\u8ddf\u4e0a .0\u3002</li> <li><code>**</code> \u8868\u793a\u5e42</li> <li>\u6d6e\u70b9\u6570\u7684\u8868\u793a\u65b9\u5f0f</li> <li>\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0c1.2e-5\uff0ce\u540e\u9762\u7684\u503c\u5c31\u662f\u5e42\u6b21\u65b9\uff0c\u5fc5\u987b\u4e3a\u6574\u6570\uff0ce\u524d\u540e\u4e0d\u80fd\u4e3a\u7a7a</li> <li>\u6d6e\u70b9\u6570\u8ba1\u7b97\u6709\u8bef\u5dee\uff0c\u5982 <code>2.1-2.0==0.1</code> False</li> <li>\u6d6e\u70b9\u6570\u7684\u6574\u9664\u8fd8\u662f\u6d6e\u70b9\u6570\uff0c\u53d6\u4f59\u4e5f\u662f\u6d6e\u70b9\u6570</li> <li>\u590d\u6570\uff1areal \u548c imaginary</li> <li>\u4f7f\u7528 <code>complex()</code> \u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u503c\u4e3a <code>real + imag * J</code> \u7684\u590d\u6570</li> <li><code>round()</code> \u51fd\u6570\u8868\u793a\u56db\u820d\u4e94\u5165</li> <li>\u51fd\u6570\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff1a\u56db\u820d\u4e94\u5165</li> <li>\u6709\u4e24\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u9650\u5236\u5c0f\u6570\u70b9\u4f4d\u6570\u3002<code>round(10.678,2)</code> \u4e3a 10.67\uff0c<code>round(12345,-2)</code> \u4e3a 12300</li> <li>\u4f4d\u8fd0\u7b97\u8981\u4f7f\u7528\u8865\u7801\uff0c\u4f7f\u7528\u7b26\u53f7\u6269\u5c55\u6269\u5c55\u81f332\u4f4d\uff0c\u6ce8\u610f\u8d1f\u6570\u3002</li> </ul>"},{"location":"py/class/#142-string","title":"1.4.2 string","text":"<ul> <li>\u8f6c\u4e49\u5b57\u7b26</li> <li><code>\\n</code> \u6362\u884c\uff0c<code>\\t</code> \u5236\u8868</li> <li><code>\\ooo</code> \u6700\u591a\u4e09\u4f4d\u516b\u8fdb\u5236\uff0c<code>\\xyy</code> \u6700\u591a\u4e24\u4f4d\u5341\u516d\u8fdb\u5236</li> <li> <p><code>\\\\</code> \u8868\u793a <code>\\</code>, <code>\\\"</code> \u8868\u793a <code>\"</code></p> </li> <li> <p>\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26\u6709 <code>+</code> \u548c <code>*</code>\u3002\uff08\u975e\u5e38\u597d\u8bb0\u5b57\u9762\u7406\u89e3</p> </li> <li><code>type()</code> \u8c03\u7528\u51fd\u6570\u7528\u6765\u67e5\u8be2\u5bf9\u8c61\u7684\u7684\u7c7b\u578b\u4fe1\u606f\u3002<code>type(1)</code> \u8fd4\u56de <code>&lt;class 'int'&gt;</code>, <code>type(\"py\")</code> \u8fd4\u56de <code>&lt;class 'str'&gt;</code></li> <li>None\uff08\u6ce8\u610f\u5927\u5c0f\u5199</li> <li>None \u4e0d\u662f 0</li> <li><code>bool(None)</code> False, <code>None == 0</code> False</li> </ul>"},{"location":"py/class/#143-graph","title":"1.4.3 Graph","text":"<ul> <li>\u5217\u8868</li> <li><code>empty_list = []</code> \u7a7a\u5217\u8868</li> <li><code>weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thurseday', 'Friday']</code> \u6ce8\u610f\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff0cweekday[2] \u662f Wednesday</li> <li>\u5217\u8868\u8ba1\u7b97</li> <li>\u5217\u8868\u5927\u5c0f\u6bd4\u8f83\u4e0e\u5b57\u7b26\u4e32\u540c\u7406</li> <li>\u5217\u8868\u4e5f\u53ef\u4ee5\u52a0\u6cd5\uff0c\u4e0e\u5b57\u7b26\u4e32\u540c\u7406</li> <li>\u5217\u8868\u53ef\u4ee5\u4e58\u6cd5\u521d\u59cb\u5316\uff0c\u4e0e\u5b57\u7b26\u4e32\u540c\u7406</li> </ul>"},{"location":"py/class/#144","title":"1.4.4 \u5185\u7f6e\u8f6c\u6362\u51fd\u6570","text":"\u51fd\u6570\u540d \u542b\u4e49 \u4e3e\u4f8b \u8fd4\u56de\u503c bool \u6839\u636e\u4f20\u5165\u53c2\u6570\u521b\u5efa\u5e03\u5c14\u503c <code>bool('str')</code> True int \u00b7\u00b7\u00b7\u6574\u6570 <code>int(3.6)</code> 3 float <code>float(3)</code> 3.0 complex <code>complex(1, 2)</code> (1+2j) str \u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>str(123)</code> '123' ord \u8fd4\u56de Unicode \u5b57\u7b26\u5bf9\u5e94\u7684\u6574\u6570 <code>ord('a')</code> 97 chr \u8fd4\u56de\u6574\u6570\u5bf9\u5e94\u7684 Unicode \u5b57\u7b26 <code>chr(97)</code> a bin \u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236 <code>bin(3)</code> '0b11' oct <code>oct(10)</code> '0o12' hex <code>hex(15)</code> '0xf' list \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5217\u8868 <code>list('abcd')</code> ['a','b','c','d'] <ul> <li><code>int</code></li> <li><code>int(\"   35\")</code> \u53bb\u6389\u7a7a\u683c</li> <li><code>int(\"   3  5\")</code> \u65e0\u6cd5\u8f6c\u6362</li> <li><code>int(\"35\", 8)</code> \u8f6c\u6362\u4e3a\u516b\u8fdb\u5236</li> </ul>"},{"location":"py/class/#145","title":"1.4.5 \u8d4b\u503c","text":"<p>\u6211\u89c9\u5f97python\u5f88\u795e\u5947\u7684\u5730\u65b9</p> <ul> <li>\u4ea4\u6362\u503c\u4e0d\u9700\u8981\u8bbe\u7f6e\u5bb9\u91cf t <pre><code>print(a, b)\na, b = b, a\nprint(a, b)\n</code></pre></li> </ul>"},{"location":"py/class/#15","title":"1.5 \u8bed\u53e5","text":""},{"location":"py/class/#151","title":"1.5.1 \u6761\u4ef6","text":"<pre><code>if ...\n    ......\nelse ...\n    ......\n</code></pre> <pre><code>if ...\n    ......\nelif ...\n  ......\nelse ...\n</code></pre>"},{"location":"py/class/#152","title":"1.5.2 \u5faa\u73af","text":"<p><pre><code>for variable in \u5217\u8868:\n  ......\n</code></pre> <pre><code>while ...:\n  ......\nelse:\n  ......\n</code></pre></p> <p>\u6ce8\u610f\u4f7f\u7528 <code>break</code> \u8bed\u53e5\u548c <code>continue</code> \u8bed\u53e5\u3002</p> <p>\u8bed\u53e5\u5757\u7f29\u8fdb\u8868\u793a\u8fd9\u4e2a\u662ffor\u4e0b\u7684\u8bed\u53e5</p> <p>\u60e8\u75db\u7ecf\u5386\u544a\u8bc9\u6211\uff0c\u4e0d\u80fd\u83ab\u540d\u5176\u5999\u7f29\u8fdb\u8bed\u53e5\uff0c\u4f1a\u7206\u83ab\u540d\u5176\u5999\u7684\u9519\u3002\u3002\u3002\u3002\u5907\u6ce8#\u7a7a\u683c\u8bf7\u5220\u5e72\u51c0\u3002\u3002\u3002\u3002\u3002\u3002\u3002</p> <p><code>range()</code>\uff1a - range(start, stop, step) - start \u8d77\u59cb\uff0c\u9ed8\u8ba4\u4ece 0 \u5f00\u59cb\u3002<code>range(5)</code> \u8868\u793a <code>range(0, 5)</code> - stop \u7ed3\u675f\u4f46\u4e0d\u5305\u62ec stop\uff0c<code>range(1, 5)</code> \u904d\u5386\u4e86 1234 - step \u9ed8\u8ba4 1</p> <p>\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6709\uff1a</p> <pre><code>n = int(input())\nfac = 1\nfor i in list(range(1, n+1)):\n  fac *= i\nprint(fac)\n</code></pre>"},{"location":"py/class/#153","title":"1.5.3 \u5217\u8868\u5143\u7d20\u8ba1\u7b97","text":"<p><code>lst=[i for i in list(range(1,5))]</code> lst [1, 2, 3, 4]</p> <p><code>nl = [2*number for number in [1,2,3,4]]</code>  nl [1, 2, 3, 4] #\u5217\u8868\u63a8\u5bfc\u5f0f</p> <p><code>nl = [number for number in range(1,8) if nnumber % 2 == 1]</code> nl [1, 3, 5, 7]</p>"},{"location":"py/class/#154","title":"1.5.4 \u683c\u5f0f\u5316\u8f93\u51fa","text":"\u683c\u5f0f\u9650\u5b9a\u7b26 \u8f93\u51fa \u8bf4\u660e <code>\"{:d}\".format(24)</code> 24 \u683c\u5f0f\u5316\u4e00\u4e2a\u6574\u6570\uff0cd\u4ee3\u8868\u5341\u8fdb\u5236\u6574\u6570 <p>Note\uff1ad \u5341\u8fdb\u5236\uff0cb \u4e8c\u8fdb\u5236\uff0co \u516b\u8fdb\u5236\uff0cx \u5341\u516d\u8fdb\u5236 </p> <code>\"{:5d}\".format(24)</code> ___24 \u5bbd\u5ea6\u6307\u5b9a 5\uff0c\u5728\u5de6\u4fa7\u589e\u52a0\u7a7a\u683c <code>\"{:4d}\".format(56789)</code> 56789 \u5bbd\u5ea6\u8d85\u51fa\u65f6\u5168\u90e8\u8f93\u51fa <code>\"{:.2f}\".format(1.2456)</code> 1.24 \u5c0f\u6570\u70b9\u4fdd\u75592\u4f4d\uff0cf\u6d6e\u70b9\u6570 <code>\"{:.2e}\".format(53.245)\"</code> 5.32e+01 e\u8868\u793a\u79d1\u5b66\u8ba1\u6570\u6cd5 <code>\"{:6.2f}\".format(1.2449)\"</code> __1.24 \u5bbd\u5ea6\u4e3a6\uff0c\u589e\u52a0\u4e86\u7a7a\u683c <code>\"{:9s}\".format(\"hello\")</code> hello____ \u5bbd\u5ea6\u4e3a9\uff0cs\u4ee3\u8868\u5b57\u7b26\u4e32\uff0c\u5de6\u5bf9\u9f50 <code>\"{:&gt;9s}\".format(\"hello\")</code> ____hello \u5bbd\u5ea6\u4e3a9\uff0c\u53f3\u5bf9\u9f50 <code>\"{:^9s}\".format(\"hello\")</code> __ hello __ \u5c45\u4e2d <p>\u8981\u6ce8\u610f\u8fd9\u79cd\u65b9\u6cd5\u4e0b\u603b\u4f4d\u6570\u4e0d\u4f1a\u6570\u8fdb\u53bb\u5c0f\u6570\u70b9\uff0c\u4f46\u662f\u522b\u7684\u4e66\u5199\u65b9\u6cd5\u4f1a\u7b97\u8fdb\u5c0f\u6570\u70b9\uff0c\u6240\u4ee5\u8981\u6570\u4e00\u4e0b\u51cf\u4e00</p> <p>\u4e5f\u53ef\u4ee5\u591a\u4e2a\u53c2\u6570\u4e00\u8d77\u683c\u5f0f\u5316\u8f93\u51fa\uff1a</p> <p><code>print(\"{0:.2f} {1:.2f}\".format(x,y))</code></p> <p><code>{}</code> \u8868\u793a\u5360\u4f4d\u7b26\uff0cformat\u540e\u8ddf\u586b\u5199\u7684\u5185\u5bb9\uff0c0\u548c1(:\u524d)\u8868\u793a\u7d22\u5f15\u5e8f\u5217</p>"},{"location":"py/class/#155","title":"1.5.5 \u4f4d\u8fd0\u7b97","text":"<p>&amp; \u4f4d\u4e0e\uff0c| \u4f4d\u6216\uff0c^ \u4f4d\u5f02\u6216\uff0c~ \u4f4d01\u53d6\u53cd\uff0c&lt;&lt; \u4f4d\u5de6\u79fb\uff0c&gt;&gt; \u4f4d\u53f3\u79fb</p>"},{"location":"py/class/#16","title":"1.6 \u6570\u636e\u7ed3\u6784","text":""},{"location":"py/class/#161","title":"1.6.1 \u5e8f\u5217","text":"<p>\uff1f\u5f88\u4e0d\u6e05\u695a\u5417\uff0c\u6570\u7ec4\u4f60</p> <p>\u5e8f\u5217\u662f\u4e00\u5927\u7c7b\u6570\u636e\u5bb9\u5668\u7684\u7edf\u79f0\uff0c\u4e0d\u662f\u5177\u4f53\u7684\u6570\u636e\u7c7b\u578b</p> <p><code>range()</code> \u51fd\u6570\u4ea7\u751f\u7ed3\u679c\u662f\u5e8f\u5217\uff0c\u56e0\u6b64 for \u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u904d\u5386 range \u51fd\u6570\u7684\u8fd4\u56de\u5bf9\u8c61\u3002</p> <p>\u5982 <code>for i in range(4)</code> \u800c\u4e0d\u9700\u8981 <code>for i in list(range(4))</code></p> \u5e8f\u5217\u64cd\u4f5c \u63cf\u8ff0\uff1a\u5927\u90e8\u5206\u8ddf\u5b57\u7b26\u4e32\u7c7b\u578b\u6781\u5176\u76f8\u4f3c <code>X1+X2</code> <code>X*n</code> <code>X[i]</code> \u8bbf\u95ee\u4e0b\u6807 i \u7684\u5143\u7d20 <code>X[i: j]</code> \u5f15\u7528\u4e0b\u6807 i \u5230 j-1 \u7684\u5b50\u5e8f\u5217 <code>X[i: j: k]</code> \u5f15\u7528...\u7684\u5b50\u5e8f\u5217\uff0c\u6b65\u957f k <code>len(X)</code> <code>max(X)</code> <code>min(X)</code> <code>v in X</code> \u68c0\u67e5 v \u662f\u5426\u5728 X \u4e2d\uff0c\u8fd4\u56de\u5e03\u5c14\u503c <code>v not in X</code> <p>1. \u5e8f\u5217\u8bbf\u95ee\uff1a</p> <ul> <li>\u5bf9\u4e00\u4e2a\u6709 n \u4e2a\u6570\u636e\u7684\u5e8f\u5217\uff0c\u4e0b\u6807\u7684\u6709\u6548\u8303\u56f4\u662f 0 \u5230 n-1\uff0c\u6216 -n \u5230 -1</li> <li>\u5426\u5219\u62a5\u9519\uff0c\u4e0b\u6807\u8d8a\u754c</li> <li>-1 \u4e3a\u6700\u540e\u4e00\u4f4d\uff0c\u8d1f\u6570\u8868\u793a\u4ece\u540e\u5f80\u524d</li> <li>[1:-3] \u8868\u793a\u4ece\u7b2c\u4e8c\u4e2a\u6570\u5230\u5012\u6570\u7b2c\u56db\u4e2a\u6570\uff08\u7b2c\u4e09\u4e2a\u6570\u7684\u524d\u9762\u4e00\u4e2a\u6570\uff09</li> <li>\u6b65\u957f\u53ef\u4ee5\u53d6\u8d1f\uff0c\u53d6\u8d1f\u8868\u793a\u4ece\u540e\u5f80\u524d\u53d6\uff08\u987a\u5e8f\u4f1a\u4e0d\u4e00\u6837\uff09</li> </ul> <p>2. \u5e8f\u5217\u590d\u5236\uff1a</p> <ul> <li>\u5982\u679c\u76f4\u63a5\u5c06\u4e00\u4e2a\u5e8f\u5217\u53d8\u91cf\u8d4b\u503c\u7ed9\u53e6\u5916\u4e00\u4e2a\u6570\u5217\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u53d8\u91cf\u8868\u8fbe\u540c\u4e00\u4e2a\u5e8f\u5217\uff08\u5730\u5740\u4e00\u6837\uff0c\u503c\u7684\u6539\u53d8\u4e00\u6837\uff09</li> <li>\u5982\u679c\u4e0d\u60f3\u8981\u5730\u5740\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\uff1a <pre><code>a = [2, 3, 5, 7, 11, 13]\nb = a[ : ] # \u7701\u7565\u8303\u56f4\u8868\u793a\u53d6\u6574\u4e2a\u4ece\u5934\u5230\u5c3e\n</code></pre></li> </ul> <p>3. \u62c6\u5305\u8fd0\u7b97\uff1a</p> <p>python\u771f\u7684\u597d\u7b80\u6613\u597d\u65e0\u8111\u554a\u554a\u554a\u6211\u61c2\u4ed6\u4e3a\u5565\u4f5c\u4e3a\u5de5\u5177\u4e86\u3002\u3002\u3002</p> <pre><code>info=[\"\u7ae0\u6b66\",\"male\",30,[70,80,65,78]]\nname,sex,age,grade=info\n</code></pre> <ul> <li>\u5b57\u7b26\u4e32\u4e5f\u662f\u4e00\u79cd\u5e8f\u5217\uff0c\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\u62c6\u5305</li> <li>\u5b57\u7b26\u4e32/\u5e8f\u5217\u524d\u9762\u52a0 <code>*</code>\uff0c\u53ef\u4ee5\u83b7\u53d6\u5b50\u5e8f\u5217</li> </ul> <pre><code>grade=[70,80,65,78]\na,*b=grade # a=70, b=[80,65,78]\n</code></pre> <p>4. \u5143\u7d20\u5224\u65ad\uff1a</p> <ul> <li>we have: <code>a=[2,3,4,5,7,11,13]</code></li> <li><code>print(3 in a)</code> True</li> <li><code>[2,3] in a</code> False</li> <li><code>[2,3] in [[2,3],4,5,11,13]</code> True</li> </ul> <p>5. \u83b7\u53d6\u7d22\u5f15\uff1a</p> <ul> <li>\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u6807\u3002</li> <li>\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6709\u91cd\u590d\u5143\u7d20\uff0c\u90a3\u4e48\u5bf9\u91cd\u590d\u5143\u7d20\u7684 index \u64cd\u4f5c\u8fd4\u56de\u7b2c\u4e00\u6b21\u51fa\u73b0\u65f6\u5019\u7684index\u503c</li> <li>\u4e0d\u5b58\u5728\u5143\u7d20\u4f1a\u62a5\u9519\u8fd4\u56de</li> </ul>"},{"location":"py/class/#162","title":"1.6.2 \u5b57\u7b26\u4e32","text":"<p>1. \u539f\u59cb\u5b57\u7b26\u4e32\uff1a</p> <p>\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u4e00\u4e2a\u5b57\u7b26 r\uff0c\u8868\u793a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u65e0\u8f6c\u4e49\u5b57\u7b26</p> <pre><code>r = r'hello\\nworld'\nprint(r) # hello\\nworld\n</code></pre> <p>2. \u5b57\u7b26\u4e32\u4fee\u6539\uff1a</p> <p>\u5b57\u7b26\u4e32\u4e0d\u53ef\u4ee5\u4fee\u6539\u5355\u4e2a\u6570\u636e\u6216\u5b57\u7b26\uff0c\u5fc5\u987b\u8981\u7528\u65b0\u7684\u5b57\u7b26\u4e32\u5bf9\u53d8\u91cf\u6574\u4e2a\u8d4b\u503c\u3002</p> <p><pre><code>s='hello'\ns[0]='k' # \u62a5\u9519\n</code></pre> <pre><code>s='hello'\ns='bye' # \u6b63\u786e\u4fee\u6539\u5b57\u7b26\u4e32\n</code></pre></p> <p>3. \u5b57\u7b26\u4e32\u67e5\u627e\u5b50\u4e32\uff1afind()</p> <p>\u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32\uff0c\u8fd4\u56de\u7684\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u4e0b\u6807\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u627e\u4e0d\u5230\u8fd4\u56de-1 <pre><code>s = 'This is a test.'\nprint(s.find('is')) # 2 find \u4e0e index \u4e00\u81f4\u5728\u91cd\u590d\u5143\u7d20\uff0c\u4f46find \u80fd\u5bf9\u4e0d\u5b58\u5728\u7684\u5143\u7d20\u8fd4\u56de-1\u800cindex\u4e0d\u80fd\nprint(s.index('is')) # 2\nprint(s.find('OK')) # -1\nprint(s.find('is',3)) # 5 3\u8868\u793a\u8303\u56f4\u4eceindex\u4e3a3\u5f00\u59cb\uff0c\u4e0d\u5305\u62ec3\nprint(s.find('is',3,6)) # -1 \u8868\u793a\u8303\u56f4\u5728index3\u52306\uff0c\u4e0d\u5305\u62ec3\u548c6\n</code></pre></p> <p>4. \u7edf\u8ba1\u6b21\u6570\uff1acount()</p> <p>\u771f\u7684\u5f88\u5b57\u9762\u610f\u601d\u554a\uff0c\uff0c</p> <pre><code>s='This is a test.'\nprint(s.count('is')) # 2\n</code></pre> <p>5. \u4fee\u6539\u5927\u5c0f\u5199</p> <pre><code>name = 'john s'\nprint(name.title()) # John S \u4fee\u6539\u9996\u5b57\u6bcd\nprint(name.upper()) # JOHN S\nprint(name.lower()) # john s\n</code></pre> <p>6. \u5220\u9664\u7a7a\u683c</p> <pre><code>name=\" python \"\nprint(name.strip())  # 'python'\nprint(name.lstrip()) # 'python '\nprint(name.rstrip()) # ' python'\n</code></pre> <p>7. \u66ff\u6362\u5b50\u4e32</p> <pre><code>s='This is a test.'\nt=s.replace('is','eez')\nprint(t) # Theez eez a test\n</code></pre> <p>8. \u6570\u5b57\u8f6c\u6362\u5b57\u7b26\u4e32</p> <p><code>str()</code>: <pre><code>age = 23    \nprint('Happy Birthday '+ str(age) +'!') # Happy Birthday 23!\n</code></pre></p> <p><code>format()</code>: <pre><code>age = 23\nprint('Happy Birthday {}!'.format(age)) # Happy Birthday 23!\n</code></pre> \u591a\u4e2a\u7a7a\u5c31\u591a\u4e2aformat\u5141\u8bb8\uff0c\u5982\uff1a <pre><code>print('My name is {}, age {}'.format('Mary','18')) # My name is Mary, age 18\n# \u7b2c\u4e8c\u4e2aformat\u76f4\u63a5\u519918\u4e0d\u5199'18'\u4e5f\u53ef\u4ee5\n</code></pre></p>"},{"location":"py/class/#163","title":"1.6.3 \u5217\u8868","text":"<p>1. \u5217\u8868\u521b\u5efa</p> <ul> <li> <p>\u5b57\u9762\uff1a<code>a=[2.3.7]</code></p> </li> <li> <p><code>list()</code> \u51fd\u6570\uff1a<code>a=list('hello')</code> \u6216\u8005 <code>a=list(range(1,10,2))</code></p> </li> <li> <p>\u77e9\u9635\u8868\u793a\uff1a <code>matrix=[[1,2,3],[3,4,5],[5,6,7]]</code>\uff0c\u8bbf\u95ee\u4f7f\u7528 <code>matrix[0][0]</code></p> </li> </ul> <p>\u8f93\u5165\u4e00\u4e32\u6570\u5b57\u7a7a\u683c\u9694\u5f00\uff0c\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u5b57 <pre><code>nums = input()\nnuml = [int(n) for n in nums.split()]\nnuml.sort()\nprint(numl)\n</code></pre></p> <ul> <li>\u4f7f\u7528 <code>append()</code> \u51fd\u6570 <pre><code>lst = []\nfor i in range(4):\n  lst.append(input())\n</code></pre></li> </ul> <p>2. \u5143\u7d20\u8d4b\u503c</p> <p>\u5217\u8868\u5143\u7d20\u53ef\u4ee5\u88ab\u4fee\u6539</p> <pre><code>a=[1,2,3,4,5]\na[0]=2\nprint(a) # [2,2,3,4,5]\n</code></pre> <p>\u53ef\u4ee5\u7528 <code>del()</code> \u8bed\u53e5\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20</p> <pre><code>name = ['Alice', 'Kim', 'Karl', 'John']\ndel name[2]\nprint(name) # ['Alice', 'Kim', 'John']\n</code></pre> <p>3. \u5207\u7247\u8d4b\u503c</p> <p>\u611f\u89c9\u5c31\u662f\u628a\u591a\u4e2a\u5143\u7d20\u5f53\u6210\u4e00\u4e2a\u5207\u7247\u53bb\u7528\uff0c\u8ddf\u5143\u7d20\u8d4b\u503c\u4e00\u6837</p> <pre><code>name = list('Perl')\nname[2:] = list('ar')\nprint(name) # ['P', 'e', 'a', 'r']\n</code></pre> <p>4. \u5217\u8868\u51fd\u6570</p> \u51fd\u6570 \u63cf\u8ff0 \u4f7f\u7528 \u8bf4\u660e l.append(x) \u5728\u5217\u8868\u5c3e\u90e8\u8ffd\u52a0\u5143\u7d20 x <code>l.append(13)</code> l.clear() \u6e05\u7a7a l.count(x) \u8ba1\u7b97 x \u51fa\u73b0\u6b21\u6570 l.copy() \u5217\u8868\u7684\u5907\u4efd <code>a = c.copy()</code> id \u4e0d\u540c\uff0c\u4f5c\u7528\u76f8\u5f53\u4e8e\u5bf9 c \u53d6\u5168\u90e8\u5207\u7247 l.extend(x) \u5c06\u5217\u8868 x \u6269\u5145\u5230\u5217\u8868 l \u4e2d <code>l.extend([13,17])</code> l.index(value,start,end) \u8ba1\u7b97\u6307\u5b9a\u8303\u56f4\u5185 value \u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4e0b\u6807 l.insert(index,x) \u5728\u4e0b\u6807index\u4f4d\u7f6e\u63d2\u5165x <code>l.insert(2,4)</code>, <code>l.insert(12,3)</code> \u6307\u5b9a\u63d2\u5165\u7684\u4f4d\u7f6e\u4e0d\u5b58\u5728\uff0c\u5219\u63d2\u5165\u5230\u6700\u540e l.pop(index) \u8fd4\u56de\u5e76\u5220\u9664index\u5904\u7684\u5143\u7d20 <code>a.pop()</code>, <code>a.pop(2)</code> \u4e0d\u5e26\u53c2\u6570\u65f6\u5019\u9ed8\u8ba4\u5f39\u51fa\u6700\u540e\u4e00\u4e2a\u5143\u7d20 l.remove(value) \u5220\u9664\u503c\u4e3avalue\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 l.reverse() \u5012\u7f6e\u5217\u8868 <code>a.reverse()</code> l.sort() \u5bf9\u5217\u8868\u5143\u7d20\u8fdb\u884c\u6392\u5e8f <p>5. \u5b57\u7b26\u4e32\u548c\u5217\u8868\u7684\u76f8\u4e92\u64cd\u4f5c</p> <p><code>split()</code> \u51fd\u6570\uff1a\u4e0d\u5e26\u53c2\u6570\u8868\u793a\u7528\u7a7a\u683c\u6765\u5212\u5206\uff0c\u5e26\u53c2\u6570\u5219\u7528\u53c2\u6570\u5212\u5206\u3002</p> <pre><code>date = '3/11/2018'\na = date.split('/')\nprint(a) # ['3', '11', '2018']\n</code></pre> <p><code>join()</code> \u51fd\u6570\uff1a\u53c2\u6570\u8868\u793a\u4e2d\u95f4\u7528\u4ec0\u4e48\u4e1c\u897f\u6765\u95f4\u9694</p> <pre><code>a = ['hello','good','boy','wii']\nprint(' '.join(a)) # hello good boy wii\nprint(':'.join(a)) # hello:good:boy:wii\n</code></pre>"},{"location":"py/class/#164","title":"1.6.4 \u5143\u7ec4","text":"<p>\u5143\u7ec4\u4e0d\u53ef\u4fee\u6539\uff0c\u53ef\u4ee5\u4efb\u4f55\u7c7b\u578b\u3001\u4efb\u4f55\u6570\u91cf\u3002</p> <p>1. \u5143\u7ec4\u521b\u5efa</p> <p>\u7528\u5143\u7ec4\u7684\u5b57\u9762\u91cf\uff1a<code>d = (100,20)</code></p> <p>\u7528 <code>tuple()</code> \u51fd\u6570\uff1a<code>a = tuple([2,3,5,7,11])</code></p> <p>2. \u5e38\u7528\u51fd\u6570</p> <p>\u5143\u7ec4\u4e0d\u53ef\u4fee\u6539\uff0c\u6240\u4ee5\u5927\u90e8\u5206\u5bf9\u5143\u7ec4\u90fd\u4e0d\u9002\u7528</p> \u51fd\u6570 \u63cf\u8ff0 \u4f7f\u7528 \u5907\u6ce8 t.count(x) \u8ba1\u7b97x\u7684\u51fa\u73b0\u6b21\u6570 t.index(x) \u8ba1\u7b97x\u7684\u51fa\u73b0\u4e0b\u6807 <p>3.\u4e00\u4e9b\u6848\u4f8b</p> <p>\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u6392\u5e8f\u540e\u6309\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u6bcf\u4e2a\u5b57\u7b26\u53ca\u8be5\u5b57\u7b26\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u7d22\u5f15\u3002 <pre><code>s = input()\nlst = [(s[index], index) for index in range(len(s))]\nlst.sort()\nprint(lst)\n</code></pre></p> <p>\u5217\u8868\u52a0\u5143\u7d20\u8868\u8ff0\u4e8c\u7ef4\u8868\u683c <pre><code>students = [(3180102988,\"\u891a\u597d\"),\n          (3170102465,\"\u738b\u51ef\u4eae\"),\n          (3160104456,\"\u674e\u6c38\"),\n          (3171104169,\"\u9648\u946b\"),\n          (318400429,\"\u5f90\u676d\u8bda\")]\nfor row in students: # \u6309\u884c\u5b58\u53d6\n  print(row[0],row[1])\nprint()\n\nfor id, name in students: # \u6309\u884c\u62c6\u5305\u5b58\u53d6\n  print(id, name)\nprint()\n\nfor index in range(len(students)):\n  print(students[index][0],students[index][1])\n</code></pre></p>"},{"location":"py/class/#165","title":"1.6.5 \u968f\u673a\u51fd\u6570\u5e93","text":"<p>\u4f7f\u7528 <code>import random</code> \u6765\u5bfc\u5165random\u968f\u673a\u51fd\u6570\u5e93</p> \u51fd\u6570\u540d \u542b\u4e49 \u4f7f\u7528 \u5907\u6ce8 random.random() \u8fd4\u56de\u4e00\u4e2a\u5728[0,1)\u4e4b\u95f4\u7684\u6570\u5b57 random.uniform(a,b) \u8fd4\u56de\u4e00\u4e2a\u5728[a,b]\u4e4b\u95f4\u7684\u6d6e\u70b9\u6570 random.randint(a,b) \u8fd4\u56de\u4e00\u4e2a\u5728[a,b]\u4e4b\u95f4\u7684\u6574\u6570 random.randrange(start,stop,step) \u5728\u6307\u5b9a\u8303\u56f4\u5185\u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u6570 random.choice(sequences) \u4ece\u5e8f\u5217\u4e2d\u968f\u673a\u8fd4\u56de\u4e00\u4e2a\u6570\u5b57 random.shuffle(x) \u5c06\u5217\u8868x\u4e2d\u987a\u5e8f\u6253\u4e71 random.sample(sequence,k) \u4ece\u4e00\u4e2a\u5e8f\u5217\u4e2d\u968f\u673a\u83b7\u5f97\u4e00\u4e2a\u957f\u5ea6\u4e3ak\u7684\u5e8f\u5217\u5e76\u968f\u673a\u6392\u5e8f random.seed(n) \u5bf9\u968f\u673a\u6570\u751f\u6210\u5668\u521d\u59cb\u5316\uff0cn\u8868\u793a\u968f\u673a\u79cd\u5b50\u3002\u53c2\u6570\u4e3a\u7a7a\u65f6\u968f\u673a\u79cd\u5b50\u4e3a\u7cfb\u7edf\u65f6\u95f4 <p>\u63b7\u786c\u5e01\uff0c\u6b63\u9762\u5411\u4e0a\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f <pre><code>import random\nt = [random.randint(0,1) for i in range(10000)]\nprint(sum(test) / len(test)) # 0.5006\n</code></pre></p>"},{"location":"py/class/#166","title":"1.6.6 \u96c6\u5408","text":"<p>set\uff0c\u4e00\u7c7b\u5bb9\u5668\uff0c\u65e0\u5e8f\uff0c\u5143\u7d20\u503c\u4e0d\u53ef\u91cd\u590d\uff08\u5982\u679c\u91cd\u590d\u7684\u8bddpython\u4f1a\u628a\u91cd\u590d\u7684\u76f4\u63a5\u6d88\u9664\uff09</p> <p>\u5217\u8868\u7b49\u53ef\u53d8\u5bf9\u8c61\u4e0d\u80fd\u505a\u96c6\u5408\u7684\u5143\u7d20</p> <p>1. \u96c6\u5408\u521b\u5efa</p> <ul> <li>\u76f4\u63a5\u7ed9\u53d8\u91cf\u8d4b\u503c\uff1a<code>fruit = {'apple', 'orange', 'pear', 'banana'}</code></li> <li>\u4f7f\u7528 <code>set()</code> \u521b\u5efa\u7a7a\u96c6\u5408</li> <li>\u4e5f\u53ef\u4ee5\u5c06\u5217\u8868\u6216\u5143\u7ec4\u8f6c\u6362\u4e3a\u96c6\u5408</li> </ul> <p>2. \u64cd\u4f5c\u96c6\u5408\u7684\u5143\u7d20</p> \u51fd\u6570 \u8bf4\u660e <code>len()</code> <code>min()</code> <code>max()</code> <code>sum()</code> <code>add()</code> <code>s.add(3)</code>\uff0c\u628a\u5143\u7d203\u52a0\u5165\u5230\u96c6\u5408 s \u4e2d <code>remove()</code> <code>s.remove(3)</code>\uff0c\u5220\u9664\u5143\u7d203\u3002\u5982\u679c\u4e0d\u5b58\u5728\u629b\u51faKeyError\u5f02\u5e38 <ul> <li>\u7528\u5faa\u73af\u904d\u5386\uff1a<code>for x in s</code> \u96c6\u5408\u65e0\u5e8f\uff0c\u8f93\u51fa\u7ed3\u679c\u4e5f\u65e0\u5e8f</li> <li><code>in</code> \uff0c<code>not in</code> \u53ef\u5224\u65ad</li> <li><code>s1.issubset(s2)</code> \u6216 <code>s1.issuperset(s2)</code> \u5224\u65ad\u5b50\u96c6\u6216\u8d85\u96c6</li> <li>\u8fd4\u56de True False</li> <li><code>==</code> , <code>!=</code> \u5224\u65ad\u5143\u7d20</li> <li><code>&lt;</code>, <code>&lt;=</code> , <code>&gt;</code>, <code>&gt;=</code> \u771f\u5b50\u96c6\uff0c\u5b50\u96c6\uff0c\u771f\u8d85\u96c6\uff0c\u8d85\u96c6</li> </ul> <p>3. \u96c6\u5408\u8fd0\u7b97</p> \u51fd\u6570 \u8fd0\u7b97\u7b26 \u8bf4\u660e <code>union()</code> <code>|</code> \u6216 \u5e76\u96c6 <code>intersection()</code> <code>&amp;</code> \u4e0e \u4ea4\u96c6 <code>difference()</code> <code>-</code> \u51cf \u5dee\u96c6 <code>symmertric_difference()</code> <code>^</code> \u5f02\u6216 \u5bf9\u79f0\u6027\uff0c\u7ed3\u679c\u662f\u9664\u4e86\u4e00\u4e2a\u5171\u540c\u5143\u7d20\u5916\u7684\u6240\u6709\u5143\u7d20 <p>4. \u4e00\u4e9b\u6848\u4f8b</p> <p>\u627e\u6307\u5b9a\u8303\u56f4\u5185\u7684\u8d28\u6570</p> <pre><code>import math\nm=int(input())\nprimes=set(2,m+1)\nfor i in range(2, int(math.sqrt(m))+1):\n    if i in primes:\n        primes=primes-set(range(i*i,m+1,i))\n\nprint(primes)\n</code></pre>"},{"location":"py/class/#167","title":"1.6.7 \u5b57\u5178","text":""},{"location":"py/class/#17","title":"1.7 \u51fd\u6570","text":""},{"location":"py/class/#171","title":"1.7.1 \u5b9a\u4e49","text":"<ul> <li>\u5185\u7f6e\u51fd\u6570\uff1a<code>len()</code></li> <li>\u81ea\u5b9a\u4e49\u51fd\u6570\uff1a\u5148\u5b9a\u4e49\uff0c\u624d\u80fd\u4f7f\u7528 <pre><code>def f(x):\n  value=x**2+1\n  return value\nn=int(input())\ny=f(x)\nprint(y)\n</code></pre></li> </ul> <p>\u51fd\u6570\u662f\u4e00\u79cd\u5bf9\u8c61\uff1a\u6709id\uff0ctype\uff0cvalue</p>"},{"location":"py/class/#172","title":"1.7.2 \u53c2\u6570","text":"<p>1. \u4f4d\u7f6e\u53c2\u6570</p> <p>\u4f20\u5165\u53c2\u6570\u6309\u7167\u987a\u5e8f\u590d\u5236\u4e0a\u53bb\u3002</p> <pre><code>from math import sqrt\ndef dis(x1,y1,x2,y2):\n  print(\"x1={},y1={},x2={},y2={}\".format(x1,y1,x2,y2)) \n  return sqrt((x1-x2)**2+(y1-y2)**2)\nprint(dis(1,3,4,5))\n</code></pre> <p>2. \u5173\u952e\u5b57\u53c2\u6570</p> <p>\u5982\u4f4d\u7f6e\u53c2\u6570\uff0c\u6dfb\u52a0\u5177\u4f53\u987a\u5e8f\u8c03\u7528\uff1a <pre><code>....\nprint(dis(x1=1,y2=5,y1=3,x2=4))\n</code></pre></p> <p>\u5f53\u540c\u65f6\u5b58\u5728\u4f4d\u7f6e\u548c\u5173\u952e\u8bcd\u53c2\u6570\u65f6\uff0c\u8981\u5148\u5199\u4f4d\u7f6e\u53c2\u6570\u518d\u5199\u5173\u952e\u8bcd\u53c2\u6570\u3002 <pre><code>...\nprint(dis(1,3,y2=5,x2=4))\n</code></pre></p> <p>3. \u9ed8\u8ba4\u503c\u53c2\u6570 \u5f53\u8c03\u7528\u65b9\u6ca1\u6709\u63d0\u4f9b\u5bf9\u5e94\u7684\u53c2\u6570\u503c\u65f6\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u9ed8\u8ba4\u53c2\u6570\u503c\u3002\u5982\u679c\u4f60\u63d0\u4f9b\u53c2\u6570\u503c\uff0c\u5728\u8c03\u7528\u65f6\u4f1a\u4ee3\u66ff\u9ed8\u8ba4\u503c\u3002 <pre><code>from math import sqrt\ndef dis(x1,y1,x2,y2=5): #\u6c42\u5e73 \u9762\u4e0a\u4e24\u70b9\u8ddd\u79bb  \n    print(\"x1={},y1={},x2={},y2={}\".format(x1,y1,x2,y2)) \n    return sqrt((x1-x2)**2+(y1-y2)**2)\nprint(dis(1,3,4))\n</code></pre></p> <p>4. \u4e0d\u5b9a\u957f\u6570\u76ee\u53c2\u6570 \u5f53\u51fd\u6570\u53c2\u6570\u6570\u76ee\u4e0d\u786e\u5b9a\u65f6\uff0c\u661f\u53f7\u5c06\u4e00\u7ec4\u53ef\u53d8\u6570\u91cf\u7684\u4f4d\u7f6e\u53c2\u6570\u96c6\u5408\u6210\u53c2\u6570\u503c\u7684\u5143\u7ec4\u3002</p> <pre><code>def countnum(a,*b): #\u8ba1\u7b97\u53c2\u6570\u4e2a\u6570\n  print(b)\n\u00a0 print(len(b)+1)\ncountnum(3,7,9)\ncountnum(5,8,1,6,89)\n</code></pre> <p>\u8f93\u51fa\uff1a <pre><code>(7, 9)      #\u4ee5\u5143\u7ec4\u7684\u5f62\u5f0f\u5b58\u653e\n3\n(8, 1, 6, 89)\n5\n</code></pre></p> <p>\u4e00\u4e2a\u661f\u53f7\u8868\u793a\u8f93\u51fa\u5230\u5143\u7ec4\uff0c\u4e24\u4e2a\u661f\u53f7\u8868\u793a\u8f93\u51fa\u5230\u5b57\u5178</p> <pre><code>def countnum(a,**d): #\u8ba1\u7b97\u53c2\u6570\u4e2a\u6570\n    print(d)\n    print(len(d)+1)\ncountnum(3,x1=9,x2=1,x3=6,x4=89)\n</code></pre> <p>\u8f93\u51fa\uff1a <pre><code>{'x1': 9, 'x2': 1, 'x3': 6, 'x4': 89}\n5\n</code></pre></p> <p>5. print \u53c2\u6570</p> <ul> <li><code>print(*object, sep=\" \", end=\"\\n\", file=sys.stdout)</code></li> <li>object: \u8f93\u51fa\u53c2\u6570, sys.stdout\uff1a\u8f93\u51fa\u5230\u5c4f\u5e55</li> <li><code>I=[2,7,5]</code></li> <li><code>print(I)</code> \uff0c\u8f93\u51fa [2,7,5]</li> <li><code>print(*I)</code>\uff0c\u8f93\u51fa 2 7 5</li> <li>\u8868\u793a\u5c06\u5e8f\u5217\u62c6\u6210\u4e00\u4e2a\u4e2a\u5355\u72ec\u7684\u5b9e\u53c2\uff0c\u800c*\u5219\u8868\u793a\u5c06\u5b57\u5178\u62c6\u6210\u4e00\u4e2a\u4e2a\u5355\u72ec\u7684\u5e26\u53d8\u91cf\u540d\u7684\u5b9e\u53c2.</li> </ul>"},{"location":"py/class/#173","title":"1.7.3 \u8fd4\u56de\u503c","text":"<p>return</p> <p>\u533f\u540d\u51fd\u6570\uff1alambda\u8868\u8fbe\u5f0f</p> <p>lambda \u7528\u6765\u7f16\u5199\u7b80\u5355\u7684\u51fd\u6570\uff0c\u800cdef\u7528\u6765\u5904\u7406\u66f4\u5f3a\u5927\u7684\u4efb\u52a1\u7684\u51fd\u6570\u3002</p> <pre><code>g = lambda x,y,z : x+y+z    \n#\u628alambda\u5b9a\u4e49\u7684\u533f\u540d\u51fd\u6570\u8d4b\u7ed9\u51fd\u6570g\nprint(g(1,4,5))\n</code></pre> <p>\u5168\u5c40\u53d8\u4e0e\u5c40\u90e8\u53d8\u91cf\uff0cglobal \u5173\u952e\u5b57</p>"},{"location":"py/class/#174","title":"1.7.4 \u9012\u5f52","text":"<p>\u6590\u6ce2\u90a3\u5951\uff1a</p> <pre><code>def fib(n):\n  if n == 0 or  n == 1:\n    return 1\n  else:\n    return fib(n-1)+fib(n-2)\nprint(fib(4))\n</code></pre> <p>\u5367\u69fd\u3002\u3002\u3002\u3002</p> <p>\u52a8\u6001\u89c4\u5212</p> <pre><code>pre = {o:1, 1:1}\ndef fib(n):\n  if n in pre:\n    return pre[n]\n  else:\n    newvalue = fib(n-1)+fib(n-2)\n    pre[n] = newvalue\n    return newvalue\nprint(fib(100))\n# \u611f\u89c9\u4e5f\u4e0d\u662f\u5f88dynamic programming\uff0c\u53ea\u662f\u62ff\u4e86\u4e00\u4e2a\u5b57\u5178\uff08\u6570\u7ec4\uff09\u6765\u8bb0\u5f55\u4e0d\u7528\u6bcf\u6b21\u90fd\u9012\u5f52\u7f62\u4e86\n</code></pre>"},{"location":"py/class/#175","title":"1.7.5 \u5185\u7f6e\u51fd\u6570","text":"<p>sorted: \u5bf9\u4e8e\u5217\u8868\u6709\u7528</p> <p>sort(iterable, key, reverse) <pre><code>students = [('\u6c5f\u5e78',89, 15), (' \u65b9\u9e4f',80, 14), ('\u9648\u53ef', 85, 14)] #\u7b2c\u4e8c\u4e2a\u5206\u91cf\u662f\u6210\u7ee9\uff0c\u7b2c\u4e09\u4e2a\u5206\u91cf\u662f\u5e74\u9f84\nprint(sorted(students, key=lambda s: s[2])) # \u6309\uf98e\u9f84\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n# [(' \u65b9\u9e4f', 80, 14), ('\u9648\u53ef', 85, 14), ('\u6c5f\u5e78', 89, 15)]\nprint(sorted(students, key=lambda s: s[1], reverse=True))# \u6309\u6210\u7ee9\u4ece\u5927\u5230\u5c0f\u964d\u5e8f\n# [('\u6c5f\u5e78', 89, 15), ('\u9648\u53ef', 85, 14), (' \u65b9\u9e4f', 80, 14)]\n</code></pre></p> <p>map: \u591a\u7528\u4e8einput <pre><code>print(list(map(lambda x: x ** 2, [1, 2, 3, 4, 5]))) # \u4f7f\u7528 lambda \uf9eb\u540d\u51fd\u6570\n# [1, 4, 9, 16, 25]\n</code></pre> <pre><code>print(list(map(lambda x, y: x + y, [1, 3, 5, 7, 9], [2, 4, 6, 8, 10])))\n# \u63d0\u4f9b\u4e86\u4e24\u4e2a\u5217\u8868\uff0c\u5bf9\u76f8\u540c\u4f4d\u7f6e\u7684\u5217\u8868\u6570\u636e\u8fdb\u884c\u76f8\u52a0\n# [3, 7, 11, 15, 19]\n</code></pre></p> <p>zip: <pre><code>a = [1,2,3]\nb = [4,5,6]\nc = [4,5,6,7,8]\nprint(list(zip(a,b))) # [(1, 4), (2, 5), (3, 6)]\nprint(list(zip(a,c))) # \u5143\u7d20\u4e2a\u6570\u4e0e\u6700\u77ed\u7684\u5217\u8868\u4e00\u81f4\n# [(1, 4), (2, 5), (3, 6)]\n</code></pre> \u6216\u8005\u5b57\u5178\u952e\u503c\u4e92\u6362 <pre><code>d={'blue':500,'red':100,'white':300} \nd1=dict(zip(d.values(),d.keys())\nprint(d1)\n# {500: 'blue', 100: 'red', 300: 'white'}\n</code></pre></p> <p>eval: <pre><code>x,y=3,7\neval(\u2018x+3*y-4\u2019)\n# 20\n</code></pre></p> <p>exec: <pre><code>exec(\u2018print(\u201chello world\u201d)\u2019)\nHello world \n</code></pre></p> <p>all: <pre><code>n=47\nprint(all([1 if n%k!=0 else 0 for k in range(2,n)])) #True\nn=15\nprint(all([1 if n%k!=0 else 0 for k in range(2,n)])) #False\n</code></pre></p> <p>any: <pre><code>any([[],False,0])   #\u7a7a\u5217\u8868\u548c0\u90fd\u8868\u793aFalse\n#False\n</code></pre></p>"},{"location":"py/class/#18","title":"1.8 \u7a0b\u5e8f\u6a21\u5757","text":"<pre><code>import  \u6a21\u5757\u540d\nimport  \u6a21\u5757\u540d as \u522b\u540d \nfrom  \u6a21\u5757\u540d import  *\n\u8fd9\u79cd\u65b9\u6cd5\u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\uff0c\u8c03\u7528\u7684\u65f6\u5019\u4e0d\u9700\u8981\u518d\u52a0\u6a21\u5757\u540d\nfrom  \u6a21\u5757\u540d import  \u51fd\u6570\u540d\n\u8fd9\u79cd\u65b9\u6cd5\u5f15\u5165\u6a21\u5757\u4e2d\u7684\u5355\u4e2a\u51fd\u6570\uff0c\u8c03\u7528\u7684\u65f6\u5019\u4e5f\u4e0d\u9700\u8981\u518d\u52a0\u6a21\u5757\u540d\ndel \u6a21\u5757\u540d       \u5220\u9664\u5f15\u5165\u7684\u6a21\u5757\u540d\n</code></pre>"},{"location":"py/others/","title":"Others.py","text":""},{"location":"py/others/#1-eval","title":"1 <code>eval()</code>\u51fd\u6570","text":""},{"location":"py/others/#11-evalexpression-globals-locals","title":"1.1 <code>eval(expression, globals, locals)</code>","text":"<p>\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\uff0c\u53d8\u91cf\u4f5c\u7528\u57df\uff08\u7b2c23\u4e2a\u53c2\u6570\uff09\uff08\u53ef\u9009\uff09</p> <p>\u5982\u679c\u5ffd\u7565\u540e\u9762\u4e24\u4e2a\u53c2\u6570\uff0ceval \u8868\u793a\u5728\u5f53\u524d\u4f5c\u7528\u57df\u6267\u884c</p> <pre><code>a = 1\nprint(eval(\"a+1\")) #2\n</code></pre> <p>\u5982\u679c\u6307\u5b9a globals \u53c2\u6570</p> <pre><code>a = 1\ng = {\"a\": 10}\nprint(eval(\"a+1\", g)) #11\n</code></pre> <p>\u5982\u679c\u6307\u5b9alocals\u53c2\u6570</p> <pre><code>a = 10\nb = 20\nc = 20\ng = {\"a\": 6, \"b\": 8}\nl = {\"b\": 9, \"c\": 10}\nprint(eval(\"a+b+c\", g, l)) #25\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\u5b57\u5178\u8986\u76d6\n</code></pre>"},{"location":"py/others/#12-evalinput","title":"1.2 <code>eval(input())</code>","text":"<p>\u5c06\u8f93\u5165\u7684 str \u8868\u8fbe\u5f0f\u7c7b\u578b\u8fd4\u56de\u4e3a int, list, dict, tuple</p>"},{"location":"%E6%95%B0%E9%80%BB/t/","title":"\u6807\u9898","text":""},{"location":"%E6%95%B0%E9%80%BB/t/#_2","title":"\u76ee\u5f55","text":"<p>\u76ee\u5f551 \u76ee\u5f552</p>"},{"location":"%E6%95%B0%E9%80%BB/t/#1","title":"\u76ee\u5f551","text":""},{"location":"%E6%95%B0%E9%80%BB/t/#2","title":"\u76ee\u5f552","text":""},{"location":"%E6%95%B0%E9%80%BB/2048/2048/","title":"2048","text":"<p>"},{"location":"%E6%95%B0%E9%80%BB/2048/2048/#_1","title":"\u6458\u8981","text":"<p>\u672c\u6b21\u8bfe\u7a0b\u8bbe\u8ba1\u9898\u76ee\u4e3a \"2048\" \uff0c\u7531\u4f20\u7edf\u7684 2048 \u6e38\u620f\u79fb\u81f3 FPGA \u677f\u8bbe\u8ba1\u800c\u6210\u3002\u8fd9\u6b3e\u6e38\u620f\u6781\u597d\u5730\u8fd8\u539f\u4e86\u7f51\u9875\u7248 2048 \u6e38\u620f\u7684\u57fa\u672c\u7279\u5f81\u548c\u6e38\u620f\u89c4\u5219\uff0c\u4f7f\u7528 vga \u663e\u793a\u6e38\u620f\u754c\u9762\uff0c\u4f7f\u7528 sword \u677f\u4e03\u6bb5\u6570\u7801\u7ba1\u663e\u793a\u5f97\u5206\uff0c\u4f7f\u7528 PS2 \u952e\u76d8\u64cd\u4f5c\u5de6\u79fb\u3001\u53f3\u79fb\u3001\u4e0a\u79fb\u548c\u4e0b\u79fb\uff0c\u5177\u6709\u5f88\u5f3a\u7684\u53ef\u73a9\u6027\u3002  \u5173\u952e\u8bcd\uff1a\u6570\u5b57\u903b\u8f91\uff0c\u6e38\u620f\uff0c2048\uff0cVerilog\uff0cIP Core\uff0cFPGA    # \u76ee\u5f55  ## [\u6458\u8981](#jump0) ## [\u7b2c\u4e00\u7ae0 \u7eea\u8bba](#jump1) ### [1.1 \u57fa\u4e8e FPGA \u7684\u6e38\u620f\u8bbe\u8ba1\u80cc\u666f](#jump2) ### [1.2 \u4e3b\u8981\u5185\u5bb9\u548c\u96be\u70b9](#jump3) ## [\u7b2c\u4e8c\u7ae0 2048 \u6e38\u620f\u8bbe\u8ba1\u601d\u8def\u4e0e\u539f\u7406](#jump4) ### [2.1 \u57fa\u4e8e FPGA \u7684\u6e38\u620f\u8bbe\u8ba1\u76f8\u5173\u5185\u5bb9](#jump5) ### [2.2 \u57fa\u4e8e FPGA \u7684 2048 \u6e38\u620f\u8bbe\u8ba1\u65b9\u6848](#jump6) ## [\u7b2c\u4e09\u7ae0 2048\u6e38\u620f\u8bbe\u8ba1\u5b9e\u73b0](#jump7) ### [3.1 \u5b9e\u73b0\u8fc7\u7a0b](#jump8) ### [3.2 \u8c03\u8bd5\u8fc7\u7a0b](#jump9) ## [\u7b2c\u56db\u7ae0 \u7ed3\u679c\u5206\u6790\u4e0e\u7528\u6237\u53cd\u9988](#jump10) ### [4.1 \u7ed3\u679c\u68c0\u9a8c\u4e0e\u529f\u80fd\u6d4b\u8bd5](#jump11) ### [4.2 \u64cd\u4f5c\u8bf4\u660e\u4e0e\u6e38\u620f\u6f14\u793a](#jump12) ### [4.3 \u7528\u6237\u4f53\u9a8c\u4e0e\u53cd\u9988](#jump13) ## [\u7b2c\u4e94\u7ae0 \u603b\u7ed3\u4e0e\u81f4\u8c22](#jump14) ### [5.1 \u603b\u7ed3](#jump15) ### [5.2 \u81f4\u8c22](#jump16) ## [\u7b2c\u516d\u7ae0 \u5c0f\u7ec4\u6210\u5458\u5206\u5de5](#jump17)    # \u7b2c\u4e00\u7ae0 \u7eea\u8bba  ## 1.1 \u57fa\u4e8e FPGA \u7684\u6e38\u620f\u8bbe\u8ba1\u80cc\u666f <p>Verilog HDL \u662f\u4e00\u79cd\u7528\u4e8e\u6570\u5b57\u7cfb\u7edf\u8bbe\u8ba1\u7684\u8bed\u8a00\u3002\u7528 Verilog HDL \u63cf\u8ff0\u7684\u7535\u8def\u8bbe\u8ba1\u5c31\u662f\u8be5\u7535\u8def\u7684 Verilog HDL \u6a21\u578b\u4e5f\u79f0\u4e3a\u6a21\u5757\u3002Verilog HDL \u65e2\u662f\u4e00\u79cd\u884c\u4e3a\u63cf\u8ff0\u7684\u8bed\u8a00\u4e5f\u662f\u4e00\u79cd\u7ed3\u6784\u63cf\u8ff0\u7684\u8bed\u8a00\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e0\u8bba\u63cf\u8ff0\u7535\u8def\u529f\u80fd\u884c\u4e3a\u7684\u6a21\u5757\u6216\u63cf\u8ff0\u5143\u5668\u4ef6\u6216\u8f83\u5927\u90e8\u4ef6\u4e92\u8fde\u7684\u6a21\u5757\u90fd\u53ef\u4ee5\u7528 Verilog \u8bed\u8a00\u6765\u5efa\u7acb\u7535\u8def\u6a21\u578b\u3002\u5982\u679c\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u77e9\u7f16\u5199\uff0c\u529f\u80fd\u884c\u4e3a\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u5de5\u5177\u81ea\u52a8\u5730\u8f6c\u6362\u4e3a\u95e8\u7ea7\u4e92\u8fde\u6a21\u5757\u3002Verilog \u6a21\u578b\u53ef\u4ee5\u662f\u5b9e\u9645\u7535\u8def\u7684\u4e0d\u540c\u7ea7\u522b\u7684\u62bd\u8c61\u3002\u4e00\u4e2a\u590d\u6742\u7535\u8def\u7cfb\u7edf\u7684\u5b8c\u6574 Verilog HDL \u6a21\u578b\u662f\u7531\u82e5\u5e72\u4e2a Verilog HDL \u6a21\u5757\u6784\u6210\u7684\uff0c\u6bcf\u4e00\u4e2a\u6a21\u5757\u53c8\u53ef\u4ee5\u7531\u82e5\u5e72\u4e2a\u5b50\u6a21\u5757\u6784\u6210\u3002\u5176\u4e2d\u6709\u4e9b\u6a21\u5757\u9700\u8981\u7efc\u5408\u6210\u5177\u4f53\u7535\u8def\uff0c\u800c\u6709\u4e9b\u6a21\u5757\u53ea\u662f\u4e0e\u7528\u6237\u6240\u8bbe\u8ba1\u7684\u6a21\u5757\u6709\u4ea4\u4e92\u8054\u7cfb\u7684\u73b0\u5b58\u7535\u8def\u6216\u6fc0\u52b1\u4fe1\u53f7\u6e90\u3002\u5229\u7528 Verilog HDL \u8bed\u8a00\u7ed3\u6784\u6240\u63d0\u4f9b\u7684\u8fd9\u79cd\u529f\u80fd\u5c31\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u6a21\u5757\u95f4\u7684\u6e05\u6670\u5c42\u6b21\u7ed3\u6784\u6765\u63cf\u8ff0\u6781\u5176\u590d\u6742\u7684\u5927\u578b\u8bbe\u8ba1\uff0c\u5e76\u5bf9\u6240\u4f5c\u8bbe\u8ba1\u7684\u903b\u8f91\u7535\u8def\u8fdb\u884c\u4e25\u683c\u7684\u9a8c\u8bc1\u3002Verilog HDL \u4f5c\u4e3a\u4e00\u79cd\u9ad8\u7ea7\u7684\u786c\u4ef6\u63cf\u8ff0\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e0e C \u8bed\u8a00\u7684\u98ce\u683c\u6709\u8bb8\u591a\u7c7b\u4f3c\u4e4b\u5904\u3002\u5176\u4e2d\u6709\u8bb8\u591a\u8bed\u53e5\u5982\uff1aif \u8bed\u53e5\u3001case \u8bed\u53e5\u7b49\u548c C \u8bed\u8a00\u4e2d\u7684\u5bf9\u5e94\u8bed\u53e5\u5341\u5206\u76f8\u4f3c\u3002  <p>FPGA \u5373\u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217\uff0c\u5b83\u662f\u5728 PAL\u3001GAL\u3001CPLD \u7b49\u53ef\u7f16\u7a0b\u5668\u4ef6\u7684\u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u53d1\u5c55\u7684\u4ea7\u7269\u3002\u5b83\u662f\u4f5c\u4e3a\u4e13\u7528\u96c6\u6210\u7535\u8def\uff08ASIC\uff09\u9886\u57df\u4e2d\u7684\u4e00\u79cd\u534a\u5b9a\u5236\u7535\u8def\u800c\u51fa\u73b0\u7684\uff0c\u65e2\u89e3\u51b3\u4e86\u5b9a\u5236\u7535\u8def\u7684\u4e0d\u8db3\uff0c\u53c8\u514b\u670d\u4e86\u539f\u6709\u53ef\u7f16\u7a0b\u5668\u4ef6\u95e8\u7535\u8def\u6570\u6709\u9650\u7684\u7f3a\u70b9\u3002\u4ee5\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\uff08Verilog\u6216VHDL\uff09\u6240\u5b8c\u6210\u7684\u7535\u8def\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u7ecf\u8fc7\u7b80\u5355\u7684\u7efc\u5408\u4e0e\u5e03\u5c40\uff0c\u5feb\u901f\u5730\u70e7\u5f55\u81f3FPGA\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u3002\u8fd9\u4e9b\u53ef\u7f16\u7a0b\u5143\u4ef6\u53ef\u4ee5\u88ab\u7528\u6765\u5b9e\u73b0\u4e00\u4e9b\u57fa\u672c\u7684\u903b\u8f91\u95e8\u7535\u8def\u6216\u8005\u66f4\u590d\u6742\u7684\u4e00\u4e9b\u7684\u7ec4\u5408\u529f\u80fd\u3002Xilinx\u7684SWORD\u5b9e\u9a8c\u677f\u4e3a\u53ef\u7f16\u7a0b\u7684\u5b9e\u9a8c\u677f\uff0c\u800c\u4e14\u5b9e\u9a8c\u677f\u8fd8\u53ef\u4ee5\u548c\u8bb8\u591a\u5916\u90e8\u8bbe\u5907\u8fdb\u884c\u8fde\u63a5\uff0c\u4f8b\u5982PS2\u3001\u9f20\u6807\u6216\u8005\u663e\u793a\u5668\uff0c\u4ece\u800c\u53ef\u4ee5\u5728FPGA\u7684\u57fa\u7840\u4e0a\u8bbe\u8ba1\u4f7f\u7528PS2\u3001\u9f20\u6807\u7684\u8c03\u7528\uff0c\u6216\u8005\u663e\u793a\u5668\u4e0a\u663e\u793a\u56fe\u7247\u3002   ## 1.2 \u4e3b\u8981\u5185\u5bb9\u548c\u96be\u70b9  ### 1.1.1 \u4e3b\u8981\u5185\u5bb9  <p>2048 \u662f\u4e00\u6b3e\u6570\u5b57\u76ca\u667a\u6e38\u620f\u3002\u5728\u4e00\u4e2a 4x4 \u7684\u65b9\u683c\u4e2d\uff0c\u6bcf\u4e00\u8f6e\u90fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u6570\u503c\u4e3a 2 \u6216 4 \u7684\u65b9\u5757\u3002\u73a9\u5bb6\u901a\u8fc7\u63a7\u5236\u952e\u76d8\u4e0a\u7684 WADS \u6ed1\u52a8\u65b9\u5757\uff0c\u5f53\u4e24\u4e2a\u76f8\u540c\u6570\u503c\u7684\u65b9\u5757\u5728\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\u78b0\u649e\u5230\u4e00\u8d77\u65f6\uff0c\u5b83\u4eec\u4f1a\u5408\u5e76\u6210\u4e00\u4e2a\u6570\u503c\u52a0\u500d\u7684\u65b9\u5757\uff0c\u76f4\u5230\u83b7\u5f97\u4e00\u4e2a\u603b\u503c\u4e3a 2048 \u7684\u65b9\u5757\uff0c\u6e38\u620f\u83b7\u80dc\u3002\u6bcf\u6b21\u5408\u5e76\u5f97\u5230\u4e00\u4e2a\u6570\u503c\u52a0\u500d\u7684\u65b9\u5757\u65f6\uff0c\u73a9\u5bb6\u53ef\u4ee5\u76f8\u5e94\u5730\u83b7\u5f97\u65b9\u5757\u4e0a\u7684\u5206\u6570\u3002\u73a9\u5bb6\u53ef\u4ee5\u5728\u5408\u5e76\u8fc7\u7a0b\u4e2d\uff0c\u5c1d\u8bd5\u83b7\u5f97\u66f4\u9ad8\u7684\u5206\u6570\u3002\u5f53\u65e0\u6cd5\u8fdb\u884c\u6709\u6548\u7684\u5408\u5e76\u64cd\u4f5c\u5e76\u4e14\u65e0\u6cd5\u518d\u79fb\u52a8\u65b9\u5757\u65f6\uff0c\u6e38\u620f\u7ed3\u675f\u3002\u6e38\u620f\u7ed3\u675f\u540e\uff0c\u4e03\u6bb5\u6570\u7801\u7ba1\u663e\u793a\u73a9\u5bb6\u7684\u6700\u9ad8\u5206\u6570\u3002\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u6309\u952e P \u6765\u91cd\u590d\u5c1d\u8bd5\uff0c\u83b7\u5f97\u66f4\u9ad8\u7684\u5206\u6570\u3002\u6e38\u620f\u7684\u96be\u5ea6\u5728\u4e8e\uff0c\u5728\u6bcf\u4e00\u6b21\u6ed1\u52a8\u8fc7\u540e\uff0c\u7cfb\u7edf\u4f1a\u5728\u968f\u673a\u7a7a\u767d\u4f4d\u7f6e\u4ea7\u751f\u65b0\u7684\u968f\u673a\u6570\u65b9\u5757\uff0c\u73a9\u5bb6\u9700\u8981\u8003\u8651\u6bcf\u4e00\u6b65\u7684\u79fb\u52a8\uff0c\u4ee5\u907f\u514d\u65b9\u5757\u586b\u6ee1\u6574\u4e2a\u65b9\u683c\u4e14\u65e0\u6cd5\u7ee7\u7eed\u5408\u5e76\u7684\u60c5\u51b5\u3002  ### 1.1.2 \u6280\u672f\u8981\u6c42  <p>\u719f\u7ec3\u638c\u63e1 Verilog \u8bed\u8a00\u8bbe\u8ba1\uff1b\u638c\u63e1 SWORD \u677f\u7684\u4f7f\u7528\u65b9\u6cd5\uff1b\u638c\u63e1 VGA \u663e\u793a\u539f\u7406\u548c PS2 \u952e\u76d8\u8f93\u5165\u539f\u7406\uff0c\u7406\u89e3\u5e76\u638c\u63e1\u72b6\u6001\u673a\u7684\u8bbe\u8ba1\u3002  ### 1.1.3 \u5b9e\u9a8c\u76ee\u7684  <p>\u52a0\u6df1\u5bf9\u6a21\u5757\u5316\u7f16\u7a0b\u7684\u7406\u89e3\uff0c\u52a0\u5f3a\u5bf9\u786c\u4ef6\u7f16\u7a0b\u8bed\u8a00 Verilog \u7684\u638c\u63e1\u3002  ### 1.1.4 \u5b9e\u9a8c\u91cd\u70b9\u4e0e\u96be\u70b9  <p>Coe \u6587\u4ef6\u7684\u751f\u6210\u4e0e IP \u6838\u7684\u5236\u4f5c\uff1b\u952e\u76d8\u7684\u8f93\u5165\uff1bVGA \u7684\u6b63\u5e38\u663e\u793a\uff1b \u6e38\u620f\u4ea4\u4e92\u903b\u8f91\u7684\u8bbe\u8ba1\u3002  # \u7b2c\u4e8c\u7ae0 2048\u6e38\u620f\u8bbe\u8ba1\u601d\u8def\u4e0e\u539f\u7406  ## 2.1 \u57fa\u4e8e FPGA \u7684\u6e38\u620f\u8bbe\u8ba1\u76f8\u5173\u5185\u5bb9  ### 2.1.1 VGA \u663e\u793a  <p>VGA(Video Graphics Array)\uff0c\u4fe1\u53f7\u7c7b\u578b\u4e3a\u6a21\u62df\u7c7b\u578b\uff0c\u663e\u793a\u5361\u7aef\u7684\u63a5\u53e3\u4e3a 15 \u9488\u6bcd\u63d2\u5ea7\u3002VGA( Video Graphics Array)\u4f5c\u4e3a\u4e00\u79cd\u6807\u51c6\u7684\u663e\u793a\u63a5\u53e3\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\u3002VGA \u5728\u4efb\u4f55\u65f6\u523b\u90fd\u5fc5\u987b\u5de5\u4f5c\u5728\u67d0\u4e00\u663e\u793a\u6a21\u5f0f\u4e4b\u4e0b\uff0c\u5176\u663e\u793a\u6a21\u5f0f\u5206\u4e3a\u5b57\u7b26\u663e\u793a\u6a21\u5f0f\u548c\u56fe\u5f62\u663e\u793a\u6a21\u5f0f\u3002\u800c\u5728\u5e94\u7528\u4e2d\uff0c\u8ba8\u8bba\u7684\u90fd\u662f\u56fe\u5f62\u663e\u793a\u6a21\u5f0f\u3002  <p>VGA \u63a5\u53e3\u662f\u4e00\u79cd D \u578b\u63a5\u53e3\uff0c\u4e0a\u9762\u5171\u6709 15 \u9488\u5b54\uff0c\u5206\u6210\u4e09\u6392\uff0c\u6bcf\u6392\u4e94\u4e2a\u3002\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u662f 3 \u6839 RGB \u5f69\u8272\u5206\u91cf\u4fe1\u53f7\u548c 2 \u6839\u626b\u63cf\u540c\u6b65\u4fe1\u53f7 HSYNC \u548c VSYNC \u9488\u3002\u5176\u5f15\u811a\u7f16\u53f7\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a  ![Alt text](image.png)![Alt text](image-1.png)  <p>VGA \u663e\u793a\u5668\u626b\u63cf\u65b9\u5f0f\u4ece\u5c4f\u5e55\u5de6\u4e0a\u89d2\u4e00\u70b9\u5f00\u59cb\uff0c\u4ece\u5de6\u5411\u53f3\u9010\u70b9\u626b\u63cf\uff0c\u6bcf\u626b\u63cf\u5b8c\u4e00\u884c,\u7535\u5b50\u675f\u56de\u5230\u5c4f\u5e55\u7684\u5de6\u8fb9\u4e0b\u4e00\u884c\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5728\u8fd9\u671f\u95f4\uff0cCRT \u5bf9\u7535\u5b50\u675f\u8fdb\u884c\u6d88\u9690\uff0c\u6bcf\u884c\u7ed3\u675f\u65f6\uff0c\u7528\u884c\u540c\u6b65\u4fe1\u53f7\u8fdb\u884c\u540c\u6b65\uff1b\u5f53\u626b\u63cf\u5b8c\u6240\u6709\u7684\u884c\uff0c\u5f62\u6210\u4e00\u5e27\uff0c\u7528\u573a\u540c\u6b65\u4fe1\u53f7\u8fdb\u884c\u573a\u540c\u6b65\uff0c\u5e76\u4f7f\u626b\u63cf\u56de\u5230\u5c4f\u5e55\u5de6\u4e0a\u65b9\uff0c\u540c\u65f6\u8fdb\u884c\u573a\u6d88\u9690,\u5f00\u59cb\u4e0b\u4e00\u5e27\u3002\u5b8c\u6210\u4e00\u884c\u626b\u63cf\u7684\u65f6\u95f4\u79f0\u4e3a\u6c34\u5e73\u626b\u63cf\u65f6\u95f4\uff0c\u5176\u5012\u6570\u79f0\u4e3a\u884c\u9891\u7387\uff1b\u5b8c\u6210\u4e00\u5e27\uff08\u6574\u5c4f\uff09\u626b\u63cf\u7684\u65f6\u95f4\u79f0\u4e3a\u5782\u76f4\u626b\u63cf\u65f6\u95f4\uff0c\u5176\u5012\u6570\u79f0\u4e3a\u573a\u9891\u7387\uff0c\u5373\u5c4f\u5e55\u7684\u5237\u65b0\u9891\u7387\uff0c\u5e38\u89c1\u7684\u6709 60Hz\uff0c75Hz \u7b49\u7b49\uff0c\u4f46\u6807\u51c6\u7684 VGA \u663e\u793a\u7684\u573a\u9891 60Hz\u3002\u5176\u626b\u63cf\u793a\u610f\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a  ![Alt text](image-2.png)  VGA \u7684\u8be6\u7ec6\u65f6\u5e8f\u5982\u4e0b\u56fe\u6240\u793a\uff1a  ![Alt text](image-3.png)  \u603b\u7684\u6765\u8bf4\uff0cVGA \u7684\u65f6\u5e8f\u4e3b\u8981\u5305\u62ec\u884c\u65f6\u5e8f\u4e0e\u573a\u65f6\u5e8f\u4e24\u4e2a\u90e8\u5206\u3002  \u5176\u4e2d\u884c\u65f6\u5e8f\u4e3b\u8981\u5305\u62ec\uff1a\u884c\u540c\u6b65(Hor Sync)\u3001\u884c\u6d88\u9690(Hor Back Porch)\u3001\u884c\u89c6\u9891\u6709\u6548(Hor Active Video)\u548c\u884c\u524d\u80a9(Hor Front Porch)\u8fd9\u56db\u4e2a\u53c2\u6570\uff0c\u884c\u65f6\u5e8f\u7684\u65f6\u5e8f\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a  ![Alt text](image-4.png)  \u800c\u573a\u65f6\u5e8f\u4e3b\u8981\u5305\u62ec\uff1a\u573a\u540c\u6b65(Ver Sync)\u3001\u573a\u6d88\u9690(Ver Back Porch)\u3001\u573a\u89c6\u9891\u6709\u6548(Ver Active Video)\u548c\u573a\u524d\u80a9(Ver Front Porch)\u8fd9\u56db\u4e2a\u53c2\u6570\uff0c\u573a\u65f6\u5e8f\u7684\u65f6\u5e8f\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a  ![Alt text](image-5.png)  \u9700\u8981\u6ce8\u610f\u7684\u6709\u4e09\u70b9\uff1a - \u884c\u65f6\u5e8f\u662f\u4ee5\u201d\u50cf\u7d20\u201d\u4e3a\u5355\u4f4d\u7684\uff0c\u573a\u65f6\u5e8f\u662f\u4ee5\u201d\u884c\u201d\u4e3a\u5355\u4f4d\u7684\u3002 - VGA \u5de5\u4e1a\u6807\u51c6\u663e\u793a\u6a21\u5f0f\u8981\u6c42\uff1a\u884c\u540c\u6b65\uff0c\u573a\u540c\u6b65\u90fd\u4e3a\u8d1f\u6781\u6027\uff0c\u5373\u540c\u6b65\u8109\u51b2\u8981\u6c42\u662f\u8d1f\u8109\u51b2\u3002 - VGA \u884c\u65f6\u5e8f\u5bf9\u884c\u540c\u6b65\u65f6\u95f4\u3001\u6d88\u9690\u65f6\u95f4\u3001\u884c\u89c6\u9891\u6709\u6548\u65f6\u95f4\u548c\u884c\u524d\u80a9\u65f6\u95f4\u6709\u7279\u5b9a\u7684\u89c4\u8303\uff0c\u573a\u65f6\u5e8f\u4e5f\u662f\u5982\u6b64\u3002\u5e38\u7528 VGA \u5206\u8fa8\u7387\u65f6\u5e8f\u53c2\u6570\u5982\u4e0b\u8868\u6240\u793a\uff1a ![Alt text](image-6.png)  ### 2.1.2 PS2 \u952e\u76d8\u8f93\u5165  <p>PS/2 \u901a\u4fe1\u534f\u8bae\u662f\u4e00\u79cd\u53cc\u5411\u540c\u6b65\u4e32\u884c\u901a\u4fe1\u534f\u8bae\u3002\u901a\u4fe1\u7684\u4e24\u7aef\u901a\u8fc7 CLOCK(\u65f6\u949f\u811a)\u540c\u6b65\uff0c\u5e76\u901a\u8fc7\u56fd DATA(\u6570\u636e\u811a)\u4ea4\u6362\u6570\u636e\u3002\u4e00\u822c\u4e24\u8bbe\u5907\u95f4\u4f20\u8f93\u6570\u636e\u7684\u6700\u5927\u65f6\u949f\u9891\u7387\u662f 33kHz\uff0c\u5927\u591a\u6570 PS/2 \u8bbe\u5907\u5de5\u4f5c\u5728 10--20kHz\u3002\u63a8\u8350\u503c\u5728 15kHz \u5de6\u53f3\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cCLOCK \u9ad8\u3001\u4f4e\u7535\u5e73\u7684\u6301\u7eed\u65f6\u95f4\u90fd\u4e3a 40us\u3002\u6bcf\u4e00\u6570\u636e\u5e27\u5305\u542b 11-12 \u4f4d\uff0c\u5177\u4f53\u542b\u4e49\u5982\u4e0b\u56fe\u6240\u793a\uff1a  | \u6570\u636e | \u542b\u4e49 | | --------- | ------------ | | 1\u4e2a\u8d77\u59cb\u4f4d | \u603b\u662f\u903b\u8f910 | | 8\u4e2a\u6570\u636e\u4f4d | (LSB)\u4f4e\u4f4d\u5728\u524d | | 1\u4e2a\u5947\u5076\u68c0\u9a8c\u4f4d | \u5947\u6821\u9a8c | | 1\u4e2a\u505c\u6b62\u4f4d | \u603b\u662f\u903b\u8f911 | | 1\u4e2a\u5e94\u7b54\u4f4d | \u4ec5\u7528\u5728\u4e3b\u673a\u5bf9\u8bbe\u5907\u7684\u901a\u4fe1\u4e2d |  <p>\u6570\u636e\u5728 PS/2 \u65f6\u949f\u7684\u4e0b\u964d\u6cbf\u8bfb\u53d6\uff0cPS/2 \u7684\u65f6\u949f\u9891\u7387\u4e3a 10\u201416.7kHz\u3002\u5bf9\u4e8e PS/2 \u8bbe\u5907\uff0c\u4e00\u822c\u6765\u8bf4\u4ece\u65f6\u949f\u8109\u51b2\u7684\u4e0a\u5347\u6cbf\u5230\u4e00\u4e2a\u6570\u636e\u8f6c\u53d8\u7684\u65f6\u95f4\u81f3\u5c11\u8981\u6709 5us\uff1b\u6570\u636e\u53d8\u5316\u5230\u4e0b\u964d\u6cbf\u7684\u65f6\u95f4\u81f3\u5c11\u8981\u6709 5us\uff0c\u5e76\u4e14\u4e0d\u5927\u4e8e 25us\uff0c\u8fd9\u4e2a\u65f6\u5e8f\u975e\u5e38\u91cd\u8981\u5e94\u8be5\u4e25\u683c\u9075\u5faa\u3002\u4e3b\u673a\u53ef\u4ee5\u518d\u7b2c 11 \u4e2a\u65f6\u949f\u8109\u51b2\u505c\u6b62\u4f4d\u4e4b\u524d\u628a\u65f6\u949f\u7ebf\u62c9\u4f4e\uff0c\u4f7f\u8bbe\u5907\u653e\u5f03\u53d1\u9001\u5f53\u524d\u5b57\u8282\uff0c\u5f53\u7136\u8fd9\u79cd\u60c5\u51b5\u6bd4\u8f83\u5c11\u89c1\u3002\u5728\u505c\u6b62\u4f4d\u53d1\u9001\u540e\u8bbe\u5907\u5728\u53d1\u9001\u4e0b\u4e2a\u5305\u524d\u5e94\u8be5\u81f3\u5c11\u7b49\u5f85 50us\uff0c\u7ed9\u4e3b\u673a\u65f6\u95f4\u505a\u76f8\u5e94\u7684\u5904\u7406\u3002\u4e0d\u8fc7\u4e3b\u673a\u5904\u7406\u63a5\u6536\u5230\u7684\u5b57\u8282\u65f6\u4e00\u822c\u4f1a\u6291\u5236\u53d1\u9001(\u4e3b\u673a\u5728\u6536\u5230\u6bcf\u4e2a\u5305\u65f6\u901a\u5e38\u81ea\u52a8\u505a\u8fd9\u4e2a)\u3002\u5728\u4e3b\u673a\u91ca\u653e\u6291\u5236\u540e\uff0c\u8bbe\u5907\u81f3\u5c11\u5e94\u8be5\u5728\u53d1\u9001\u4efb\u4f55\u6570\u636e\u524d\u7b49 50us\u3002  ### 2.1.3 \u53ef\u7f16\u8f91\u9635\u5217\u903b\u8f91  <p>PAL \u5668\u4ef6\u7531\u53ef\u7f16\u7a0b\u7684\u4e0e\u9635\u5217\u3001\u56fa\u5b9a\u7684\u6216\u9635\u5217\u548c\u8f93\u51fa\u53cd\u9988\u5355\u5143\u7ec4\u6210\u3002\u4e0d\u540c\u578b\u53f7 PAL \u5668\u4ef6\u6709\u4e0d\u540c\u7684\u53ef\u7f16\u7a0b\u9635\u5217\u903b\u8f91\u8f93\u51fa\u548c\u53cd\u9988\u7ed3\u6784\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u7ec4\u5408\u903b\u8f91\u7535\u8def\u548c\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u7684\u8bbe\u8ba1\uff0c\u662f\u4e00\u79cd\u53ef\u7a0b\u5f0f\u5316\u7684\u88c5\u7f6e\u3002PLA \u5177\u6709\u4e00\u7ec4\u53ef\u7a0b\u5f0f\u5316\u7684 AND \u9636\uff0cAND \u9636\u4e4b\u540e\u8fde\u63a5\u4e00\u7ec4\u53ef\u7a0b\u5f0f\u5316\u7684 OR \u9636\uff0c\u5982\u6b64\u53ef\u4ee5\u8fbe\u5230\uff1a\u53ea\u5728\u5408\u4e4e\u8bbe\u5b9a\u6761\u4ef6\u65f6\u624d\u5141\u8bb8\u4ea7\u751f\u903b\u8f91\u8baf\u53f7\u8f93\u51fa\u3002  <p>PLA \u5982\u6b64\u7684\u903b\u8f91\u95f8\u5e03\u5c40\u80fd\u7528\u6765\u89c4\u5212\u5927\u91cf\u7684\u903b\u8f91\u51fd\u5f0f\uff0c\u8fd9\u4e9b\u903b\u8f91\u51fd\u5f0f\u5fc5\u987b\u5148\u4ee5\u79ef\u9879\uff08\u6709\u65f6\u662f\u591a\u4e2a\u79ef\u9879\uff09\u7684\u539f\u59cb\u5f62\u5f0f\u8fdb\u884c\u9f50\u4e00\u5316\u3002\u5728 PLA \u7684\u5e94\u7528\u4e2d\uff0c\u6709\u4e00\u79cd\u662f\u7528\u6765\u63a7\u5236\u8d44\u6599\u8def\u5f84\uff0c\u5728\u6307\u4ee4\u96c6\u5185\u4e8b\u5148\u5b9a\u4e49\u597d\u903b\u8f91\u72b6\u6001\uff0c\u5e76\u7528\u6b64\u6765\u4ea7\u751f\u4e0b\u4e00\u4e2a\u903b\u8f91\u72b6\u6001\uff08\u900f\u8fc7\u6761\u4ef6\u5206\u652f\uff09\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u76ee\u524d\u673a\u5668\uff08\u6307\u6574\u4e2a\u903b\u8f91\u7cfb\u7edf\uff09\u5904\u4e8e\u4e8c\u53f7\u72b6\u6001\uff0c\u5982\u679c\u63a5\u4e0b\u6765\u7684\u6267\u884c\u6307\u4ee4\u4e2d\u542b\u6709\u4e00\u4e2a\u7acb\u5373\u503c\uff08\u4fa6\u6d4b\u5230\u7acb\u5373\u503c\u7684\u680f\u4f4d\uff09\u65f6\uff0c\u673a\u5668\u5c31\u4ece\u7b2c\u4e8c\u72b6\u6001\u8f6c\u6210\u56db\u53f7\u72b6\u6001\uff0c\u5e76\u4e14\u4e5f\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b9a\u4e49\u8fdb\u5165\u7b2c\u56db\u72b6\u6001\u540e\u7684\u63a5\u7eed\u52a8\u4f5c\u3002\u56e0\u6b64 PLA \u7b49\u4e8e\u626e\u6f14\uff08\u6676\u7247\uff09\u7cfb\u7edf\u5185\u542b\u7684\u903b\u8f91\u72b6\u6001\u56fe\uff08state diagram\uff09\u89d2\u8272\u3002  ### 2.1.4  \u72b6\u6001\u673a\u7684\u8bbe\u8ba1   <p>\u6709\u9650\u72b6\u6001\u673a\uff08Finite State Machine FSM\uff09\u662f\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1\u4e2d\u7ecf\u5e38\u91c7\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u5c24\u5176\u9002\u5408\u8bbe\u8ba1\u6570\u5b57\u7cfb\u7edf\u7684\u63a7\u5236\u6a21\u5757\uff0c\u5728\u4e00\u4e9b\u9700\u8981\u63a7\u5236\u9ad8\u901f\u5668\u4ef6\u7684\u573a\u5408\uff0c\u7528\u72b6\u6001\u673a\u8fdb\u884c\u8bbe\u8ba1\u662f\u4e00\u79cd\u5f88\u597d\u7684\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6848\uff0c\u5177\u6709\u901f\u5ea6\u5feb\u3001\u7ed3\u6784\u7b80\u5355\u3001\u53ef\u9760\u6027\u9ad8\u7b49\u4f18\u70b9\u3002\u6709\u9650\u72b6\u6001\u673a\u975e\u5e38\u9002\u5408\u7528 FPGA \u5668\u4ef6\u5b9e\u73b0\uff0c\u7528 Verilog HDL \u7684 case \u8bed\u53e5\u80fd\u5f88\u597d\u5730\u63cf\u8ff0\u57fa\u4e8e\u72b6\u6001\u673a\u7684\u8bbe\u8ba1\uff0c\u518d\u901a\u8fc7 EDA \u5de5\u5177\u8f6f\u4ef6\u7684\u7efc\u5408\uff0c\u4e00\u822c\u53ef\u4ee5\u751f\u6210\u6027\u80fd\u6781\u4f18\u7684\u72b6\u6001\u673a\u7535\u8def\uff0c\u4ece\u800c\u4f7f\u5176\u5728\u6267\u884c\u65f6\u95f4\u3001\u8fd0\u884c\u901f\u5ea6\u548c\u5360\u7528\u8d44\u6e90\u7b49\u65b9\u9762\u4f18\u4e8e\u7528 CPU \u5b9e\u73b0\u7684\u65b9\u6848\u3002  <p>\u6709\u9650\u72b6\u6001\u673a\u4e00\u822c\u5305\u62ec\u7ec4\u5408\u903b\u8f91\u548c\u5bc4\u5b58\u5668\u903b\u8f91\u4e24\u90e8\u5206\uff0c\u5bc4\u5b58\u5668\u903b\u8f91\u7528\u4e8e\u5b58\u50a8\u72b6\u6001\uff0c\u7ec4\u5408\u903b\u8f91\u7528\u4e8e\u72b6\u6001\u8bd1\u7801\u548c\u4ea7\u751f\u8f93\u51fa\u4fe1\u53f7\u3002\u6839\u636e\u8f93\u51fa\u4fe1\u53f7\u4ea7\u751f\u65b9\u6cd5\u7684\u4e0d\u540c\uff0c\u72b6\u6001\u673a\u53ef\u5206\u4e3a\u4e24\u7c7b\uff1a \u7c73\u91cc\u578b(Mealy)\u548c\u6469\u5c14\u578b(Moore)\u3002\u6469\u5c14\u578b\u72b6\u6001\u673a\u7684\u8f93\u51fa\u53ea\u662f\u5f53\u524d\u72b6\u6001\u7684\u51fd\u6570\u3002\u7c73\u91cc\u578b\u72b6\u6001\u673a\u7684\u8f93\u51fa\u662f\u5728\u8f93\u5165\u53d8\u5316\u540e\u7acb\u5373\u53d8\u5316\u7684\uff0c\u4e0d\u4f9d\u8d56\u65f6\u949f\u4fe1\u53f7\u7684\u540c\u6b65\uff0c\u6469\u5c14\u578b\u72b6\u6001\u673a\u7684\u8f93\u5165\u53d1\u751f\u53d8\u5316\u65f6\u8fd8\u9700\u8981\u7b49\u5f85\u65f6\u949f\u7684\u5230\u6765\uff0c\u5fc5\u987b\u5728\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\u624d\u4f1a\u5bfc\u81f4\u8f93\u51fa\u7684\u53d8\u5316\uff0c\u56e0\u6b64\u6bd4\u7c73\u91cc\u578b\u72b6\u6001\u673a\u8981\u591a\u7b49\u5f85\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u3002  ### 2.1.5 \u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00  <p>Verilog HDL \u662f\u4e00\u79cd\u7528\u4e8e\u6570\u5b57\u7cfb\u7edf\u8bbe\u8ba1\u7684\u8bed\u8a00\u3002\u7528 Verilog HDL \u63cf\u8ff0\u7684\u7535\u8def\u8bbe\u8ba1\u5c31\u662f\u8be5\u7535\u8def\u7684 Verilog HDL \u6a21\u578b\u4e5f\u79f0\u4e3a\u6a21\u5757\u3002Verilog HDL \u65e2\u662f\u4e00\u79cd\u884c\u4e3a\u63cf\u8ff0\u7684\u8bed\u8a00\u4e5f\u662f\u4e00\u79cd\u7ed3\u6784\u63cf\u8ff0\u7684\u8bed\u8a00\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e0\u8bba\u63cf\u8ff0\u7535\u8def\u529f\u80fd\u884c\u4e3a\u7684\u6a21\u5757\u6216\u63cf\u8ff0\u5143\u5668\u4ef6\u6216\u8f83\u5927\u90e8\u4ef6\u4e92\u8fde\u7684\u6a21\u5757\u90fd\u53ef\u4ee5\u7528 Verilog \u8bed\u8a00\u6765\u5efa\u7acb\u7535\u8def\u6a21\u578b\u3002\u5982\u679c\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u77e9\u7f16\u5199\uff0c\u529f\u80fd\u884c\u4e3a\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u5de5\u5177\u81ea\u52a8\u5730\u8f6c\u6362\u4e3a\u95e8\u7ea7\u4e92\u8fde\u6a21\u5757\u3002Verilog \u6a21\u578b\u53ef\u4ee5\u662f\u5b9e\u9645\u7535\u8def\u7684\u4e0d\u540c\u7ea7\u522b\u7684\u62bd\u8c61\u3002\u4e00\u4e2a\u590d\u6742\u7535\u8def\u7cfb\u7edf\u7684\u5b8c\u6574 Verilog HDL \u6a21\u578b\u662f\u7531\u82e5\u5e72\u4e2a Verilog HDL \u6a21\u5757\u6784\u6210\u7684\uff0c\u6bcf\u4e00\u4e2a\u6a21\u5757\u53c8\u53ef\u4ee5\u7531\u82e5\u5e72\u4e2a\u5b50\u6a21\u5757\u6784\u6210\u3002\u5176\u4e2d\u6709\u4e9b\u6a21\u5757\u9700\u8981\u7efc\u5408\u6210\u5177\u4f53\u7535\u8def\uff0c\u800c\u6709\u4e9b\u6a21\u5757\u53ea\u662f\u4e0e\u7528\u6237\u6240\u8bbe\u8ba1\u7684\u6a21\u5757\u6709\u4ea4\u4e92\u8054\u7cfb\u7684\u73b0\u5b58\u7535\u8def\u6216\u6fc0\u52b1\u4fe1\u53f7\u6e90\u3002\u5229\u7528 Verilog HDL \u8bed\u8a00\u7ed3\u6784\u6240\u63d0\u4f9b\u7684\u8fd9\u79cd\u529f\u80fd\u5c31\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u6a21\u5757\u95f4\u7684\u6e05\u6670\u5c42\u6b21\u7ed3\u6784\u6765\u63cf\u8ff0\u6781\u5176\u590d\u6742\u7684\u5927\u578b\u8bbe\u8ba1\uff0c\u5e76\u5bf9\u6240\u4f5c\u8bbe\u8ba1\u7684\u903b\u8f91\u7535\u8def\u8fdb\u884c\u4e25\u683c\u7684\u9a8c\u8bc1\u3002Verilog HDL \u4f5c\u4e3a\u4e00\u79cd\u9ad8\u7ea7\u7684\u786c\u4ef6\u63cf\u8ff0\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e0e C \u8bed\u8a00\u7684\u98ce\u683c\u6709\u8bb8\u591a\u7c7b\u4f3c\u4e4b\u5904\u3002\u5176\u4e2d\u6709\u8bb8\u591a\u8bed\u53e5\u5982\uff1aif \u8bed\u53e5\u3001case \u8bed\u53e5\u7b49\u548c C \u8bed\u8a00\u4e2d\u7684\u5bf9\u5e94\u8bed\u53e5\u5341\u5206\u76f8\u4f3c\u3002  ### 2.1.6 \u6280\u672f\u5de5\u5177  #### 1. ISE \u8f6f\u4ef6  <p>ISE \u662f\u4f7f\u7528 XILINX \u7684 FPGA \u7684\u5fc5\u5907\u7684\u8bbe\u8ba1\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u5b8c\u6210 FPGA \u5f00\u53d1\u7684\u5168\u90e8\u6d41\u7a0b\uff0c\u5305\u62ec\u8bbe\u8ba1\u8f93\u5165\u3001\u4eff\u771f\u3001\u7efc\u5408\u3001\u5e03\u5c40\u5e03\u7ebf\u3001\u751f\u6210 BIT \u6587\u4ef6\u3001\u914d\u7f6e\u4ee5\u53ca\u5728\u7ebf\u8c03\u8bd5\u7b49\uff0c\u529f\u80fd\u975e\u5e38\u5f3a\u5927\u3002ISE \u9664\u4e86\u529f\u80fd\u5b8c\u6574\uff0c\u4f7f\u7528\u65b9\u4fbf\u5916\uff0c\u5b83\u7684\u8bbe\u8ba1\u6027\u80fd\u4e5f\u975e\u5e38\u597d\uff0c\u4ee5\u96c6\u6210\u7684\u65f6\u5e8f\u6536\u655b\u6d41\u7a0b\u6574\u5408\u4e86\u589e\u5f3a\u6027\u7269\u7406\u7efc\u5408\u4f18\u5316\uff0c\u63d0\u4f9b\u6700\u4f73\u7684\u65f6\u949f\u5e03\u5c40\u3001\u66f4\u597d\u7684\u5c01\u88c5\u548c\u65f6\u5e8f\u6536\u655b\u6620\u5c04\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u9ad8\u7684\u8bbe\u8ba1\u6027\u80fd\u3002  #### 2. SWORD \u677f  <p>\u91c7\u7528\u5f00\u653e\u5f0f\u4f53\u7cfb\u6784\u67b6\u548c 32 \u4f4d\u5b58\u50a8\u5c42\u6b21\u7ed3\u6784\uff0c\u901a\u7528\u6027\u5f3a\uff0c\u9002\u7528\u6027\u7075\u6d3b\u3002\u5b9e\u9a8c\u65b9\u6cd5\u91c7\u7528\u57fa\u4e8e FPGA \u5b9e\u4f53\u7684\u865a\u62df\u5b9e\u9a8c\u7bb1\u548c SOC \u96c6\u6210\u6280\u672f\uff0c\u652f\u6301\u4e2a\u6027\u5316\u5f00\u53d1\u3001\u8bfe\u7a0b\u8bbe\u8ba1\u548c\u521b\u65b0\u5b9e\u8df5\u3002\u7cfb\u7edf\u8d44\u6e90\u53ef\u5f88\u597d\u5730\u652f\u6301\u6570\u5b57\u7535\u8def\u3001\u8ba1\u7b97\u673a\u7ec4\u6210\u3001\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u3001\u63a5\u53e3\u901a\u8baf\u3001\u7f16\u8bd1\u6280\u672f\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u8ba1\u7b97\u673a\u7f51\u7edc\u3001\u57fa\u4e8e IP \u6838\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u591a\u5a92\u4f53\u7b49\u8bfe\u7a0b\u7684\u6559\u5b66\u5b9e\u8df5\u3002  #### 3. \u8ba1\u7b97\u673a <p>\u642d\u8f7d\u6709ISE14.7\u5f00\u53d1\u73af\u5883\uff0c\u5b89\u88c5\u6709\u5fc5\u8981\u7684\u8f6f\u4ef6\uff0c\u80fd\u8fdb\u884cVerilog\u4ee3\u7801\u7684\u7efc\u5408\u3001\u7efc\u5408\u3001\u5e03\u5c40\u5e03\u7ebf\u548c\u6bd4\u7279\u6d41\u7684\u70e7\u5f55\u3002  #### 4. WPS Office  <p>\u7528\u4e8e\u5bf9\u56fe\u7247\u8fdb\u884c\u7f8e\u672f\u5904\u7406\u548c\u52a0\u5de5\uff0c\u540c\u65f6\u5bf9\u56fe\u7247\u50cf\u7d20\u8fdb\u884c\u9002\u5f53\u88c1\u526a\u4ee5\u9002\u5e94 VGA \u663e\u793a\u3002  #### 5. Python  <p>\u901a\u8fc7\u7f16\u5199 Python \u722c\u866b\u7a0b\u5e8f\uff0c\u722c\u53d6 https://play2048.co/ \u4e0a\u76f8\u5173\u8d44\u6599\u4e0e\u56fe\u7247\u7d20\u6750\uff0c\u4ee5\u4fbf\u540e\u7eed\u5904\u7406\u4f7f\u7528\u3002  <p>\u901a\u8fc7\u7f16\u5199 Python \u7a0b\u5e8f\uff0c\u628a png \u56fe\u7247\u8f6c\u4e3a 3 \u4f4d 16 \u8fdb\u5236 coe \u6587\u4ef6\uff0c\u4f7f\u4e4b\u4e0e VGA \u663e\u793a\u76f8\u9002\u5e94\u3002  ### 2.1.7 \u8bfe\u7a0b\u8bbe\u8ba1\u65b9\u6cd5  <p>\u901a\u8fc7 WPS \u8bbe\u8ba1\u6e38\u620f\u6e38\u620f\u753b\u9762\u548c\u8d34\u753b\uff0c\u901a\u8fc7 Python \u7f16\u5199\u7a0b\u5e8f\u5b9e\u73b0\u7d20\u6750\u722c\u53d6\u548c coe \u6587\u4ef6\u751f\u6210\uff0c\u5229\u7528 Verilog HDL \u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\u8bbe\u8ba1\u6e38\u620f\uff0c\u5b9e\u73b0\u7528 PS2 \u952e\u76d8\u8f93\u5165\u6570\u636e\uff0c\u7528 VGA \u8f93\u51fa\u663e\u793a\u6570\u636e\uff0c\u4f7f\u7528 ISE \u8f6f\u4ef6\u751f\u6210 bit \u6587\u4ef6\uff0c\u5229\u7528\u53ef\u7f16\u7a0b\u9635\u5217\u903b\u8f91\u70e7\u5728 SWORD \u5b9e\u9a8c\u7535\u8def\u677f\u4e0a\uff0c\u6700\u7ec8\u5b9e\u73b0\u4eba\u673a\u4e92\u52a8\u6e38\u620f\u3002  ## 2.2 \u57fa\u4e8e FPGA \u7684 2048 \u6e38\u620f\u8bbe\u8ba1\u65b9\u6848  ### 2.2.1 \u6280\u672f\u9700\u6c42  <p>VGA \u626b\u63cf\u663e\u793a\u5f00\u59cb\u754c\u9762\uff0c\u6e38\u620f\u754c\u9762\u4ee5\u53ca\u7ed3\u675f\u754c\u9762\uff1bPS2 \u952e\u76d8\u8f93\u5165\u6570\u636e\u5904\u7406\u4e3a\u63a7\u5236\u65b9\u5757\u79fb\u52a8\u65b9\u5411\u4fe1\u53f7\u3001\u754c\u9762\u5207\u6362\u4fe1\u53f7\uff1b\u6838\u5fc3\u6a21\u5757\u5bf9\u8f93\u5165\u4fe1\u53f7\u7528\u72b6\u6001\u673a\u8fdb\u884c\u903b\u8f91\u5904\u7406\uff0c\u8f93\u51fa\u3002  ### 2.2.2 \u8bbe\u8ba1\u65b9\u6848  #### 1. \u8f93\u5165\u548c\u8f93\u51fa  <p>\u672c\u6e38\u620f\u7528\u5916\u63a5\u952e\u76d8\u6216\u5f00\u5173\u8fdb\u884c\u8f93\u5165\uff0c\u91c7\u7528\u56db\u4e2a\u65b9\u5411\u6309\u952e\uff0c\u5206\u522b\u63a7\u5236\u65b9\u5757\u8fdb\u884c\u4e0a\u4e0b\u5de6\u53f3\u7684\u79fb\u52a8\uff1bP\u952e\u63a7\u5236\u6e38\u620f\u4ece\u91cd\u65b0\u5f00\u59cb\uff1b\u5f00\u5173AF13\u63a7\u5236\u6e38\u620f\u91cd\u65b0\u56de\u5230\u5f00\u59cb\u754c\u9762\u3002\u8f93\u51fa\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u4e00\u90e8\u5206\u4e3a VGA \u6a21\u5757\u7684\u663e\u793a\u5668\u6e38\u620f\u754c\u9762\u8f93\u51fa\uff1b\u53e6\u4e00\u90e8\u5206\u4e3a\u4e3b\u677f\u4e0a\u4e03\u6bb5\u6570\u7801\u7ba1\u663e\u793a\u7684\u6e38\u620f\u5f97\u5206\u3002  #### 2. \u6574\u4f53\u8bbe\u8ba1\u65b9\u6848  ![Alt module](photo2/module.png)  \u5206\u6790\u8bf4\u660e\uff1aVGA \u63a5\u53e3\u8d1f\u8d23 VGA \u663e\u793a\u5c4f\u4e0e\u6838\u5fc3\u6a21\u5757\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\uff1bPS2 \u63a5\u53e3\u8d1f\u8d23\u952e\u76d8\u4e0e\u6838\u5fc3\u6a21\u5757\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\uff0c\u5b9e\u73b0\u4e30\u5bcc\u7684\u4eba\u673a\u4ea4\u4e92\uff1b\u4e3b\u677f\u5f00\u5173 sw[3:0]\u3001rst\u4f5c\u4e3a\u63a7\u5236\u4e0e\u64cd\u4f5c\u4fe1\u53f7\uff1bget_vgadata\u6a21\u5757\u83b7\u53d6\u5f53\u524d\u56fe\u7247\u5730\u5740\u4fe1\u606f\uff1bROM \u5b58\u50a8\u9700\u8981\u663e\u793a\u7684\u56fe\u7247\u989c\u8272\u4fe1\u606f\uff0c\u4f7f\u753b\u9762\u66f4\u52a0\u7cbe\u7f8e\uff1b2048\u6e38\u620f\u903b\u8f91\u6838\u5fc3\u6a21\u5757\u5904\u7406\u8f93\u5165\u6570\u636e\uff0c\u8fdb\u884c\u4e3b\u903b\u8f91\u7684\u72b6\u6001\u673a\u8fd0\u884c\uff0c\u5e76\u8fdb\u884c\u8f93\u51fa\u3002  #### 3. \u6e38\u620f\u6574\u4f53\u6d41\u7a0b  ![Alt module](photo2/totalgameflow.png)  #### 4. \u6309\u952e\u8f93\u5165\u4ea4\u4e92\u6d41\u7a0b  ![Alt module](photo2/singlebtn.png)  #### 5. \u6a21\u5757\u5de5\u4f5c\u6d41\u7a0b  ##### \uff081\uff09vga\u663e\u793a\u6a21\u5757 ![Alt module](photo2/vga2.png)  ##### \uff082\uff09\u6e38\u620f\u903b\u8f91\u6a21\u5757 ![Alt module](photo2/logicpart.png)  ##### \uff083\uff09\u80dc\u8d1f\u5224\u5b9a\u6a21\u5757 ![Alt module](photo2/state.png)    # \u7b2c\u4e09\u7ae0 2048 \u6e38\u620f\u8bbe\u8ba1\u5b9e\u73b0  ## 3.1 \u5b9e\u73b0\u8fc7\u7a0b  ### 3.1.1 \u7d20\u6750\u751f\u6210\u90e8\u5206  #### 3.1.1.1 png \u56fe\u7247\u683c\u5f0f\u8f6c coe \u6587\u4ef6 ![Alt text](image-7.png)  \u8be5\u90e8\u5206\u4f7f\u7528 python \u5b8c\u6210\uff0c\u5b9e\u73b0\u8bed\u8a00\u5177\u4f53\u5982\u4e0b\uff1a  <pre><code>import numpy as np\nfrom PIL import Image\n\n# \u5b9a\u4e49\u56fe\u50cf\u8def\u5f84\nimg_paths = ['gameover.png']\n\n# \u8bfb\u53d6\u5e76\u5904\u7406\u6bcf\u4e2a\u56fe\u50cf\uff0c\u63d0\u53d6RGB\u503c\ndef gen_img_data():\n    img_data = []\n    for idx, path in enumerate(img_paths):\n        img = Image.open(path).convert('RGB')  # \u8f6c\u6362\u4e3aRGB\u6a21\u5f0f\n   # print(img_data)\n\n    return img_data\n\n# \u5341\u8fdb\u5236\u8f6c\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u4fdd\u8bc1\u4e00\u4f4d\u6570\u8868\u793a\ndef to_hex(dec):\n    return format(dec &gt;&gt; 4, 'x')  # \u53f3\u79fb4\u4f4d\uff0c\u51cf\u5c11\u52304\u4f4d\n\n# \u5c06\u6240\u6709\u56fe\u50cf\u7684RGB\u503c\u5408\u5e76\u5230\u4e00\u4e2a.coe\u6587\u4ef6\u4e2d\uff0c\u5e76\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\ndef gen_coe(img_data):\n    with open('gameover.coe', 'w') as f:\n        f.writelines('memory_initialization_radix = 16;\\nmemory_initialization_vector =\\n')\n\n        for img in img_data:\n            for i in range(img.shape[0]):\n                for j in range(img.shape[1]):\n                    r, g, b = img[i][j]\n                    f.write(f\"{to_hex(r)}{to_hex(g)}{to_hex(b)}, \")\n\n                f.write('\\n')\n\n\n# print('1')\nimg_data = gen_img_data()\ngen_coe(img_data)\n</code></pre>  #### 3.1.1.2 coe \u6587\u4ef6\u751f\u6210 IP \u6838 \u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a 1\u3001\u521b\u5efa ip \u6838\uff0c\u547d\u540d\u3002 ![Alt text](photo2/ip1.png) 2\u3001\u9009\u62e9 Block Memory Generator\uff0c\u70b9\u51fb next\u3002 ![Alt text](photo2/ip2.png) 3\u3001\u9009\u62e9\u5185\u5b58\u7c7b\u578b\u4e3aROM ![Alt text](photo2/ip3.png) 4\u3001\u8c03\u6574\u5408\u9002\u7684\u53c2\u6570\u3002\u5176\u4e2d Write Width \u662f\u8f93\u51fa\u7684\u4f4d\u6570\uff0c\u7531\u4e8e vga \u662f 12 \u4f4d\u8f93\u51fa\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9 12\u3002Wirte Depth \u662f\u56fe\u7247\u7684\u5927\u5c0f\uff0c\u7531\u4e8e vga \u7684\u663e\u793a\u5c4f\u5927\u5c0f\u662f 640*480\uff0c\u6240\u4ee5\u6211\u4eec\u586b\u5165\u7684\u53c2\u6570\u662f 307200\uff08640*480\uff09\u3002\u7531\u5de6\u8fb9\u7684symbol \u53ef\u4ee5\u770b\u51fa\uff0cADDRA \u662f ip \u6838\u7684\u8f93\u5165\uff0c\u4e5f\u5c31\u662f\u56fe\u7247\u7684\u5730\u5740\uff0cCLKA \u662f\u626b\u63cf\u9891\u7387\uff0cDOUTA\u662f\u8f93\u51fa\u3002 ![Alt text](photo2/ip4.png) 5\u3001\u5728page4\u9009\u62e9\u60f3\u8981\u663e\u793a\u7684\u56fe\u7247\u7684coe\u6587\u4ef6\u3002 ![Alt text](photo2/ip5.png) 6\u3001\u9009\u62e9\u5b8c\u6bd5\u540e\uff0c\u70b9\u51fbgenerate\u5373\u53ef\u751f\u6210ip\u6838\uff0cip\u6838\u4f1a\u6839\u636ecoe\u6587\u4ef6\u7684\u5927\u5c0f\u6765\u52a0\u8f7d\uff0c\u6240\u4ee5\u56fe\u7247\u8d8a\u5927\uff0c\u52a0\u8f7d\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u753b\u9762\u672a\u54cd\u5e94\u7684\u73b0\u8c61\u662f\u975e\u5e38\u6b63\u5e38\u7684\u3002 7\u3001\u6210\u529f\u751f\u6210\u540e\uff0c\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u56fe\u6807 ![Alt text](photo2/ip6.png)   ### 3.1.2 \u6e38\u620f\u4e3b\u4f53\u90e8\u5206  #### 3.1.2.1 \u903b\u8f91\u5b9e\u73b0\u90e8\u5206\uff08logic_part.v\uff09  \u7531\u4e8e\u6e90\u4ee3\u7801\u8fc7\u957f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4f2a\u4ee3\u7801\u8fdb\u884c\u4ee3\u7801\u63cf\u8ff0\u3002  <pre><code>// Inputs\nvar clk, rst, keycode, keydown\nvar btn[3:0]\n\n// Outputs\nvar mmap[63:0], num[31:0]\n\n// Internal variables\nvar count, rand, i, j, temp, place\nvar map[15:0]\nvar judge, thisnumber, loop\nvar lastkey, lastbtn\n\n// Initialization\nmap[2:15] = 0\nmap[0] = 1\nmap[1] = 1\nplace = 0\njudge = 1\nthisnumber = 1\nnum = 0\n\n// Game Logic\non clock edge:\n    if (rst or (keydown and keycode == 8'h4d)):\n        // Reset\n        map[2:15] = 0\n        map[4] = 1\n        map[6] = 2\n        map[8] = 3\n        map[9] = 2\n        map[12] = 3\n        map[13] = 3\n        map[0] = 0\n        map[1] = 1\n        place = 0\n        judge = 1\n        thisnumber = 1\n        num = 0\n        lastkey = 0\n        lastbtn = 0\n    else:\n        if btn[0] == 1 and lastbtn != 4'b0001 or (keydown and keycode == 8'h6b and keycode != lastkey):\n            // Move left\n            for i in range(4):\n                temp = 0\n                for j in range(1, 4):\n                    if map[4*i+j] != 0:\n                        if map[4*i+temp] == 0:\n                            map[4*i+temp] = map[4*i+j]\n                            map[4*i+j] = 0\n                        else if map[4*i+temp] == map[4*i+j]:\n                            map[4*i+temp] = map[4*i+temp] + 1\n                            map[4*i+j] = 0\n                            for loop in range(map[4*i+temp]):\n                                thisnumber = thisnumber * 2\n                            num = num + thisnumber\n                            thisnumber = 1\n                            temp = temp + 1\n                        else:\n                            map[4*i+temp+1] = map[4*i+j]\n                            if temp+1 != j:\n                                map[4*i+j] = 0\n                            temp = temp + 1\n            // Generate random number at an empty location\n            for rand in range(16):\n                if map[place] == 0:\n                    map[place] = 1\n                    place = (place + 1) % 16\n                    judge = 0\n                else:\n                    place = (place + 1) % 16\n            judge = 1\n            lastbtn = 4'b0001\n            lastkey = 8'h6b\n        else if btn[1] == 1 and lastbtn != 4'b0010 or (keydown and keycode == 8'h74 and keycode != lastkey):\n            // Move right\n            // (similar logic as above, with adjustments for right movement)\n        else if btn[3] == 1 and lastbtn != 4'b1000 or (keydown and keycode == 8'h72 and keycode != lastkey):\n            // Move down\n            // (similar logic as above, with adjustments for down movement)\n        else if btn[2] == 1 and lastbtn != 4'b0100 or (keydown and keycode == 8'h75 and keycode != lastkey):\n            // Move up\n            // (similar logic as above, with adjustments for up movement)\n</code></pre>  #### 3.1.2.2 \u7ed3\u679c\u5224\u5b9a\u90e8\u5206 (win.v)  <pre><code>// Inputs\nvar clk, rst, keycode, keydown\nvar mmap[63:0]\n\n// Outputs\nvar win, fault\n\n// Internal variables\nvar map[15:0]\nvar count, temp, i\n\non each rising edge of clk:\n    if rst or (keydown and keycode == 8'h4d):\n        // Reset\n        win = 0\n        fault = 0\n    else:\n        temp = 0\n        count = 0\n\n        // Extracting 4-bit values from mmap\n        for i in range(16):\n            map[i] = mmap[i*4 +: 4]\n\n        // Check for win condition (presence of 2048)\n        for i in range(16):\n            if map[i] == 11:\n                win = 1\n\n        // Check for potential moves (matching adjacent tiles)\n        for i in range(4):\n            if map[i] == map[i+4] or map[i+4] == map[i+8] or map[i+8] == map[i+12]:\n                temp = 1\n\n        for i in range(0, 13, 4):\n            if map[i] == map[i+1] or map[i+1] == map[i+2] or map[i+2] == map[i+3]:\n                temp = 1\n\n        // Check for a fault (no empty positions for new numbers and no potential moves)\n        if count == 0:\n            if temp == 0:\n                fault = 1\n</code></pre>  #### 3.1.2.3\u6570\u5b57\u8f6c\u5316\u90e8\u5206  <pre><code>// Inputs\nvar clk\nvar num_in[31:0]\n\n// Outputs\nvar num_out[31:0]\n\n// Internal variables\nvar num, out_num[7:0]\n\non each rising edge of clk:\n    // Copy input to internal variable\n    num[31:0] = num_in[31:0]\n\n    // Extract digits from num\n    out_num[0] = num % 10\n    num = num / 10\n    out_num[1] = num % 10\n    num = num / 10\n    out_num[2] = num % 10\n    num = num / 10\n    out_num[3] = num % 10\n    num = num / 10\n    out_num[4] = num % 10\n    num = num / 10\n    out_num[5] = num % 10\n    num = num / 10\n    out_num[6] = num % 10\n    num = num / 10\n    out_num[7] = num % 10\n\n    // Assign digits to output in reverse order\n    num_out[3:0] = out_num[0]\n    num_out[7:4] = out_num[1]\n    num_out[11:8] = out_num[2]\n    num_out[15:12] = out_num[3]\n    num_out[19:16] = out_num[4]\n    num_out[23:20] = out_num[5]\n    num_out[27:24] = out_num[6]\n    num_out[31:28] = out_num[7]\n</code></pre>  ### 3.1.3 \u8f93\u5165\u8f93\u51fa\u90e8\u5206  #### 3.1.3.1 PS2\u952e\u76d8\uff08PS2.v\uff09  PS2\u952e\u76d8\u4f20\u8f93\u7684\u6570\u636e\u4f1a\u5728data_out\u4e2d\u8f93\u51fa  <pre><code>module PS2(\n    input clk,\n    input rst,\n    input ps2_clk, //\u952e\u76d8\u65f6\u949f\u8f93\u5165\n    input ps2_data, //\u952e\u76d8\u6570\u636e\u8f93\u5165\n    output [9:0] data_out, //\u952e\u76d8\u626b\u63cf\u8f93\u51fa\n    output ready\n );\n\n    reg ps2_clk_flag0,ps2_clk_flag1,ps2_clk_flag2;\n    wire negedge_ps2_clk;\n    always@(posedge clk or posedge rst)begin //\u5224\u65ad\u952e\u76d8\u8f93\u51fa\u65f6\u949f\u662f\u5426\u6709\u8fde\u7eed\u4f4e\u7535\u5e73\n        if(rst)begin //\u6765\u5e94\u7528\u8bf7\u6c42\u53d1\u9001\n            ps2_clk_flag0 &lt;= 1'b0;\n            ps2_clk_flag1 &lt;= 1'b0;\n            ps2_clk_flag2 &lt;= 1'b0;\n        end\n        else begin\n            ps2_clk_flag0 &lt;= ps2_clk;\n            ps2_clk_flag1 &lt;= ps2_clk_flag0;\n            ps2_clk_flag2 &lt;= ps2_clk_flag1;\n        end\n    end\n    assign negedge_ps2_clk = !ps2_clk_flag1 &amp;ps2_clk_flag2;\n    reg [3:0] num;\n    always @(posedge clk or posedge rst)begin\n        if(rst)\n            num &lt;= 4'd0;\n        else if(num==4'd11)\n            num &lt;= 4'd0;\n        else if(negedge_ps2_clk)\n            num &lt;= num +1'b1;\n        end\n    reg negedge_ps2_clk_shift;\n    always @(posedge clk) begin\n        negedge_ps2_clk_shift &lt;= negedge_ps2_clk;\n    end\n    reg [7:0] temp_data;\n    always @(posedge clk or posedge rst)begin\n        if(rst)\n            temp_data &lt;= 8'd0;\n        else if(negedge_ps2_clk_shift) begin //\u952e\u76d8\u65f6\u949f\u8fde\u7eed\u4f4e\u7535\u5e73\u63a5\u6536\u6570\u636e\n\n            case(num) //\u5b58\u50a8\u516b\u4e2a\u6570\u636e\u4f4d\n            4'd2 : temp_data[0] &lt;= ps2_data;\n            4'd3 : temp_data[1] &lt;= ps2_data;\n            4'd4 : temp_data[2] &lt;= ps2_data;\n            4'd5 : temp_data[3] &lt;= ps2_data;\n            4'd6 : temp_data[4] &lt;= ps2_data;\n            4'd7 : temp_data[5] &lt;= ps2_data;\n            4'd8 : temp_data[6] &lt;= ps2_data;\n            4'd9 : temp_data[7] &lt;= ps2_data;\n            default : temp_data &lt;= temp_data;\n            endcase\n        end else\n            temp_data &lt;= temp_data;\n        end\n    reg data_break,data_done,data_expand;\n    reg [9:0] data;\n    always @(posedge clk or posedge rst)begin\n        if(rst) begin\n            data_break &lt;= 1'b0;\n            data &lt;= 10'd0;\n            data_done &lt;=1'b0;\n            data_expand &lt;= 1'b0;\n        end\n        else if(num == 4'd11)begin\n            if(temp_data == 8'hE0)\n                data_expand &lt;= 1'b1; //\u952e\u76d8\u6269\u5f20\u952e\n            else if(temp_data == 8'hF0)\n                data_break &lt;= 1'b1;\n            else begin\n                data &lt;= {data_expand,data_break,temp_data};\n                data_done &lt;= 1'b1; //\u952e\u76d8\u6570\u636e\u5df2\u51c6\u5907\u597d\u8f93\u51fa\n                data_expand &lt;= 1'b0;\n                data_break &lt;=1'b0;\n            end\n        end\n        else begin\n            data &lt;= data;\n            data_done &lt;= 1'b0;\n            data_expand &lt;= data_expand;\n            data_break &lt;= data_break;\n        end\n    end\n\n    assign data_out = data;\n    assign ready = data_done; //\u8f93\u51fa\u952e\u76d8\u6570\u636e\nendmodule\n</code></pre>  #### 3.1.3.2 vga\u663e\u793a\u8f93\u51fa\uff08vgac.v\u548cget_vgadata.v\uff09  ##### \uff081\uff09get_vgadata.v\u6a21\u5757 VGA\u7684\u663e\u793a\u5206\u4e3a\u4e09\u4e2a\u6b65\u9aa4 1\u3001\u6211\u4eec\u9996\u5148\u8c03\u7528\u751f\u6210\u7684ip\u6838\u7684\u6a21\u5757\u3002 <pre><code>background b1(.clka(clka), .addra(background_addr), .douta(background_rgb)); \n</code></pre> 2\u3001\u63a5\u7740\uff0c\u6211\u4eec\u6839\u636evga\u626b\u63cf\u5230\u7684\u884c\u548c\u5217\u7684\u5730\u5740\u7ed9ip\u6838\u7684\u8f93\u5165\u5730\u5740\u8fdb\u884c\u8d4b\u503c\u3002 3\u3001\u5728\u7ed9\u8f93\u5165\u5730\u5740\u8d4b\u503c\u5b8c\u6bd5\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636evga\u626b\u63cf\u5230\u7684\u884c\u548c\u5217\u7684\u5730\u5740\u7ed9vga\u663e\u793a\u6570\u636e\u8d4b\u503c\u3002\u5373\u9009\u62e9\u5408\u9002\u7684ip\u6838\u7684\u8f93\u51fa\u8d4b\u7ed9vga_data\u3002   <pre><code>module get_vgadata(\n    input clk,\n    input clka,\n    input [8:0] row_addr, \n    input [9:0] col_addr,\n    input [63:0] inmap,\n    input rst,\n    input keydown,\n    input keycode,\n    input win,\n    input fault,\n    output reg [11:0] vga_data\n    );\n\n    parameter block_width = 78;\n    parameter block_mid = 14;\n    parameter block_mid_left = 15;\n    parameter block1_rowst = 63;\n    parameter block1_colst = 239;\n\n    wire [3:0] map [15:0];\n    assign map[0] = inmap[3:0];\n    assign map[1] = inmap[7:4];\n    assign map[2] = inmap[11:8];\n    assign map[3] = inmap[15:12];\n    assign map[4] = inmap[19:16];\n    assign map[5] = inmap[23:20];\n    assign map[6] = inmap[27:24];\n    assign map[7] = inmap[31:28];\n    assign map[8] = inmap[35:32];\n    assign map[9] = inmap[39:36];\n    assign map[10] = inmap[43:40];\n    assign map[11] = inmap[47:44];\n    assign map[12] = inmap[51:48];\n    assign map[13] = inmap[55:52];\n    assign map[14] = inmap[59:56];\n    assign map[15] = inmap[63:60];\n\n    reg [18:0] start_addr;\n    wire [11:0] start_rgb;\n    reg [18:0] background_addr;\n    wire [11:0] background_rgb;\n    reg [18:0] gameover_addr;\n    wire [11:0] gameover_rgb;\n    reg [12:0] num2_addr;\n    wire [11:0] num2_rgb;\n    reg [12:0] num4_addr;\n    wire [11:0] num4_rgb;\n    reg [12:0] num8_addr;\n    wire [11:0] num8_rgb;\n    reg [12:0] num16_addr;\n    wire [11:0] num16_rgb;\n    reg [12:0] num32_addr;\n    wire [11:0] num32_rgb;\n    reg [12:0] num64_addr;\n    wire [11:0] num64_rgb;\n    reg [12:0] num128_addr;\n    wire [11:0] num128_rgb;\n    reg [12:0] num256_addr;\n    wire [11:0] num256_rgb;\n    reg [12:0] num512_addr;\n    wire [11:0] num512_rgb;\n    reg [12:0] num1024_addr;\n    wire [11:0] num1024_rgb;\n    reg [12:0] num2048_addr;\n    wire [11:0] num2048_rgb;\n\n    // IP\u6838\u8c03\u7528\n    start s1(.clka(clka), .addra(start_addr), .douta(start_rgb));\n    background b1(.clka(clka), .addra(background_addr), .douta(background_rgb));\n    gameovers g1(.clka(clka), .addra(gameover_addr), .douta(gameover_rgb));\n    num2 n1(.clka(clka), .addra(num2_addr), .douta(num2_rgb));\n    num4 n2(.clka(clka), .addra(num4_addr), .douta(num4_rgb));\n    num8 n3(.clka(clka), .addra(num8_addr), .douta(num8_rgb));\n    num16 n4(.clka(clka), .addra(num16_addr), .douta(num16_rgb));\n    num32 n5(.clka(clka), .addra(num32_addr), .douta(num32_rgb));\n    num64 n6(.clka(clka), .addra(num64_addr), .douta(num64_rgb));\n    num128 n7(.clka(clka), .addra(num128_addr), .douta(num128_rgb));\n    num256 n8(.clka(clka), .addra(num256_addr), .douta(num256_rgb));\n    num512 n9(.clka(clka), .addra(num512_addr), .douta(num512_rgb));\n    num1024 n10(.clka(clka), .addra(num1024_addr), .douta(num1024_rgb));\n    num2048 n11(.clka(clka), .addra(num2048_addr), .douta(num2048_rgb));\n\n    // \u83b7\u53d6IP\u6838\u56fe\u50cf\u76f8\u5bf9\u5730\u5740\n    always @(posedge clk) begin\n        if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e00\u4e2a\u5757\uff080\uff0c0\uff09\n            start_addr &lt;= (col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) ?row_addr*640+col_addr :0;\n            background_addr &lt;= (col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) ?row_addr*640+col_addr :0;\n            gameover_addr &lt;= (col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) ?row_addr*640+col_addr :0;\n            num2_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num4_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num8_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num16_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num32_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num64_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num128_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num256_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num512_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num1024_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n            num2048_addr &lt;= (row_addr-block1_rowst)*block_width + (col_addr-block1_colst);\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e8c\u4e2a\u5757\uff080\uff0c1\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e09\u4e2a\u5757\uff080\uff0c2\uff09\n            ......\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u56db\u4e2a\u5757\uff080\uff0c3\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n\n        else if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u4e94\u4e2a\u5757\uff081\uff0c0\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u516d\u4e2a\u5757\uff081\uff0c1\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u4e03\u4e2a\u5757\uff081\uff0c2\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u516b\u4e2a\u5757\uff081\uff0c3\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*2+block_mid*2 &amp;&amp; row_addr&lt;=block1_rowst+block_width*3+block_mid*2) begin // \u7b2c\u4e5d\u4e2a\u5757\uff082\uff0c0\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left\n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*2+block_mid*2 &amp;&amp; row_addr&lt;=block1_rowst+block_width*3+block_mid*2) begin // \u7b2c\u5341\u4e2a\u5757\uff082\uff0c1\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*2+block_mid*2 &amp;&amp; row_addr&lt;=block1_rowst+block_width*3+block_mid*2) begin // \u7b2c\u5341\u4e00\u4e2a\u5757\uff082\uff0c2\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*2+block_mid*2 &amp;&amp; row_addr&lt;=block1_rowst+block_width*3+block_mid*2) begin // \u7b2c\u5341\u4e8c\u4e2a\u5757\uff082\uff0c3\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*3+block_mid*3 &amp;&amp; row_addr&lt;=block1_rowst+block_width*4+block_mid*3) begin // \u7b2c\u5341\u4e09\u4e2a\u5757\uff083\uff0c0\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*3+block_mid*3 &amp;&amp; row_addr&lt;=block1_rowst+block_width*4+block_mid*3) begin // \u7b2c\u5341\u56db\u4e2a\u5757\uff083\uff0c1\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*3+block_mid*3 &amp;&amp; row_addr&lt;=block1_rowst+block_width*4+block_mid*3) begin // \u7b2c\u5341\u4e94\u4e2a\u5757\uff083\uff0c2\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*3+block_mid*3 &amp;&amp; row_addr&lt;=block1_rowst+block_width*4+block_mid*3) begin // \u7b2c\u5341\u516d\u4e2a\u5757\uff083\uff0c3\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n\n        else if(col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) begin// \u5176\u4ed6\u4f4d\u7f6e\n           start_addr &lt;= (col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) ?row_addr*640+col_addr :0;\n            background_addr &lt;= (col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) ?row_addr*640+col_addr :0;\n            gameover_addr &lt;= (col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) ?row_addr*640+col_addr :0;\n           num2_addr &lt;= 0;\n           num4_addr &lt;= 0;\n           num8_addr &lt;= 0;\n           num16_addr &lt;= 0;\n           num32_addr &lt;= 0;\n           num64_addr &lt;= 0;\n           num128_addr &lt;= 0;\n           num256_addr &lt;= 0;\n           num512_addr &lt;= 0;\n           num1024_addr &lt;= 0;\n           num2048_addr &lt;= 0;\n        end\n    end\n\n    // \u83b7\u53d6vga_data\n    always@(*) begin\n        if(!rst || (keydown &amp;&amp; keycode == 8'h4d)) begin\n            if(col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) // \u521d\u59cb\u754c\u9762\n                vga_data &lt;= start_rgb;\n        end\n        else\n        if(win || fault) begin\n            if(col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) // \u6e38\u620f\u7ed3\u675f\u754c\u9762\n                vga_data &lt;= gameover_rgb;\n        end\n        else\n        if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e00\u4e2a\u5757 \uff080\uff0c0\uff09\n            case (map[0])\n                4'h0: vga_data &lt;= background_rgb;\n                4'h1: vga_data &lt;= num2_rgb;\n                4'h2: vga_data &lt;= num4_rgb;\n                4'h3: vga_data &lt;= num8_rgb;\n                4'h4: vga_data &lt;= num16_rgb;\n                4'h5: vga_data &lt;= num32_rgb;\n                4'h6: vga_data &lt;= num64_rgb;\n                4'h7: vga_data &lt;= num128_rgb;\n                4'h8: vga_data &lt;= num256_rgb;\n                4'h9: vga_data &lt;= num512_rgb;\n                4'ha: vga_data &lt;= num1024_rgb;\n                4'hb: vga_data &lt;= num2048_rgb;\n            endcase\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e8c\u4e2a\u5757 \uff080\uff0c1\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e09\u4e2a\u5757 \uff080\uff0c2\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u56db\u4e2a\u5757 \uff080\uff0c3\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n\n        else if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u4e94\u4e2a\u5757 \uff081\uff0c0\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left\n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u516d\u4e2a\u5757 \uff081\uff0c1\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u4e03\u4e2a\u5757 \uff081\uff0c2\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u516b\u4e2a\u5757 \uff081\uff0c3\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*2+block_mid*2 &amp;&amp; row_addr&lt;=block1_rowst+block_width*3+block_mid*2) begin // \u7b2c\u4e5d\u4e2a\u5757 \uff082\uff0c0\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*2+block_mid*2 &amp;&amp; row_addr&lt;=block1_rowst+block_width*3+block_mid*2) begin // \u7b2c\u5341\u4e2a\u5757 \uff082\uff0c1\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*2+block_mid*2 &amp;&amp; row_addr&lt;=block1_rowst+block_width*3+block_mid*2) begin // \u7b2c\u5341\u4e00\u4e2a\u5757 \uff082\uff0c2\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*2+block_mid*2 &amp;&amp; row_addr&lt;=block1_rowst+block_width*3+block_mid*2) begin // \u7b2c\u5341\u4e8c\u4e2a\u5757 \uff082\uff0c3\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*3+block_mid*3 &amp;&amp; row_addr&lt;=block1_rowst+block_width*4+block_mid*3) begin // \u7b2c\u5341\u4e09\u4e2a\u5757 \uff083\uff0c0\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left\n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*3+block_mid*3 &amp;&amp; row_addr&lt;=block1_rowst+block_width*4+block_mid*3) begin // \u7b2c\u5341\u56db\u4e2a\u5757 \uff083\uff0c1\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*3+block_mid*3 &amp;&amp; row_addr&lt;=block1_rowst+block_width*4+block_mid*3) begin // \u7b2c\u5341\u4e94\u4e2a\u5757 \uff083\uff0c2\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width*3+block_mid*3 &amp;&amp; row_addr&lt;=block1_rowst+block_width*4+block_mid*3) begin // \u7b2c\u5341\u516d\u4e2a\u5757 \uff083\uff0c3\uff09\n            \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n        end\n\n        else if(col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) // \u5176\u4ed6\u4f4d\u7f6e\n           vga_data &lt;= background_rgb;\n        end\nendmodule\n</code></pre>  ##### \uff082\uff09vgac.v\u6a21\u5757 vgac \u6a21\u5757\u662f vga \u663e\u793a\u7684\u6838\u5fc3\u6a21\u5757\uff0c\u5b9e\u73b0\u4e86\u663e\u793a\u5c4f\u4e0a\u7684\u50cf\u7d20\u626b\u63cf\uff0c\u5e76\u7ed9 \u51fa\u4e86\u5b9e\u65f6\u4f4d\u7f6e\u5750\u6807\u3002 <pre><code>module vgac (vga_clk,clrn,d_in,row_addr,col_addr,rdn,r,g,b,hs,vs); // vgac\n   input     [11:0] d_in;     // bbbb_gggg_rrrr, pixel\n   input            vga_clk;  // 25MHz\n   input            clrn;\n   output reg [8:0] row_addr; // pixel ram row address, 480 (512) lines\n   output reg [9:0] col_addr; // pixel ram col address, 640 (1024) pixels\n   output reg [3:0] r,g,b; // red, green, blue colors\n   output reg       rdn;      // read pixel RAM (active_low)\n   output reg       hs,vs;    // horizontal and vertical synchronization\n   // h_count: VGA horizontal counter (0-799)\n   reg [9:0] h_count; // VGA horizontal counter (0-799): pixels\n   always @ (posedge vga_clk) begin\n       if (!clrn) begin\n           h_count &lt;= 10'h0;\n       end else if (h_count == 10'd799) begin\n           h_count &lt;= 10'h0;\n       end else begin \n           h_count &lt;= h_count + 10'h1;\n       end\n   end\n   // v_count: VGA vertical counter (0-524)\n   reg [9:0] v_count; // VGA vertical   counter (0-524): lines\n   always @ (posedge vga_clk or negedge clrn) begin\n       if (!clrn) begin\n           v_count &lt;= 10'h0;\n       end else if (h_count == 10'd799) begin\n           if (v_count == 10'd524) begin\n               v_count &lt;= 10'h0;\n           end else begin\n               v_count &lt;= v_count + 10'h1;\n           end\n       end\n   end\n    // signals, will be latched for outputs\n    wire  [9:0] row    =  v_count - 10'd35;     // pixel ram row addr \n    wire  [9:0] col    =  h_count - 10'd143;    // pixel ram col addr \n    wire        h_sync = (h_count &gt; 10'd95);    //  96 -&gt; 799\n    wire        v_sync = (v_count &gt; 10'd1);     //   2 -&gt; 524\n    wire        read   = (h_count &gt; 10'd142) &amp;&amp; // 143 -&gt; 782\n                         (h_count &lt; 10'd783) &amp;&amp; //        640 pixels\n                         (v_count &gt; 10'd34)  &amp;&amp; //  35 -&gt; 514\n                         (v_count &lt; 10'd515);   //        480 lines\n    // vga signals\n    always @ (posedge vga_clk) begin\n        row_addr &lt;=  row[8:0]; // pixel ram row address\n        col_addr &lt;=  col;      // pixel ram col address\n        rdn      &lt;= ~read;     // read pixel (active low)\n        hs       &lt;=  h_sync;   // horizontal synchronization\n        vs       &lt;=  v_sync;   // vertical   synchronization\n        r        &lt;=  rdn ? 4'h0 : d_in[11:8]; // 3-bit red\n        g        &lt;=  rdn ? 4'h0 : d_in[7:4]; // 3-bit green\n        b        &lt;=  rdn ? 4'h0 : d_in[3:0]; // 3-bit blue\n    end\nendmodule\n</code></pre>  ## 3.2 \u8c03\u8bd5\u8fc7\u7a0b  ### 3.2.1 \u7d20\u6750\u6574\u7406\u6a21\u5757  &gt; \u95ee\u9898\uff1a\u83b7\u53d6\u7684 coe \u6587\u4ef6\u8f6c IP \u6838\u540e\u5bfc\u5165 sword \u677f\u53d1\u73b0\u6b63\u53cd\u5012\u7f6e  * \u95ee\u9898\u7684\u89e3\u51b3\uff1a\u8ba4\u8bc6\u5230 sword \u677f\u662f\u4e0a\u4e0b\u76f8\u53cd\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u66f4\u6539 top \u6587\u4ef6\u4e2d\u5bf9 IP \u6838\u7684\u4f7f\u7528\u65b9\u5411\u3002  &gt; \u95ee\u9898\uff1acoe IP \u6838\u751f\u6210\u5bfc\u5165\u540e\u53d1\u73b0\u56fe\u7247\u989c\u8272\u4e0d\u51c6\u786e  * \u95ee\u9898\u7684\u89e3\u51b3\uff1a\u53d1\u73b0\u539f\u672c\u84dd\u8272\u7684\u56fe\u7247\u53d8\u6210\u4e86\u7ea2\u8272\uff0c\u8ba4\u4e3a\u662f\u751f\u6210 coe \u548c\u83b7\u53d6 IP \u6838\u5bf9 R,G,B \u7684\u4f7f\u7528\u987a\u5e8f\u4e0d\u4e00\u81f4\uff0c\u56e0\u6b64\u66f4\u6539\u4e86 top \u6587\u4ef6\u7684\u5bf9 IP \u6838\u7684\u8bfb\u53d6\u65b9\u5f0f\uff0c\u8c03\u6362\u4e86 R \u548c B \u7684\u751f\u6210\u987a\u5e8f\uff0c\u6700\u540e\u5728 sword \u677f\u4e0a\u5f97\u5230\u4e86\u9884\u671f\u6548\u679c\u3002  ### 3.2.2 \u6e38\u620f\u4e3b\u4f53\u6a21\u5757  &gt; \u95ee\u9898\uff1a\u79fb\u52a8\u4e4b\u540e\u751f\u6210\u7684\u968f\u673a\u5757\u5927\u4e8e\u4e00\u5757  * \u95ee\u9898\u7684\u89e3\u51b3\uff1a\u901a\u8fc7\u6392\u67e5\u4ee3\u7801\u53d1\u73b0\uff0c\u51fa\u73b0\u8fd9\u79cd\u9519\u8bef\u7684\u539f\u56e0\u662f\u751f\u6210\u968f\u673a\u5757\u7684\u4ee3\u7801\u7684\u4f4d\u7f6e\u4e0d\u5bf9\uff0c\u653e\u5728\u4e86\u6bcf\u6b21\u79fb\u52a8\u4e4b\u540e\u7684\u4f4d\u7f6e\uff0c\u5bfc\u81f4\u4e86\u6bcf\u6709\u4e00\u4e2a\u5757\u53d1\u751f\u79fb\u52a8\uff0c\u90fd\u4f1a\u6709\u968f\u673a\u5757\u7684\u751f\u6210\uff0c\u540e\u9762\u901a\u8fc7\u79fb\u52a8\u4ee3\u7801\u4f4d\u7f6e\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002  &gt; \u95ee\u9898\uff1a\u6bcf\u4e00\u884c\uff08\u5217\uff09\u4e2d\u95f4\u7684\u76f8\u540c\u6570\u5b57\u7684\u5757\u5728\u79fb\u52a8\u65f6\u4e0d\u4f1a\u53d1\u751f\u5408\u5e76  * \u95ee\u9898\u7684\u89e3\u51b3\uff1a\u68c0\u67e5\u4ee3\u7801\u540e\u53d1\u73b0\uff0c\u539f\u5148\u6bcf\u6b21\u6709\u5757\u79fb\u52a8\u4e4b\u540e\uff0ctemp\u6307\u5411\u7684\u5757\u90fd\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u5bfc\u81f4\u4e86\u8fd9\u4e2a\u95ee\u9898\u7684\u53d1\u751f\uff0c\u73b0\u5728\u5c06\u5176\u4fee\u6539\u4e3a\u9664\u4e86\u8be5\u5757\u4f4d\u7f6e\u539f\u5148\u4e3a0\u800c\u53d1\u751f\u7684\u60c5\u51b5\u4e0btemp\u6539\u53d8\uff0c\u6210\u529f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002  ### 3.2.3 \u8f93\u5165\u6a21\u5757  &gt; \u95ee\u9898\uff1a\u952e\u76d8\u4ea7\u751f\u7684\u6309\u952e\u7801\u672a\u77e5  * \u95ee\u9898\u7684\u89e3\u51b3\uff1a\u901a\u8fc7\u4f7f\u7528\u4e03\u6bb5\u6570\u7801\u7ba1\u8f85\u52a9\u663e\u793a\uff0c\u5c06\u6309\u952e\u7801\u4ee5\u5341\u516d\u8fdb\u5236\u6570\u7684\u5f62\u5f0f\u663e\u793a\u5728\u4e03\u6bb5\u6570\u7801\u7ba1\u4e0a\uff0c\u53ef\u4ee5\u6210\u529f\u6d4b\u8bd5\u4e0d\u540c\u6309\u952e\u5bf9\u5e94\u7684\u952e\u76d8\u7801\u3002   # \u7b2c\u56db\u7ae0 \u7ed3\u679c\u5206\u6790\u4e0e\u7528\u6237\u53cd\u9988  ## 4.1 \u7ed3\u679c\u68c0\u9a8c\u4e0e\u529f\u80fd\u6d4b\u8bd5  ### 4.1.1 \u754c\u9762\u7ed8\u5236\u6a21\u5757  \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 top \u6587\u4ef6\u6765\u68c0\u67e5\u5bf9\u5404\u4e2a\u70b9\u7684\u4f4d\u7f6e\u53d6\u503c\u662f\u5426\u51c6\u786e\u3002  <pre><code>    module get_vgadata(\n    input clk,\n    input clka,\n    input [8:0] row_addr, \n    input [9:0] col_addr,\n    //input [3:0] map [15:0],\n    input [63:0] inmap,\n    output reg [11:0] vga_data\n    );\n\n    parameter block_width = 78;\n    parameter block_mid = 14;\n    parameter block_mid_left = 15;\n    parameter block1_rowst = 63;\n    parameter block1_colst = 237;\n\n    // IP\u6838\u8c03\u7528\n    background b1(.clka(clka), .addra(background_addr), .douta(background_rgb));\n    //test b1(.clka(clka), .addra(background_addr), .douta(background_rgb));\n\n    // \u7ed9\u56fe\u7247\u5730\u5740\u8d4b\u503c (ip\u6838\u8f93\u5165)\n    always @(posedge clk) begin\n        if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e00\u4e2a\u5757 \uff080\uff0c0\uff09\n            ...\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e8c\u4e2a\u5757 \uff080\uff0c1\uff09\n            ...\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e09\u4e2a\u5757 \uff080\uff0c2\uff09\n            ...\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u56db\u4e2a\u5757 \uff080\uff0c3\uff09\n            ...\n        end\n\n        else if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u4e94\u4e2a\u5757 \uff081\uff0c0\uff09\n            ...\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u516d\u4e2a\u5757 \uff081\uff0c1\uff09\n            ...\n    end\n\n\n    // \u83b7\u53d6vga_data\n    always@(*) begin\n        if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e00\u4e2a\u5757 \uff080\uff0c0\uff09\n            case (map[0])\n                4'h0: vga_data &lt;= background_rgb;\n                4'h1: vga_data &lt;= num2_rgb;\n                4'h2: vga_data &lt;= num4_rgb;\n                4'h3: vga_data &lt;= num8_rgb;\n                4'h4: vga_data &lt;= num16_rgb;\n                4'h5: vga_data &lt;= num32_rgb;\n                4'h6: vga_data &lt;= num64_rgb;\n                4'h7: vga_data &lt;= num128_rgb;\n                4'h8: vga_data &lt;= num256_rgb;\n                4'h9: vga_data &lt;= num512_rgb;\n                4'ha: vga_data &lt;= num1024_rgb;\n                4'hb: vga_data &lt;= num2048_rgb;\n            endcase\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e8c\u4e2a\u5757 \uff080\uff0c1\uff09\n            case (map[1])...\n            endcase\n        end\n        else if(col_addr&gt;=block1_colst+block_width*2+block_mid_left*2 &amp;&amp; col_addr&lt;=block1_colst+block_width*3+block_mid_left*2 \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u4e09\u4e2a\u5757 \uff080\uff0c2\uff09\n            case (map[2])...\n            endcase\n        end\n        else if(col_addr&gt;=block1_colst+block_width*3+block_mid_left*3 &amp;&amp; col_addr&lt;=block1_colst+block_width*4+block_mid_left*3 \n        &amp;&amp; row_addr&gt;=block1_rowst &amp;&amp; row_addr&lt;=block1_rowst+block_width) begin // \u7b2c\u56db\u4e2a\u5757 \uff080\uff0c3\uff09\n            case (map[3])...\n            endcase\n        end\n\n        else if(col_addr&gt;=block1_colst &amp;&amp; col_addr&lt;=block1_colst+block_width \n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u4e94\u4e2a\u5757 \uff081\uff0c0\uff09\n            case (map[4])...\n            endcase\n        end\n        else if(col_addr&gt;=block1_colst+block_width+block_mid_left &amp;&amp; col_addr&lt;=block1_colst+block_width*2+block_mid_left\n        &amp;&amp; row_addr&gt;=block1_rowst+block_width+block_mid &amp;&amp; row_addr&lt;=block1_rowst+block_width*2+block_mid) begin // \u7b2c\u516d\u4e2a\u5757 \uff081\uff0c1\uff09\n            case (map[5])...\n            endcase\n        end\n        ......\n\n        else if(col_addr&gt;=0 &amp;&amp; col_addr&lt;=639 &amp;&amp; row_addr&gt;=0 &amp;&amp; row_addr&lt;=479) // \u80cc\u666f\u56fe\n           vga_data &lt;= background_rgb;\n        end\nendmodule\n</code></pre> * \u5f00\u59cb\u754c\u9762 ![Alt display](photo2/start.jpg) * \u6e38\u620f\u754c\u9762 ![Alt display](photo2/gamedisp.jpg) * \u7ed3\u675f\u754c\u9762 ![Alt display](photo2/gameover.jpg)  ### 4.1.2 \u6e38\u620f\u4e3b\u4f53\u6a21\u5757  #### 4.1.2.1 logic_part\u90e8\u5206\u4eff\u771f\u7ed3\u679c\u6d4b\u8bd5  \uff081\uff09\u5411\u5de6\u79fb\u52a8  * sim\u4e2d\u7684\u4ee3\u7801  <pre><code>module logic_part_sim;\n\n    // Inputs\n    reg clk;\n    reg rst;\n    reg [3:0] btn;\n\n    // Outputs\n    wire [63:0] mmap;\n\n    // Instantiate the Unit Under Test (UUT)\n    logic_part uut (\n        .clk(clk), \n        .rst(rst), \n        .mmap(mmap), \n        .btn(btn)\n    );\n\n        // Clock generation\ninitial begin\n        clk = 0;\n        // \u7528 forever \u5faa\u73af\u751f\u6210\u65f6\u949f\n        forever #100 clk = ~clk;\n    end \n    initial begin\n        // Initialize Inputs\n        //clk = 0;\n        rst = 0;\n        btn = 0;\n        //mmap[63:0] = 0;\n        //mmap[0] = 1;\n        //mmap[4] = 1;\n\n        // Wait 100 ns for global reset to finish\n        #100;\n        rst = 1;\n        #100\n        rst = 0;\n        #100\n        btn[0] = 1;\n        #100\n        btn[0] = 0;\n        // Add stimulus here\n\n    end\n\nendmodule\n</code></pre>  * \u5730\u56fe\u521d\u59cb\u5316\u60c5\u51b5  <pre><code>[0] [1] [0] [0]\n[1] [0] [2] [0]\n[3] [2] [0] [0]\n[3] [3] [0] [0]\n</code></pre>  * \u4eff\u771f\u7ed3\u679c  ![fdf9bd1fc94580d5ffa0136780b74b4](photos/fdf9bd1fc94580d5ffa0136780b74b4.png)  * \u4eff\u771f\u7ed3\u679c\u663e\u793a\u7684\u5730\u56fe  <pre><code>[1] [1] [0] [0]\n[1] [2] [0] [0]\n[3] [2] [0] [0]\n[4] [0] [0] [0]\n</code></pre>  \u7531\u6b64\u53ef\u89c1\uff0c\u4eff\u771f\u7ed3\u679c\u663e\u793a\u7684\u5730\u56fe\u7b26\u5408\u521d\u59cb\u5316\u7684\u5730\u56fe\u5411\u5de6\u79fb\u52a8\u4e00\u6b21\u540e\u5bf9\u5e94\u7684\u56fe\u5f62\uff0c\u540c\u65f6\uff0c\u5f97\u5206\u4e3a16\u5206\uff0c\u7b26\u5408\u7ed3\u679c\uff0c\u56e0\u800c\u7ed3\u679c\u662f\u6b63\u786e\u7684\u3002    \uff082\uff09\u5411\u53f3\u79fb\u52a8  * sim\u4e2d\u7684\u4ee3\u7801  <pre><code>module logic_part_sim;\n\n    // Inputs\n    reg clk;\n    reg rst;\n    reg [3:0] btn;\n\n    // Outputs\n    wire [63:0] mmap;\n\n    // Instantiate the Unit Under Test (UUT)\n    logic_part uut (\n        .clk(clk), \n        .rst(rst), \n        .mmap(mmap), \n        .btn(btn)\n    );\n\n        // Clock generation\ninitial begin\n        clk = 0;\n        // \u7528 forever \u5faa\u73af\u751f\u6210\u65f6\u949f\n        forever #100 clk = ~clk;\n    end \n    initial begin\n        // Initialize Inputs\n        //clk = 0;\n        rst = 0;\n        btn = 0;\n        //mmap[63:0] = 0;\n        //mmap[0] = 1;\n        //mmap[4] = 1;\n\n        // Wait 100 ns for global reset to finish\n        #100;\n        rst = 1;\n        #100\n        rst = 0;\n        #100\n        btn[1] = 1;\n        #100\n        btn[1] = 0;\n        // Add stimulus here\n\n    end\n\nendmodule\n</code></pre>  * \u5730\u56fe\u521d\u59cb\u5316\u60c5\u51b5  <pre><code>[0] [1] [0] [0]\n[1] [0] [2] [0]\n[3] [2] [0] [0]\n[3] [3] [0] [0]\n</code></pre>  * \u4eff\u771f\u7ed3\u679c  ![image-20240117161243823](photos/image-20240117161243823.png)  * \u4eff\u771f\u7ed3\u679c\u663e\u793a\u7684\u5730\u56fe  <pre><code>[1] [0] [0] [1]\n[0] [0] [1] [2]\n[0] [0] [3] [2]\n[0] [0] [0] [4]\n</code></pre>  \u7531\u6b64\u53ef\u89c1\uff0c\u4eff\u771f\u7ed3\u679c\u663e\u793a\u7684\u5730\u56fe\u7b26\u5408\u521d\u59cb\u5316\u7684\u5730\u56fe\u5411\u53f3\u79fb\u52a8\u4e00\u6b21\u540e\u5bf9\u5e94\u7684\u56fe\u5f62\uff0c\u540c\u65f6\uff0c\u5f97\u5206\u4e3a16\u5206\uff0c\u7b26\u5408\u7ed3\u679c\uff0c\u56e0\u800c\u7ed3\u679c\u662f\u6b63\u786e\u7684\u3002    \uff083\uff09\u5411\u4e0a\u79fb\u52a8  * sim\u4e2d\u7684\u4ee3\u7801  <pre><code>module logic_part_sim;\n\n    // Inputs\n    reg clk;\n    reg rst;\n    reg [3:0] btn;\n\n    // Outputs\n    wire [63:0] mmap;\n\n    // Instantiate the Unit Under Test (UUT)\n    logic_part uut (\n        .clk(clk), \n        .rst(rst), \n        .mmap(mmap), \n        .btn(btn)\n    );\n\n        // Clock generation\ninitial begin\n        clk = 0;\n        // \u7528 forever \u5faa\u73af\u751f\u6210\u65f6\u949f\n        forever #100 clk = ~clk;\n    end \n    initial begin\n        // Initialize Inputs\n        //clk = 0;\n        rst = 0;\n        btn = 0;\n        //mmap[63:0] = 0;\n        //mmap[0] = 1;\n        //mmap[4] = 1;\n\n        // Wait 100 ns for global reset to finish\n        #100;\n        rst = 1;\n        #100\n        rst = 0;\n        #100\n        btn[2] = 1;\n        #100\n        btn[2] = 0;\n        // Add stimulus here\n\n    end\n\nendmodule\n</code></pre>  * \u5730\u56fe\u521d\u59cb\u5316\u60c5\u51b5  <pre><code>[0] [1] [0] [0]\n[1] [0] [2] [0]\n[3] [2] [0] [0]\n[3] [3] [0] [0]\n</code></pre>  * \u4eff\u771f\u7ed3\u679c  ![image-20240117161439221](photos/image-20240117161439221.png)  * \u4eff\u771f\u7ed3\u679c\u663e\u793a\u7684\u5730\u56fe  <pre><code>[1] [1] [2] [1]\n[4] [2] [0] [0]\n[0] [3] [0] [0]\n[0] [0] [0] [0]\n</code></pre>  \u7531\u6b64\u53ef\u89c1\uff0c\u4eff\u771f\u7ed3\u679c\u663e\u793a\u7684\u5730\u56fe\u7b26\u5408\u521d\u59cb\u5316\u7684\u5730\u56fe\u5411\u4e0a\u79fb\u52a8\u4e00\u6b21\u540e\u5bf9\u5e94\u7684\u56fe\u5f62\uff0c\u540c\u65f6\uff0c\u5f97\u5206\u4e3a16\u5206\uff0c\u7b26\u5408\u7ed3\u679c\uff0c\u56e0\u800c\u7ed3\u679c\u662f\u6b63\u786e\u7684\u3002    \uff084\uff09\u5411\u4e0b\u79fb\u52a8  * sim\u4e2d\u7684\u4ee3\u7801  <pre><code>module logic_part_sim;\n\n    // Inputs\n    reg clk;\n    reg rst;\n    reg [3:0] btn;\n\n    // Outputs\n    wire [63:0] mmap;\n\n    // Instantiate the Unit Under Test (UUT)\n    logic_part uut (\n        .clk(clk), \n        .rst(rst), \n        .mmap(mmap), \n        .btn(btn)\n    );\n\n        // Clock generation\ninitial begin\n        clk = 0;\n        // \u7528 forever \u5faa\u73af\u751f\u6210\u65f6\u949f\n        forever #100 clk = ~clk;\n    end \n    initial begin\n        // Initialize Inputs\n        //clk = 0;\n        rst = 0;\n        btn = 0;\n        #100;\n        rst = 1;\n        #100\n        rst = 0;\n        #100\n        btn[3] = 1;\n        #100\n        btn[3] = 0;\n        // Add stimulus here\n\n    end\n\nendmodule\n</code></pre>  * \u5730\u56fe\u521d\u59cb\u5316\u60c5\u51b5  <pre><code>[0] [1] [0] [0]\n[1] [0] [2] [0]\n[3] [2] [0] [0]\n[3] [3] [0] [0]\n</code></pre>  * \u4eff\u771f\u7ed3\u679c  ![image-20240117161627567](photos/image-20240117161627567.png)  * \u4eff\u771f\u7ed3\u679c\u663e\u793a\u7684\u5730\u56fe  <pre><code>[1] [0] [0] [0]\n[0] [1] [0] [0]\n[1] [2] [0] [0]\n[4] [3] [2] [0]\n</code></pre>  \u7531\u6b64\u53ef\u89c1\uff0c\u4eff\u771f\u7ed3\u679c\u663e\u793a\u7684\u5730\u56fe\u7b26\u5408\u521d\u59cb\u5316\u7684\u5730\u56fe\u5411\u4e0b\u79fb\u52a8\u4e00\u6b21\u540e\u5bf9\u5e94\u7684\u56fe\u5f62\uff0c\u540c\u65f6\uff0c\u5f97\u5206\u4e3a16\u5206\uff0c\u7b26\u5408\u7ed3\u679c\uff0c\u56e0\u800c\u7ed3\u679c\u662f\u6b63\u786e\u7684\u3002  #### 4.1.2.2 win \u90e8\u5206\u4eff\u771f\u7ed3\u679c\u6d4b\u8bd5  \uff081\uff09\u80dc\u5229\u6d4b\u8bd5  * sim\u4e2d\u4ee3\u7801  <pre><code>module win_sim;\n\n    // Inputs\n    reg clk;\n    reg [63:0] mmap;\n    reg rst;\n\n    // Outputs\n    wire win;\n    wire fault;\n\n    // Instantiate the Unit Under Test (UUT)\n    win uut (\n        .clk(clk), \n        .mmap(mmap), \n        .rst(rst), \n        .win(win), \n        .fault(fault)\n    );\n\n    // Clock generation\n    initial begin\n        clk = 0;\n        // \u7528 forever \u5faa\u73af\u751f\u6210\u65f6\u949f\n        forever #100 clk = ~clk;\n    end\n    initial begin\n        // Initialize Inputs\n        mmap = 0;\n        rst = 0;\n\n        // Wait 100 ns for global reset to finish\n        #100;\n        rst = 1;\n        #100;\n        rst = 0;\n        mmap[3:0] = 1;\n        mmap[7:4] = 2;\n        mmap[11:8] = 1;\n        mmap[15:12] = 2;\n\n        mmap[19:16] = 2;\n        mmap[23:20] = 1;\n        mmap[27:24] = 2;\n        mmap[31:28] = 1;\n\n        mmap[35:32] = 1;\n        mmap[39:36] = 2;\n        mmap[43:40] = 1;\n        mmap[47:44] = 2;\n\n        mmap[51:48] = 2;\n        mmap[55:52] = 1;\n        mmap[59:56] = 11;\n        mmap[63:60] = 0;\n\n        // Add stimulus here\n\n    end\n\nendmodule\n</code></pre>  * \u4eff\u771f\u7ed3\u679c  ![image-20240117162440738](photos/image-20240117162440738.png)  * \u4eff\u771f\u4e2d\u6700\u540e\u7684\u5730\u56fe  <pre><code>[1] [2] [1] [2]\n[2] [1] [2] [1]\n[1] [2] [1] [2]\n[2] [1] [11][0]\n</code></pre>  \u5bf9\u4e8e\u8fd9\u4efd\u5730\u56fe\u6765\u8bf4\uff0c\u6210\u529f\u751f\u62102048\uff0c\u5e94\u8be5\u8f93\u51fawin\u4e3a1\uff0cfault\u4ecd\u7136\u4fdd\u6301\u4e3a0\uff0c\u7ed3\u679c\u6b63\u786e\u3002    \uff082\uff09\u5931\u8d25\u6d4b\u8bd5  * sim\u4e2d\u4ee3\u7801  <pre><code>module win_sim;\n\n    // Inputs\n    reg clk;\n    reg [63:0] mmap;\n    reg rst;\n\n    // Outputs\n    wire win;\n    wire fault;\n\n    // Instantiate the Unit Under Test (UUT)\n    win uut (\n        .clk(clk), \n        .mmap(mmap), \n        .rst(rst), \n        .win(win), \n        .fault(fault)\n    );\n\n    // Clock generation\n    initial begin\n        clk = 0;\n        // \u7528 forever \u5faa\u73af\u751f\u6210\u65f6\u949f\n        forever #100 clk = ~clk;\n    end\n    initial begin\n        // Initialize Inputs\n        mmap = 0;\n        rst = 0;\n\n        // Wait 100 ns for global reset to finish\n        #100;\n        rst = 1;\n        #100;\n        rst = 0;\n        mmap[3:0] = 1;\n        mmap[7:4] = 2;\n        mmap[11:8] = 1;\n        mmap[15:12] = 2;\n\n        mmap[19:16] = 2;\n        mmap[23:20] = 1;\n        mmap[27:24] = 2;\n        mmap[31:28] = 1;\n\n        mmap[35:32] = 1;\n        mmap[39:36] = 2;\n        mmap[43:40] = 1;\n        mmap[47:44] = 2;\n\n        mmap[51:48] = 2;\n        mmap[55:52] = 1;\n        mmap[59:56] = 2;\n        mmap[63:60] = 1;\n\n        // Add stimulus here\n\n    end\n\nendmodule\n</code></pre>  * \u4eff\u771f\u7ed3\u679c  ![image-20240117162053767](photos/image-20240117162053767.png)  * \u4eff\u771f\u4e2d\u6700\u540e\u7684\u5730\u56fe  <pre><code>[1] [2] [1] [2]\n[2] [1] [2] [1]\n[1] [2] [1] [2]\n[2] [1] [2] [1]\n</code></pre>  \u5bf9\u4e8e\u8fd9\u4efd\u5730\u56fe\u6765\u8bf4\uff0c\u5df2\u7ecf\u6ca1\u6709\u53ef\u4ee5\u79fb\u52a8\u7684\u6a21\u5757\uff0c\u5e94\u8be5\u8f93\u51fafault\u4e3a1\uff0cwin\u4ecd\u7136\u4fdd\u6301\u4e3a0\uff0c\u7ed3\u679c\u6b63\u786e\u3002    #### 4.1.2.3 number_change \u90e8\u5206\u4eff\u771f\u7ed3\u679c\u6d4b\u8bd5  * sim\u4e2d\u4ee3\u7801  <pre><code>module number_change_sim;\n\n    // Inputs\n    reg clk;\n    reg [31:0] num_in;\n\n    // Outputs\n    wire [31:0] num_out;\n\n    // Instantiate the Unit Under Test (UUT)\n    number_change uut (\n        .clk(clk), \n        .num_in(num_in), \n        .num_out(num_out)\n    );\n\n    initial begin\n        clk = 0;\n        // \u7528 forever \u5faa\u73af\u751f\u6210\u65f6\u949f\n        forever #100 clk = ~clk;\n   end  \n    initial begin\n        // Initialize Inputs\n        num_in = 0;\n\n        // Wait 100 ns for global reset to finish\n        #100;\n        num_in =1026;\n        #100;\n        num_in =1111;\n\n        // Add stimulus here\n\n    end\n\nendmodule\n</code></pre>  * \u4eff\u771f\u7ed3\u679c  ![image-20240117162802880](photos/image-20240117162802880.png)  \u8f93\u5165\u9996\u5148\u4e3a1026\uff0c\u7136\u540e\u6539\u53d8\u4e3a1111\uff0c\u800c\u8f93\u51fa\u4e5f\u9996\u5148\u662fBCD\u7801\u5f62\u5f0f\u76841026\uff0c\u7136\u540e\u6539\u53d8\u4e3a1111\uff0c\u7ed3\u679c\u6b63\u786e\u3002  ### 4.1.3 PS2\u6309\u952e\u6a21\u5757  \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u7535\u8def\u6765\u663e\u793a\u4e0d\u540c\u6309\u952e\u5bf9\u5e94\u7684keycode\u3002  <pre><code>module Top(\n    input clk, // \u65f6\u949f\u4fe1\u53f7\n    input rst, // \u590d\u4f4d\u4fe1\u53f7\n    input wire SW0,\n    input ps2_clk,\n    input ps2_data,\n\n    output wire seg_clk, \n    output wire seg_sout, \n    output wire SEG_PEN, \n    output wire seg_clrn,\n\n    output hs, // horizontal and vertical synchronization\n    output vs, \n    output [3:0] r,\n    output [3:0] g,\n    output [3:0] b\n    );\n\n    wire [31:0] clkdiv; // \u65f6\u949f\u5206\u9891\u4fe1\u53f7\n\n    clkdiv myclkdiv(.clk(clk), .rst(1'b0), .clkdiv(clkdiv));\n\n    wire key_down;\n    wire [7:0] keycode;\n\n    PS2(.clk(clk), .rst(1'b0), .ps2_clk(ps2_clk), .ps2_data(ps2_data), .data_out(keycode), .ready(key_down));\n\n    reg [7:0] lastkey; \n    wire [31:0] displayscore;\n\n    assign displayscore [7:0] = keycode;\n    assign displayscore [15:8] = lastkey;\n\n    SSeg7_Dev m4( .clk(clk), .rst(1'b0), .Start(clkdiv[20]), .SW0(SW0), .flash(1'b1), .Hexs(displayscore[31:0]),\n            .point(8'b0000_0000), .LES(8'b0000_0000), .seg_clk(seg_clk), .seg_sout(seg_sout), .SEG_PEN(SEG_PEN), .seg_clrn(seg_clrn));\n\n    wire [11:0] vga_data;\n    wire [8:0] row_addr;\n    wire [9:0] col_addr;\n\n    vgac vga0(.vga_clk(clkdiv[1]), .clrn(1'b1), .d_in(vga_data), .row_addr(row_addr), .col_addr(col_addr), .r(r), .g(g), .b(b), .hs(hs), .vs(vs));\n\n    get_vgadata gvd(.clk(clk), .clka(clkdiv[1]), .row_addr(row_addr), .col_addr(col_addr), .inmap(game_map), .vga_data(vga_data));\nendmodule\n</code></pre>  * keycode\u663e\u793a\uff08\u53f3\u65b9\u5411\u952e\uff09 ![Alt display](photo2/right1.jpg)  * keycode\u663e\u793a\uff08\u5de6\u65b9\u5411\u952e\uff09 ![Alt display](photo2/left1.jpg)  * keycode\u663e\u793a\uff08\u4e0a\u65b9\u5411\u952e\uff09 ![Alt display](photo2/up1.jpg)  * keycode\u663e\u793a\uff08\u4e0b\u65b9\u5411\u952e\uff09 ![Alt display](photo2/down1.jpg)  * keycode\u663e\u793a\uff08p\u952e\uff09 ![Alt display](photo2/p1.jpg)  ## 4.2 \u64cd\u4f5c\u8bf4\u660e\u4e0e\u6e38\u620f\u6f14\u793a  ### 4.2.1 \u64cd\u4f5c\u8bf4\u660e 1. \u9996\u5148\u5173\u95ed\u4e3b\u677fAF13\u5f00\u5173\uff0c\u6211\u4eec\u8fdb\u5165\u5f00\u59cb\u754c\u9762\u3002\u7136\u540e\uff0c\u6253\u5f00\u4e3b\u677fAF13\u5f00\u5173\u8fdb\u5165\u6e38\u620f\u754c\u9762\uff0c\u6216\u662f\u6309\u4e0b\u952e\u76d8P\u952e\u8fdb\u5165\u6e38\u620f\u754c\u9762\uff0c\u6b64\u65f6\u5f97\u5206\u663e\u793a\u5728\u4e03\u6bb5\u6570\u7801\u7ba1\u4e0a\uff0c\u521d\u59cb\u72b6\u6001\u4e3a0\u5206\u3002  2. \u73a9\u5bb6\u53ef\u4ee5\u5f00\u59cb\u6e38\u620f\u3002 - \u901a\u8fc7\u6309\u4e0b\u952e\u76d8\u4e0a\u7684\u5de6\u65b9\u5411\u952e\uff0c\u6216\u662f\u6253\u5f00AA10\u5f00\u5173\uff0c\u5b9e\u73b0\u754c\u9762\u4e0a\u65b9\u5757\u7684\u5411\u5de6\u6ed1\u52a8\uff1b - \u6309\u4e0b\u952e\u76d8\u4e0a\u7684\u53f3\u65b9\u5411\u952e\uff0c\u6216\u662f\u6253\u5f00AB10\u5f00\u5173\uff0c\u5b9e\u73b0\u754c\u9762\u4e0a\u65b9\u5757\u7684\u5411\u53f3\u6ed1\u52a8\uff1b - \u6309\u4e0b\u952e\u76d8\u4e0a\u7684\u4e0a\u65b9\u5411\u952e\uff0c\u6216\u662f\u6253\u5f00AA13\u5f00\u5173\uff0c\u5b9e\u73b0\u754c\u9762\u4e0a\u65b9\u5757\u7684\u5411\u4e0a\u6ed1\u52a8\uff1b - \u6309\u4e0b\u952e\u76d8\u4e0a\u7684\u4e0b\u65b9\u5411\u952e\uff0c\u6216\u662f\u6253\u5f00AA12\u5f00\u5173\uff0c\u5b9e\u73b0\u754c\u9762\u4e0a\u65b9\u5757\u7684\u5411\u4e0b\u6ed1\u52a8\u3002 \u8fdb\u884c\u79fb\u52a8\u7684\u64cd\u4f5c\u540e\uff0c\u76f8\u540c\u7684\u65b9\u5757\u4f1a\u8fdb\u884c\u5408\u5e76\uff0c\u73a9\u5bb6\u4f1a\u5f97\u5230\u5408\u5e76\u4ea7\u751f\u65b9\u5757\u7684\u6570\u5b57\u3002\u540c\u65f6\uff0c\u4f1a\u5728\u968f\u673a\u4f4d\u7f6e\u4e0a\u751f\u6210\u65b0\u65b9\u5757\u3002 \u5f53\u754c\u9762\u4e0a\u7684\u65b9\u5757\u6ee1\u4e86\u4e14\u65e0\u6cd5\u6d88\u9664\u65f6\uff08\u5931\u8d25\uff09\uff0c\u6216\u73a9\u5bb6\u6210\u529f\u51d1\u51fa2048\u65b9\u5757\u540e\uff08\u80dc\u5229\uff09\uff0c\u5c4f\u5e55\u4f1a\u8fdb\u5165\u7ed3\u675f\u7ed3\u7b97\u754c\u9762\uff0c\u6b64\u65f6\u4e03\u6bb5\u6570\u7801\u7ba1\u4e0a\u7684\u5f97\u5206\u4e3a\u6700\u7ec8\u5f97\u5206\u3002\u8fd9\u662f\u73a9\u5bb6\u53ef\u4ee5\u6309\u4e0b\u952e\u76d8P\u952e\u6216\u91cd\u7f6eAF13\u5f00\u5173\uff0c\u6765\u91cd\u65b0\u8fdb\u5165\u6e38\u620f\u3002  ### 4.2.2 \u6e38\u620f\u6f14\u793a  #### 4.2.2.1 \u8fdb\u5165\u5f00\u59cb\u754c\u9762 ![Alt demo](photo2/start.jpg)  #### 4.2.2.2 \u8fdb\u5165\u6e38\u620f\u521d\u59cb\u754c\u9762 ![Alt demo](photo2/game1.jpg)  #### 4.2.2.3 \u6e38\u620f\u521d\u59cb\u5f97\u5206\u4e3a0 ![Alt demo](photo2/initscore.jpg)  #### 4.2.2.4 \u6e38\u620f\u8fdb\u884c\u4e2d ![Alt demo](photo2/gaming.jpg)  #### 4.2.2.5 \u6e38\u620f\u7ed3\u675f ![Alt demo](photo2/gameover.jpg)  #### 4.2.2.6 \u6e38\u620f\u6700\u7ec8\u5f97\u5206 ![Alt demo](photo2/score1.jpg)  ## 4.3 \u7528\u6237\u4f53\u9a8c\u4e0e\u53cd\u9988 \u9879\u76ee\u5236\u4f5c\u5b8c\u6bd5\u540e\uff0c\u6211\u4eec\u9080\u8bf7\u540c\u5b66\u8fdb\u884c\u4f53\u9a8c\u6e38\u620f\uff0c\u7531\u4e8e\u8be5\u6b3e\u6e38\u620f\u8f83\u4e3a\u7ecf\u5178\uff0c\u4e14\u89c4\u5219\u8f83\u4e3a\u7b80\u5355\uff0c\u56e0\u6b64\u540c\u5b66\u4eec\u4e0a\u624b\u4e5f\u5f88\u5feb\u3002\u8fdb\u884c\u4f53\u9a8c\u540e\uff0c\u540c\u5b66\u4eec\u8ba4\u4e3a\u6e38\u620f\u5b9e\u73b0\u6bd4\u8f83\u5b8c\u6574\uff0c\u6e38\u620f\u529f\u80fd\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4e14\u64cd\u4f5c\u53cd\u5e94\u7075\u654f\u5ea6\u5f88\u9ad8\uff0c\u73a9\u8d77\u6765\u5f88\u4e1d\u6ed1\uff0c\u603b\u4f53\u6765\u8bf4\u6e38\u73a9\u4f53\u9a8c\u826f\u597d\u3002 \u540c\u65f6\uff0c\u975e\u76f8\u5173\u4e13\u4e1a\u7684\u540c\u5b66\u8fd8\u8868\u793a\u80fd\u5728\u8fd9\u79cd\u7535\u8def\u677f\u548c\u5c4f\u5e55\u663e\u793a\u5668\u4e0a\u73a9\u6e38\u620f\uff0c\u800c\u4e0d\u662f\u5e73\u5e38\u719f\u6089\u7684\u7535\u8111\u624b\u673a\u4e0a\u73a9\uff0c\u611f\u89c9\u975e\u5e38\u7684\u65b0\u5947\u548c\u6709\u8da3\uff0c\u8fd8\u8981\u6c42\u6211\u4eec\u5f00\u53d1\u66f4\u591a\u7684\u73a9\u6cd5\u548c\u6e38\u620f\u3002\u4ed6\u4eec\u4e5f\u63d0\u51fa\u4e86\u4e00\u4e9b\u53ef\u589e\u52a0\u7684\u73a9\u6cd5\uff0c\u5982\u8bbe\u7f6e\u7279\u5b9a\u8981\u6c42\uff0c\u5f62\u6210\u95ef\u5173\u5173\u5361\uff0c\u8bbe\u7f6e\u76ee\u6807\u5206\u6570\u7b49\u3002   # \u7b2c\u4e94\u7ae0 \u603b\u7ed3\u4e0e\u81f4\u8c22  ## 5.1 \u603b\u7ed3  * \u5f6d\u4e00\u709c \u672c\u6b21\u5b9e\u9a8c\u6211\u4e3b\u8981\u8d1f\u8d23\u9879\u76ee\u7684\u7edf\u7b79\u3001\u8f93\u5165\u8f93\u51fa\u76f8\u5173\u7684\u6a21\u5757\u7684\u7f16\u5199\u548c\u8c03\u8bd5\uff0c\u4ee5\u53ca\u540e\u671f\u5728\u5b9e\u9a8c\u5ba4debug\u548c\u4e0a\u677f\u8c03\u8bd5\u3002\u62c5\u4efb\u7ec4\u957f\u8981\u548c\u7ec4\u5458\u8ba8\u8bba\u5f62\u6210\u6574\u4f53\u7684\u6846\u67b6\u89c4\u5212\uff0c\u8fd8\u8981\u4e0d\u65ad\u548c\u7ec4\u5458\u4eec\u6c9f\u901a\u548c\u534f\u8c03\u3002\u672c\u6b21\u62c5\u4efb\u7ec4\u957f\u5c31\u8ba9\u6211\u771f\u5207\u5730\u611f\u53d7\u5230\u4e86\u548c\u4e0d\u540c\u7ec4\u5458\u6c9f\u901a\u534f\u8c03\uff0c\u4ea4\u6362\u4fe1\u606f\u7684\u91cd\u8981\u6027\uff0c\u8fd9\u6b21\u7ecf\u5386\u4e5f\u953b\u70bc\u4e50\u6211\u8bb8\u591a\u3002\u6211\u611f\u89c9\u6211\u66f4\u60f3\u662f\u7ec4\u5458\u4e4b\u95f4\u4ea4\u6d41\u7684\u6865\u6881\u3002\u6b64\u5916\uff0c\u8f93\u5165\u8f93\u51fa\u6a21\u5757\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u4e5f\u9047\u5230\u4e86\u8bb8\u591a\u95ee\u9898\uff0c\u6709\u65f6\u5019\u786c\u4ef6\u7535\u8def\u5e76\u4e0d\u50cf\u6211\u4eec\u60f3\u7684\u90a3\u6837\u5de5\u4f5c\uff0c\u800c\u662f\u9075\u5faa\u81ea\u5df1\u7684\u4e00\u5957\u903b\u8f91\uff0c\u9700\u8981\u4e0d\u65ad\u5730\u719f\u6089\u548c\u8c03\u6574\u3002\u540e\u671f\u7684\u7efc\u5408\u8c03\u8bd5\u4e5f\u662f\u4e00\u9879\u5927\u5de5\u7a0b\uff0c\u82b1\u8d39\u4e86\u6211\u5f88\u591a\u65f6\u95f4\u548c\u7cbe\u529b\uff0c\u6211\u6709\u5f88\u591a\u5929\u6ce1\u5728\u5b9e\u9a8c\u5ba4\u91cc\u8fdb\u884c\u4fee\u6539\u3001\u4e0a\u677f\u9a8c\u8bc1\u3001\u53d1\u73b0\u95ee\u9898\u3001\u518d\u4fee\u6539\u7684\u8fc7\u7a0b\uff0c\u4f46\u597d\u5728\u6700\u540e\u6210\u529f\u5730\u505a\u51fa\u4e86\u8fd9\u4e2a\u5de5\u7a0b\u3002\u611f\u89c9\u8fd8\u662f\u5f88\u81ea\u8c6a\u7684\u3002\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u6b21\u8bfe\u7a0b\u8bbe\u8ba1\u7ed9\u6211\u5e26\u6765\u4e86\u5f88\u591a\u6536\u83b7\u3002  * \u9648\u5955\u8431 \u672c\u6b21\u5b9e\u9a8c\u6211\u4e3b\u8981\u8d1f\u8d23\u4e86\u754c\u9762\u8bbe\u8ba1\u548c\u5b9a\u4f4d\u3002\u5b9a\u4f4d\u5de5\u7a0b\u4e2d\u9700\u8981\u5f88\u7ec6\u81f4\u7684\u50cf\u7d20\u70b9\uff0c\u4f46\u662f\u6211\u4e00\u5f00\u59cb\u5e76\u6ca1\u6709\u8003\u8651\u5230\uff0c\u6211\u4eba\u4e3a\u5730\u91cf\u5bbd\u5ea6\u7b97\u6bd4\u4f8b\u5bfc\u81f4\u6700\u540e\u5bfc\u5728sword\u677f\u4e0a\u7684\u56fe\u50cf\u5b58\u5728\u4e00\u5b9a\u8bef\u5dee\u3002\u6700\u540e\u5728\u961f\u53cb\u7684\u5e2e\u52a9\u4e0b\u6211\u7528\u751f\u6210\u7684coe\u6587\u4ef6\u8bfb\u53d6\u50cf\u7d20\u5206\u754c\u70b9\u6700\u540e\u5b8c\u6210\u51c6\u786e\u7684\u5b9a\u4f4d\u3002\u8fd9\u6b21\u5b9e\u9a8c\u4e2d\u6211\u67e5\u8be2\u4e86\u952e\u76d8\u7801\u5e76\u7406\u89e3\u4e86ps2\u63a5\u5165\u7684\u64cd\u4f5c\u3002\u8fd9\u6b21\u5b9e\u9a8c\u4e2d\u6211\u6ca1\u6709\u5f88\u591a\u5730\u53c2\u4e0e\u4ee3\u7801\u4ee5\u53ca\u786c\u4ef6\u7684\u8bbe\u8ba1\uff0c\u4f46\u5728\u524d\u671f\u7684\u8d44\u6599\u641c\u5bfb\u4e2d\u5bf9\u9879\u76ee\u642d\u5efa\u6709\u4e86\u6bd4\u8f83\u6e05\u695a\u7684\u8ba4\u77e5\uff0c\u8ba9\u6211\u5b66\u5230\u5f88\u591a\u3002  * \u8d75\u4f73\u4e50 \u903b\u8f91\u90e8\u5206\uff0c\u9047\u5230\u7684\u6700\u4e3b\u8981\u7684\u95ee\u9898\u662fwire\u4e0ereg\u7684\u642d\u914d\uff0c\u7ecf\u5e38\u5728\u8fd9\u90e8\u5206\u53d1\u751f\u62a5\u9519\u3002\u6700\u540e\u8fd8\u662f\u8ddf\u7740\u5b83\u62a5\u9519\u7684\u5177\u4f53\u5185\u5bb9\u4ee5\u53ca\u7f51\u4e0a\u7684\u6559\u7a0b\uff0c\u8fd8\u6709\u4eff\u771f\u65f6\u7684\u504f\u5dee\u4e0d\u65ad\u8fdb\u884c\u4fee\u6539\uff0c\u6700\u540e\u624d\u8f83\u597d\u7684\u5c06\u4e24\u8005\u7ed3\u5408\u8d77\u6765\uff0c\u4ece\u800c\u5e2e\u52a9\u5b9e\u73b0\u903b\u8f91\u90e8\u5206\u7684\u529f\u80fd\u3002  ## 5.2 \u81f4\u8c22  \u6700\u540e \u6211\u4eec\u7531\u8877\u5730\u611f\u8c22\u5728\u6211\u4eec\u63d0\u95ee\u65f6\u6781\u6709\u8010\u5fc3\u89e3\u7b54\u7684\u540c\u5b66\u4eec\uff0c\u8c22\u8c22\u5927\u5bb6\u7684\u5e2e\u52a9\uff01 \u7531\u8877\u611f\u8c22\u738b\u8001\u5e08\u7406\u8bba\u8bfe\u4e0a\u4f20\u6388\u7684\u77e5\u8bc6\u4ee5\u53ca\u4eba\u751f\u7ecf\u9a8c\uff01 \u7531\u8877\u611f\u8c22\u5b9e\u9a8c\u5ba4\u6d2a\u8001\u5e08\u7684\u5173\u6000\u548c\u6307\u5bfc\uff0c\u611f\u8c22\u4ed6\u5f88\u665a\u624d\u5173\u5b9e\u9a8c\u5ba4\uff0c\u8ba9\u6211\u4eec\u6709\u66f4\u591a\u7684\u65f6\u95f4\u5b8c\u6210\u5927\u4f5c\u4e1a\uff01 \u4e5f\u8981\u611f\u8c22\u8ba4\u771f\u53c2\u4e0e\u8bfe\u7a0b\u8bbe\u8ba1\u7684\u6211\u4eec\uff0c\u611f\u8c22\u4e00\u8d77\u5b8c\u6210\u5927\u7a0b\u5e8f\u7684\u6211\u4eec\uff01  # \u7b2c\u516d\u7ae0 \u5c0f\u7ec4\u6210\u5458\u5206\u5de5  \u5c0f\u7ec4\u5206\u5de5 * \u5f6d\u4e00\u709c\uff08\u7ec4\u957f\uff09\uff1a\u9879\u76ee\u6574\u4f53\u7684\u7edf\u7b79\uff0c\u663e\u793a\u6a21\u5757\u7f16\u5199\u4e0e\u8c03\u8bd5\uff0c\u5f00\u5173\u548c\u952e\u76d8\u8f93\u5165\u6a21\u5757\u8c03\u8bd5\uff0ctop\u6a21\u5757\u7684\u7f16\u5199\uff0c\u540e\u671f\u5de5\u7a0b\u6574\u5408\u3001debug\u548c\u4e0a\u677f\u8c03\u8bd5\u3002 * \u9648\u5955\u8431\uff1a\u7d20\u6750\u5bfb\u627e\u548c\u6574\u7406\u3001coe\u6587\u4ef6\u751f\u6210\u3001\u6e38\u620f\u754c\u9762\u7684\u8bbe\u8ba1\u3002 * \u8d75\u4f73\u4e50\uff1a\u6e38\u620f\u903b\u8f91\u6a21\u5757\u3001\u6e38\u620f\u80dc\u8d1f\u72b6\u6001\u6a21\u5757\u3001\u5341\u516d\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\u6a21\u5757\u3002  \u8d21\u732e\u5ea6 * \u5f6d\u4e00\u709c\uff1a1/3 * \u9648\u5955\u8431\uff1a32% * \u8d75\u4f73\u4e50\uff1a35%"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/","title":"Chap 1 Digital Systems and Information","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_1","title":"\u4fe1\u606f\u8868\u8fbe","text":"<p>discrete.</p> <p>voltage: HIGH, LOW(\u4e2d\u95f4 undefined/floating)</p> <p>\u8f93\u5165\u8f93\u51fa\u5bf9\u9ad8\u4f4e\u7535\u5e73\u7684\u5224\u5b9a\u8303\u56f4\uff1a\u5bbd\u8fdb\u4e25\u51fa</p> <p>\u6a21\u62df\u4fe1\u53f7-&gt;\u4e8c\u8fdb\u5236\u9ad8\u4f4e\u7535\u5e73\u7684\u4fe1\u53f7\uff1atransistors\u6676\u4f53\u7ba1</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_2","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u62bd\u8c61\u5c42","text":"<p>algorithms, programmimg languages, operating systems, intruction set architecture, microarchitecture, register transfers, logic gates, transistor circuits</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_3","title":"\u6570\u5b57\u7cfb\u7edf","text":"<p>\u4e00\u822c\u4e00\u4e2a r \u8fdb\u5236\u6570\u4f1a\u88ab\u5199\u6210\u8fd9\u4e2a\u5f62\u5f0f\uff1a</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#bcd","title":"BCD \u7801","text":"<p>\u5c06\u5341\u8fdb\u5236\u7684\u6bcf\u4e00\u4f4d\u5206\u522b\u7528\u771f\u503c\u76f8\u7b49\u7684 4 \u4f4d\u4e8c\u8fdb\u5236\u8868\u793a\uff0c<code>0</code>-<code>9</code> -&gt; <code>0000</code>-<code>1001</code></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#excess-3","title":"\u4f59\u4e09\u7801\uff08EXCESS 3\uff09","text":"<p>\u5728 BCD \u7801\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u5927\u5c0f\u4e3a 3 \u7684\u504f\u79fb\u91cf\uff0c<code>0</code>-<code>9</code>-&gt;<code>0011</code>-<code>1100</code></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#gray-codes","title":"\u683c\u96f7\u7801(Gray Codes)","text":"<p>\u4f18\u70b9\uff1a\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u5728\u4e8c\u8fdb\u5236\u4e0b\u7684\u8868\u793a\u53ea\u76f8\u5dee\u4e00\u4f4d\u3002\uff08\u5f53\u5728\u5360\u6ee1\u65f6\uff0c\u5bf9\u4e8e\u6574\u4e2a\u7f16\u7801\u5e8f\u5217\uff0c\u73af\u72b6\u6ee1\u8db3\u8be5\u6761\u4ef6\uff09</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_4","title":"\u683c\u96f7\u7801\u4e0e\u4e8c\u8fdb\u5236\u7684\u8f6c\u5316","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#to","title":"\u4e8c\u8fdb\u5236 to \u683c\u96f7\u7801","text":"<p>\u4fdd\u7559\u4e8c\u8fdb\u5236\u7801\u7684\u6700\u9ad8\u4f4d\u4f5c\u4e3a\u683c\u96f7\u7801\u7684\u6700\u9ad8\u4f4d\uff1b\u683c\u96f7\u7801\u7684\u5176\u4f59\u4f4d\u4e3a\u4e8c\u8fdb\u5236\u7801\u5bf9\u5e94\u4f4d\u4e0e\u5176\u4e0a\u4e00\u4f4d\u76f8\u5f02\u6216\u3002\uff08xor\uff09</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#to_1","title":"\u683c\u96f7\u7801 to \u4e8c\u8fdb\u5236","text":"<p>\u4fdd\u7559\u683c\u96f7\u7801\u7684\u6700\u9ad8\u4f4d\u4f5c\u4e3a\u4e8c\u8fdb\u5236\u7801\u7684\u6700\u9ad8\u4f4d\uff1b\u4e8c\u8fdb\u5236\u7801\u7684\u5176\u4f59\u4f4d\u4e3a\u683c\u96f7\u7801\u5bf9\u5e94\u4f4d\u4e0e\u4e8c\u8fdb\u5236\u4e0a\u4e00\u4f4d\u76f8\u5f02\u6216\u3002\uff08xor\uff09</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_5","title":"\u5947\u5076\u6821\u9a8c\u4f4d","text":"<p>\u4fe1\u53f7\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4fe1\u53f7\u6296\u52a8\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8fdb\u884c\u9519\u8bef\u68c0\u6d4b\u3002</p> <p>\u4e00\u79cd\u9519\u8bef\u68c0\u6d4b\u65b9\u6cd5\u53eb\u505a\u5197\u4f59Redundancy\uff0c\u52a0\u5165\u989d\u5916\u4fe1\u606f\u68c0\u67e5\u662f\u5426\u6b63\u786e\u3002</p> <p>\u5197\u4f59\u7684\u4e00\u79cd\u4e3a\u5f15\u5165\u5947\u5076\u6821\u9a8c\u4f4dParity Bit\u3002\u5947\u6821\u9a8c\uff0c\u5076\u6821\u9a8c\u3002odd/even parity.\u901a\u8fc7\u5f15\u5165\u989d\u5916\u7684\u4e00\u4f4d\u6765\u4fdd\u8bc1\u6574\u4e2a\u4fe1\u606f\u4e32\u4e2d <code>1</code> \u7684\u4e2a\u6570\u662f\u5947\u6570/\u5076\u6570\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#chap-2-combinational-logic-circuits","title":"Chap 2 Combinational Logic Circuits","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_6","title":"\u903b\u8f91\u8fd0\u7b97","text":"<p>\u8fd9\u91cc\u6ce8\u610f\u5fb7\u6469\u6839\u5b9a\u5f8b\u5c31\u591f\u4e86\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_7","title":"\u903b\u8f91\u95e8","text":"<p>and \u76f4 or \u5f2f not \u4e09\u89d2\u5708</p> <p>\u5ef6\u65f6 delay \uff08\u8fd9\u91cc\u53ef\u80fd\u4f1a\u8003\u5ef6\u65f6\u7684\u8ba1\u7b97\uff09</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#universal-gate","title":"\u901a\u7528\u95e8 Universal Gate","text":"<p>logically completed</p> <p>\u6307 NAND \u548c NOR \uff0c\u5177\u4f53\u600e\u4e48\u51d1andornot\u7528\u901a\u7528\u591f\u4e86</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_8","title":"\u5e03\u5c14\u4ee3\u6570","text":"<p>\u4e00\u4e2a\u91cd\u8981\u7684\u8fd0\u7b97\u5f8b\uff1a(X + Y)(X + Z) = X + YZ</p> <p>\uff08\u6bd4\u5982\u8bf4\uff1a(X + Y)(X + Yba) = X + YYba = X\uff0c\u6216\u8005 X + XbaY = (X + Xba)(X + Y)= X + Y\uff09</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#duality-rule","title":"\u5bf9\u5076\u6cd5\u5219 Duality Rule","text":"<p>\u5c06\u539f\u5f0f\u7684\u4e58\u6539\u4e3a\u6216\uff0c\u539f\u5f0f\u7684\u6216\u6539\u4e3a\u4e58\u3002\uff08\u62ec\u53f7\u548c\u52a0\u53f7\u7684\u5151\u6362\uff09</p> <p>\u4f46\u662f\u4e0d\u80fd\u6539\u53d8\u8ba1\u7b97\u4f18\u5148\u7ea7\uff0c\uff0c\uff0c\u5fc5\u8981\u7684\u65f6\u5019\u52a0\u62ec\u53f7</p> <p>\u9664\u975e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u662f\u81ea\u5bf9\u5076 Self_dual \u7684\uff0c\u90a3\u4e48\u4ed6\u7684\u8868\u8fbe\u5f0f\u90fd\u4e0e\u539f\u8868\u8fbe\u5f0f\u4e0d\u540c</p> <p>\u5982\u679c F \u4e0e G \u7b49\u4ef7\uff0c\u90a3\u4e48\u4e24\u8005\u7684\u5bf9\u5076\u4e5f\u7b49\u4ef7\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#complement-of-a-function","title":"\u4e92\u8865\u51fd\u6570 Complement of a Function","text":"<p>\u4e00\u4e2a\u51fd\u6570\u7684\u975e = \u5b83\u7684\u5bf9\u5076\u51fd\u6570 \u6bcf\u4e2a\u53d8\u91cf\u90fd\u53d6\u53cd</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#substitution-rules","title":"\u66ff\u4ee3\u6cd5\u5219 Substitution Rules","text":"<p>\u4e00\u4e2a\u539f\u6709\u7b49\u5f0f\uff0c\u5c06\u8fd9\u4e2a\u7b49\u5f0f\u4e2d\u7684\u4e00\u4e2a\u53d8\u91cf\u5168\u90e8\u66ff\u6362\u4e3a\u53e6\u4e00\u4e2a\u53d8\u91cf\u6216\u8005\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5219\u7b49\u5f0f\u4f9d\u7136\u6210\u7acb</p> <p>\u6bd4\u5982\u8bf4\uff1a</p> <p>\u5bf9\u4e00\u4e2a\u7b49\u5f0f X(Y + Z) = XY + XZ;</p> <p>\u4f7f\u7528 X + YZ \u66ff\u6362\u6240\u6709\u7684 X\uff0c\u5219\uff1a(X + YZ)(Y + Z) = (X + YZ)Y + (X + YZ)Z\uff1b</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#consensuc-theorem","title":"\u4e00\u81f4\u6027\u5b9a\u7406 Consensuc Theorem","text":"<p>XY + XbaZ + YZ = XY + XbaZ </p> <p>\u5c31\u662f\u8bf4\u8fd9\u91cc\u628aYZ\u76f4\u63a5\u820d\u53bb\u4e86\u3002\u8fd9\u91cc\u611f\u89c9\u53ef\u4ee5\u76f4\u63a5\u820d\u53bb\u662f\u56e0\u4e3a\u524d\u9762\u4e58 Y \u548c\u4e58 Z \u7684\u5206\u522b\u521a\u597d\u662f X \u548c Xba\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#standard-forms-canonical-forms","title":"\u6807\u51c6\u5f62\u5f0f Standard Forms \u4e0e\u89c4\u8303\u5f62\u5f0f Canonical Forms","text":"<p>midterm\uff1a</p> <p>\u6700\u5c0f\u9879\u4e4b\u548c SOM \uff08\u4e4b\u548c\u4ee3\u8868\uff0c\u5bf9\u771f\u503c\u8868\u7ed3\u679c\u4e3a1\u7684\u72b6\u6001\u5168\u90e8\u5217\u51fa\u6765\u76f8\u52a0\uff08or\uff09\uff0c\u67091\u5f971\uff09</p> <p>maxterm\uff1a</p> <p>\u6700\u5927\u9879\u4e4b\u79ef POM \uff08\u4e4b\u79ef\u4ee3\u8868\uff0c\u5bf9\u771f\u503c\u8868\u7ed3\u679c\u4e3a0\u7684\u72b6\u6001\u5168\u90e8\u5217\u51fa\u6765\u76f8\u4e58\uff08and\uff09\u540e\u53d6\u53cd\uff0c\u67090\u5f970\uff09</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_9","title":"\u7535\u8def\u5b9e\u73b0\u4e0e\u4f18\u5316","text":"<p>\u5361\u8bfa\u56feKarnauph map</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#cost-criteria","title":"\u6210\u672c\u6807\u51c6 cost criteria","text":"<p>\u4e09\u79cd\u6807\u51c6\uff1a - Literal cost(L) \u5b57\u9762\u6210\u672c   - \u4e00\u5171\u51fa\u73b0\u4e86\u51e0\u4e2a\u53d8\u91cf\uff0cAB + ACBba + AbaBbaC\uff0c\u8fd9\u91cc L = 8\uff1b - Gate input cost(G) \u95e8\u8f93\u5165\u6210\u672c - Gate input cost with NOTs (GN) \u5e26not\u7684\u95e8\u8f93\u5165\u6210\u672c</p> <p>\u6bd4\u5982\uff1a  - G = 8 + 3(3\u4e2aterm) = 11, GN = G + 3(3\u4e2a\u5355\u4e2a\u7684\u53d6\u53cd) = 14 - G = 11 + 4 = 15\uff0c GN = G + 3(3\u4e2adistinct\u7684\u53d6\u53cd) = 18 - G = 10 + 4 = 14\uff0c GN = G + 3 = 17 - \u6ce8\u610f\uff0cGN \u8ba1\u7b97\u7684\u662f distinct \u7684\u53d6\u53cd\u7684\u4e2a\u6570\uff0cG \u53d6\u7684\u662f\u9879\u6570\uff0c\u9879\u6570\u4e0d\u5305\u62ec\u4ec5\u542b\u5355\u4e2a\u5b57\u6bcd\u7684\u9879\u3002\uff08\u8fd9\u662f\u5bf9\u4e8e SOP \u548c POS \u6765\u8bf4\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u624d\u6709\u9879\u6570\u6982\u5ff5\uff09</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_10","title":"\u5361\u8bfa\u56fe","text":"<p>\u5bf9\u4e8e\u8fd9\u5f20\u56fe\u3002\u6211\u4eec\u4f7f\u7528 SOM \uff08\u5176\u5b9e\u4e5f\u53ef\u4ee5\u4e00\u773c\u770b\u51fa\uff09\u8fd9\u4e2a\u7684\u7ed3\u679c\u7b49\u5f0f\u5e94\u8be5\u662f F(x,y,z) = y.</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_11","title":"\u89c4\u8303\u5316\u7684\u5316\u7b80","text":"<p>\u6211\u4eec\u5f15\u5165 \u8d28\u8574\u542b\u9879 prime implication\u3002</p> <p>\u4e00\u4e2a\u8d28\u8574\u542b\u9879\u662f\u901a\u8fc7\u5728\u56fe\u8868\u4e2d\u7ed3\u5408\u6700\u5927\u6570\u7684\u76f8\u90bb\u7684\u6b63\u65b9\u5f62\u65b9\u5757\u6210\u4e00\u4e2a\u5927\u7684\u77e9\u5f62\u800c\u83b7\u5f97\u7684\u4e58\u79ef\u9879\uff0c\u5176\u4e2d\u6b63\u65b9\u5f62\u7684\u6570\u91cf\u4e3a2\u7684\u5e42\u3002</p> <p>Essential Prime Implicant\u5982\u679c\u8fd9\u4e2a\u8d28\u8574\u542b\u9879\u662f\u552f\u4e00\u80fd\u591f\u8986\u76d6\u51e0\u4e2aminterms\u7684\u8d28\u8574\u542b\u9879\u3002</p> <p></p> <p>\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8981\u5c3d\u91cf\u51cf\u5c11\u8d28\u8574\u542b\u9879\u4e4b\u95f4\u7684\u91cd\u53e0\uff0c\u5728\u6700\u540e\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\uff0c\u8981\u786e\u4fdd\u6240\u9009\u7684\u6bcf\u4e2a\u8d28\u8574\u542b\u9879\u81f3\u5c11\u5305\u62ec\u4e00\u4e2a\u4e0d\u5305\u542b\u5728\u6240\u9009\u7684\u4efb\u4f55\u5176\u4ed6\u8d28\u8574\u542b\u9879\u4e2d\u7684\u5c0f\u9879\u3002</p> <p>\u4e00\u4e9b\u5b9e\u4f8b\uff1a</p> <p></p> <p></p> <p></p> <p>\u5f531\u4eec\u9009\u4e0d\u51fa\u6765\u5f88\u96be\u5212\u8d28\u8574\u542b\u9879\u7684\u65f6\u5019\uff0c\u90a3\u5c31\u9009\u62e9\u62ff0\u4eec\u4e0b\u624b\u5427\uff0c\u4e0b\u624b\u5c31\u4f1a\u53d8\u6210\u4e86maxterms\u4e86\uff1a</p> <p></p> <p>\u76f8\u6bd4\u8d77\u6765\uff1a</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#dont-cares-in-k-maps","title":"\u4e0d\u5b9a\u9879 Don't Cares in K-Maps\uff1a","text":"<p>\u6211\u4e0d\u61c2\u4f46\u662f\u4ed6\u8bf4\u7684\u5bf9</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_12","title":"\u4e09\u6001\u95e8","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#3-state-buffer","title":"\u4e09\u6001\u7f13\u51b2\u56683-state buffer","text":"<p>\u4f7f\u80fd\u7aef enable</p> <p>\u4f7f\u80fd\u7aef\u7f6e 1 \u65f6 \u8bfb 1 \u8f93\u51fa 1 \u8bfb 0 \u8f93\u51fa 0\uff1b\u4f7f\u80fd\u7aef\u7f6e 0 \u65f6\u8f93\u51fa\u4e3aHi-Z\uff08\u6d6e\u52a8\uff0c\u9ad8\u963b\u6001\uff09</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_13","title":"\u590d\u6742\u95e8","text":"<p>\u4e00\u822c\u6709\u5f88\u591a\u4e2a\u8f93\u5165\uff0c\u957f\u5f97\u4e11\u770b\u5f97\u61c2\u5c31\u597d\u4e86</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#chap-3-combinational-logic-design","title":"Chap 3 Combinational Logic Design","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_14","title":"\u5206\u5c42\u8bbe\u8ba1","text":"<p>Top-Down \u548c Bottom-up\uff0c\u4ece\u9700\u6c42\u5f00\u59cb\u548c\u6839\u636e\u73b0\u6709\u5143\u4ef6\u7ec4\u5408</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_15","title":"\u6280\u672f\u53c2\u6570","text":"<p>Fan-in, Fan-out, Propagation Delay \u4fe1\u53f7\u6539\u53d8\u540e\u4ece\u8f93\u5165\u5230\u8f93\u51fa\u6240\u9700\u7684\u53d8\u5316\u65f6\u95f4</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_16","title":"\u6247\u5165\u6247\u51fa","text":"<p>\u63cf\u8ff0\u4e00\u4e2a\u95e8\u80fd\u63a5\u53d7\u7684\u6700\u591a\u8f93\u51fa\u91cf\uff0c\u901a\u8fc7\u6807\u51c6\u8d1f\u8f7d\u6765\u5b9a\u4e49</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_17","title":"\u8bc4\u4f30\u8d1f\u8f7d","text":"<p>transition time \u8fc7\u6e21\u65f6\u95f4</p> <p></p> <p>\u5f53\u8d85\u51fa\u6247\u5165\u540e\uff0c\u95e8\u5bf9\u8f93\u51fa\u7684\u53cd\u5e94\u592a\u6162\u4e86\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_18","title":"\u4f20\u64ad\u5ef6\u8fdf","text":"<p>\u4f7f\u7528 t<sub>PHL</sub> \u548c t<sub>PLH</sub> \u6765\u5206\u522b\u63cf\u8ff0\u4ece\u9ad8\u7535\u5e73\u53d8\u5316\u5230\u4f4e\u7535\u5e73\u548c\u4ece\u4f4e\u7535\u5e73\u53d8\u5316\u5230\u9ad8\u7535\u5e73\u3002</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_19","title":"\u5ef6\u65f6\u6a21\u578b","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#transport-delay","title":"\u4f20\u8f93\u5ef6\u8fdf transport delay","text":"<p>\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u5ef6\u65f6\u662f\u4e00\u4e2a\u56fa\u5b9a\u503c</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#intertial-delay","title":"\u60ef\u6027\u5ef6\u8fdf intertial delay","text":"<p>\u62d2\u7edd\u65f6\u95f4rejection time\uff1a\u5f53\u8f93\u5165\u8fbe\u5230\u4e00\u5b9a\u80fd\u91cf\u540e\u624d\u4f1a\u51fa\u53d1\u6805\u6781\u8f93\u51fa\uff08\u7528\u6765\u8fc7\u6ee4\u566a\u97f3\uff09</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_20","title":"\u8fd9\u91cc\u4f1a\u8003\u5230\u4e00\u4e9b\u5ef6\u8fdf\u8ba1\u7b97\u9898","text":"<p>\u6211\u4eec\u5e94\u8be5\u8981\u8003\u8651\u5230\u4e00\u4e2a\u7535\u8def\u7684\u5ef6\u8fdf\u7531\u7535\u8def\u672c\u8eab\u7684\u56fa\u6709\u5ef6\u8fdf\u548c\u4e0d\u540c\u8d1f\u8f7d\u5bfc\u81f4\u7684\u4e0d\u540c\u5ef6\u65f6\u76f8\u5408\u800c\u6210\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#glitch","title":"\u6bdb\u523a Glitch","text":"<p>\u800c\u56e0\u4e3a\u7cfb\u7edf\u5b58\u5728\u5ef6\u8fdf\uff0c\u56e0\u6b64\u6211\u4eec\u5f97\u5230\u7684\u4fe1\u53f7\u56fe\u5f88\u591a\u60c5\u51b5\u534e\u90fd\u4f1a\u6709\u4e00\u4e2a\u6bdb\u523a\uff0c</p> <p>\uff08\u987a\u4fbf\u5b9e\u64cd\u505a\u4e2a\u9898\u5427\uff09</p> <p></p> <p>\u800c\u8fd9\u91cc\u9762\u7684\u6bdb\u523a\u6211\u4eec\u53ef\u4ee5\u7528\u6dfb\u52a0\u5197\u4f59\u9879\u6765\u89e3\u51b3\u3002</p> <p>\u6bd4\u5982\u8bf4\u5bf9\u8fd9\u4e2a\u5f0f\u5b50\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u5197\u4f59\u9879 AB \u5c31\u53ef\u4ee5\u6d88\u9664\u6bdb\u523a\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_21","title":"\u6b63\u903b\u8f91\u548c\u8d1f\u903b\u8f91","text":"<p>\u6b63\u903b\u8f91\u4ee51\u4e3a\u6709\u6548\u4fe1\u53f7\uff0c\u8d1f\u903b\u8f91\u4ee50\u4e3a\u6709\u6548\u4fe1\u53f7\u3002</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_22","title":"\u9a8c\u8bc1\u6b63\u786e\u6027","text":"<p>Manual Logic Analysis \u548c Simulation</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_23","title":"\u7ec4\u5408\u903b\u8f91","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#decoder","title":"Decoder","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#encoder","title":"Encoder","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#mux","title":"MUX","text":"<p>MUX \u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u7684\u903b\u8f91\u51fd\u6570\uff1a</p> <p>\u5c06\u63a7\u5236\u7aef\u5f53\u505a\u8f93\u5165\uff0c\u539f\u6765\u7684\u8f93\u5165\u5f53\u505a\u7ed3\u679c\uff0c\u5728\u539f\u6765\u7684\u8f93\u5165\u7aef\u5199\u5165\u903b\u8f91\u51fd\u6570\u7684\u771f\u503c\u8868\u4ee5\u5b9e\u73b0\u4efb\u610f\u903b\u8f91\u51fd\u6570\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#half-adderfull-adder","title":"half adder\uff0cfull adder","text":"<p>\u6709\u884c\u6ce2\u52a0\u6cd5\u5668</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_24","title":"\u4e8c\u8fdb\u5236\u51cf\u6cd5","text":"<p>\u4f7f\u7528\u8865\u7801</p> <p></p> <p>\u5728\u8f93\u5165\u4e2d\u6dfb\u52a0\u5f02\u6216\u95e8\u6765\u5b9e\u73b0\u53cd\u7801\uff0c\u518d\u7528C0\u6765\u5b9e\u73b0+1\u4ece\u800c\u5f97\u5230\u8865\u7801</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#chap-4-sequential-circuits","title":"Chap 4 Sequential Circuits","text":"<p>\u540c\u6b65 synchronous \u548c\u5f02\u6b65 asynchronous</p> <p>\u800c\u540c\u6b65\u7535\u8def\u7684\u4f7f\u7528\u66f4\u52a0\u5e7f\u6cdb\uff0c\u901a\u5e38\u8fd9\u4e9b\u79bb\u6563\u7684\u65f6\u523b\u90fd\u662f\u7531 \u65f6\u949f\u53d1\u751f\u5668(clock generator) \u8fd9\u79cd\u65f6\u5e8f\u5668\u4ef6\u4ea7\u751f\u5468\u671f\u6027\u7684 \u65f6\u949f\u8109\u51b2(clock pulse) \u5e8f\u5217\u6765\u5b9e\u73b0\u7684\uff08\u8fd9\u79cd\u7535\u8def\u4e00\u822c\u88ab\u79f0\u4e3a \u949f\u63a7\u65f6\u5e8f\u7535\u8def(clocked sequential circuit)\uff0c\u7531\u4e8e\u8bbe\u8ba1\u76f8\u5bf9\u5bb9\u6613\uff0c\u9c81\u68d2\u6027\u5f3a\uff0c\u6240\u4ee5\u88ab\u5e7f\u6cdb\u5e94\u7528\uff09</p> <p>\u7f13\u51b2\u5668buffer \u4e00\u822c\u901a\u8fc7\u4e24\u4e2a\u975e\u95e8\u4e32\u8054\uff0c\u5e76\u5c06\u8f93\u5165\u8fde\u901a\u8f93\u51fa\u5b9e\u73b0\uff0c\u8fd9\u6837\u80fd\u591f\u5b9e\u73b0\u4fe1\u606f\u7684\u5b58\u50a8\uff0c\u7136\u800c\u65e0\u6cd5\u4fee\u6539\u3002\u800c\u9501\u5b58\u5668\u5c31\u662f\u5728\u7f13\u51b2\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u975e\u95e8\u66ff\u6362\u4e3a\u6216\u975e\u95e8\u6216\u4e0e\u975e\u95e8\u5b9e\u73b0\u7684\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_25","title":"\u9501\u5b58\u5668","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#sr","title":"SR \u9501\u5b58\u5668","text":"<p>SR \u9501\u5b58\u5668\u4f7f\u7528\u6216\u975e\u95e8\uff0c S'R' \u9501\u5b58\u5668\u4f7f\u7528\u4e0e\u975e\u95e8\uff0cSR \u5f53\u8f93\u5165\u4e3a 0 \u7684\u65f6\u5019\u4fdd\u6301\u72b6\u6001\uff0c\u5f53\u8f93\u5165\u4e3a 1 \u7684\u65f6\u5019\u65e0\u6548\uff0cS'R'\u76f8\u53cd\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#d","title":"D \u9501\u5b58\u5668","text":"<p>\u5e26\u63a7\u5236\u8f93\u5165\u7684SR\u9501\u5b58\u5668\uff0c\u5f53 C \u4e3a 1 \u80fd\u5199\u5165\uff0cC \u4e3a 0 \u65f6\u9501\u5b58\u3002 </p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#flipflop","title":"flipflop \u89e6\u53d1\u5668","text":"<ul> <li>\u5728\u6709\u8109\u51b2\uff08\u9ad8\u7535\u5e73\uff09\u65f6\uff0c\u4fee\u6539\u7b2c\u4e00\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u4fdd\u6301\u7b2c\u4e8c\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff1b\u5728\u6ca1\u6709\u8109\u51b2\uff08\u4f4e\u7535\u5e73\uff09\u65f6\u5019\u4fdd\u6301\u7b2c\u4e00\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u4fee\u6539\u7b2c\u4e8c\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u66f4\u65b0\u89e6\u53d1\u5668\u7684\u72b6\u6001\uff0c\u5373 \u4e3b\u4ece\u5f0f(master-slave)\u89e6\u53d1\u5668\uff1b</li> <li>\u4ec5\u5728\u65f6\u949f\u7684\u8fb9\u7f18\u89e6\u53d1\uff0c\u5373\u5728\u7279\u5b9a\u65f6\u523b\u4ec5\u63a5\u53d7\u4e00\u4e2a\u8f93\u5165\uff0c\u5373 \u8fb9\u6cbf\u89e6\u53d1\u5f0f(edge-triggered)\u89e6\u53d1\u5668\uff1b</li> </ul> <p>\u8fb9\u6cbf\u89e6\u53d1\u5f0f D \u89e6\u53d1\u5668\u662f\u76ee\u524d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u89e6\u53d1\u5668\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#sr_1","title":"SR \u4e3b\u4ece\u89e6\u53d1\u5668","text":"<p>\u4f7f\u7528\u4e00\u5bf9 gated D-latches\uff0c\u6765\u8bb0\u5f55\u548c\u5206\u9694next state \u548c current state</p> <ul> <li> <p>\u5f53clock\u521d\u7f6e1\u65f6\uff0cmaster\u7684we\u7aef\u53e3\u4e3a1\uff0cslave\u7684we\u7aef\u53e3\u4e3a0\uff0cmaster \u8bfb\u5165\u72b6\u6001\uff0cslave \u4fdd\u6301\u72b6\u6001\u3002</p> </li> <li> <p>\u5f53clock\u53c8\u7f6e\u4e3a0\u65f6\uff0cslave\u7684we\u7aef\u53e3\u4e3a0\uff0cmaster\u7684we\u7aef\u53e3\u4e3a1\uff0c\u5219slave\u8bb0\u5f55\u4e86\u4e0a\u4e00\u4e2a\u9636\u6bb5\uff08clock\u4e3a1\u65f6\uff09\u7684\u8bfb\u5165\u6570\u636e</p> </li> </ul> <p>NOTE 1: JK \u89e6\u53d1\u5668\uff08\u6ce8\u610f\u662f\u4e0e\u975e\u95e8\uff09</p> <p></p> <p>JK\u89e6\u53d1\u5668\u662fSR\u89e6\u53d1\u5668\u57fa\u7840\u4e0a\u7684\u6539\u8fdb\uff0c\u5176\u4e2d\u5373\u4f7fS=R=1\u4e5f\u65e0\u5173\u7d27\u8981</p> <ul> <li>\u5f53 J \u4e0e K \u8f93\u5165\u6570\u636e\u4e0d\u540c\uff0c\u90a3\u4e48\u8f93\u51fa Q \u4f1a\u5728\u4e0b\u4e00\u4e2a\u65f6\u949f\u6cbf\u53d6 J \u7684\u503c</li> <li>\u5f53 J \u4e0e K \u8f93\u5165\u6570\u636e\u76f8\u540c\u4e14\u90fd\u4e3a\u9ad8\u7535\u4f4d\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u4e92\u6362\uff080\u53d81\uff0c1\u53d80\uff09</li> <li>\u5f53 J \u4e0e K \u8f93\u5165\u6570\u636e\u76f8\u540c\u4e14\u90fd\u4e3a\u4f4e\u7535\u4f4d\u65f6\uff0c\u7ed3\u679c\u4fdd\u6301\u3002</li> </ul> <p>NOTE 2: T \u89e6\u53d1\u5668</p> <p></p> <p>\u53ea\u6709\u4e00\u4e2a\u8f93\u5165 T \uff0c\u5c06 JK \u89e6\u53d1\u5668\u7684 J \u7aef\u548c K \u7aef\u76f8\u63a5\u3002</p> <ul> <li>\u5f53 T = 0\uff0c\u8f93\u51fa\u4fdd\u6301</li> <li>\u5f53 T = 1\uff0c\u8f93\u51fa\u7ed3\u679c\u53cd\u8f6c\uff080\u53d8\u62101\uff0c,\u53d8\u62100\uff09</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_26","title":"\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668","text":"<p>\u5982\u56fe\u4e3a\u4e0a\u5347\u6cbf\u89e6\u53d1\u7684 D \u89e6\u53d1\u5668\u3002</p> <p>NOTE:</p> <p>\u89e6\u53d1\u5668\u7684\u57fa\u672c\u63cf\u8ff0\u65b9\u6cd5\uff1a - \u7406\u8bba\u5206\u6790\u4e2d\uff1a\u72b6\u6001\u8868(Characteristic Table, or State Table)\u7528\u8f93\u5165\u548c\u5f53\u524d\u72b6\u6001\u6765\u63cf\u8ff0\u4e0b\u4e00\u72b6\u6001\u3002 - \u5de5\u7a0b\u8bbe\u8ba1\u4e2d\uff1a\u6fc0\u52b1\u8868(Excitation Table)\u7528\u5f53\u524d\u72b6\u6001\u548c\u4e0b\u4e00\u72b6\u6001\u6765\u63cf\u8ff0\u8f93\u5165\uff08\u5c55\u793a\u4ece\u5f53\u524d\u72b6\u6001\u8f6c\u79fb\u5230\u4e0b\u4e00\u72b6\u6001\u6240\u9700\u8981\u7684\u8f93\u5165\uff09\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_27","title":"\u65f6\u5e8f\u7535\u8def\u5206\u6790","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#flip-flop-input-equation","title":"\u89e6\u53d1\u5668\u7684\u8f93\u5165\u65b9\u7a0b flip-flop input equation","text":"<p>D<sub>A</sub> = AX + BX</p> <p>D<sub>B</sub> = AbaX</p> <p>Y = (A + B)Xba</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#state-table","title":"\u72b6\u6001\u8868 state table","text":"<p>present state, input, next state, output</p> <p>\u5bf9 D<sub>A</sub>: A(t + 1) = D<sub>A</sub> = A(t)X + B(t)X</p> <p>D<sub>B</sub>: B(t + 1) = D<sub>B</sub> = A(t)baX</p> <p>\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u753b\u72b6\u6001\u56fe\uff1a</p> Present State Input Next State Output <code>AB</code> <code>X</code> <code>AB</code> <code>Y</code> <code>00</code> <code>1</code> <code>00</code> <code>0</code> <code>00</code> <code>0</code> <code>01</code> <code>0</code> <code>01</code> <code>0</code> <code>00</code> <code>1</code> <code>01</code> <code>1</code> <code>11</code> <code>0</code> <code>10</code> <code>0</code> <code>00</code> <code>1</code> <code>10</code> <code>1</code> <code>10</code> <code>0</code> <code>11</code> <code>0</code> <code>00</code> <code>1</code> <code>11</code> <code>1</code> <code>10</code> <code>0</code> <ul> <li>Mealy model circuit\uff1a\u8f93\u51fa\u4f9d\u8d56\u5f53\u524d\u72b6\u6001\u4e0e\u8f93\u5165\uff1b</li> <li>Moore model circuit\uff1a\u8f93\u51fa\u4e0d\u4f9d\u8d56\u8f93\u5165\u53ea\u4f9d\u8d56\u5f53\u524d\u72b6\u6001\u3002</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#state-diagram","title":"\u72b6\u6001\u8868 state diagram","text":"<p>\u6bd4\u5982\u8bf4\u8fd9\u5f20\u56fe\u662f\u4e0a\u4e00\u5f20\u8868\uff08\u7c73\u52d2\u578b\uff09\u5bf9\u5e94\u7684\u56fe\uff1a</p> <p></p> <p>\u800c\u6469\u5c14\u578b\u7684\u72b6\u6001\u56fe\u5c31\u975e\u5e38\u7b80\u5355\uff1a</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#equivalent-state","title":"\u7b49\u4ef7\u72b6\u6001 equivalent state","text":"<p>\u5bf9\u4e8e\u4e24\u4e2a\u72b6\u6001\uff0c\u5982\u679c\u5b83\u4eec\u5bf9\u4e8e\u540c\u4e00\u8f93\u5165\u5e8f\u5217\u7684\u54cd\u5e94\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff08\u5305\u62ec\u76f8\u540c\u7684\u8f93\u51fa\u548c\u76f8\u540c\u7684\u72b6\u6001\u8f6c\u79fb\uff09\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u72b6\u6001\u662f\u7b49\u4ef7\u7684\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_28","title":"\u672a\u7b80\u5316\u7684\u72b6\u6001\u56fe","text":"<p>\u72b6\u6001 S2 \u548c S3 \u5bf9\u4e8e\u8f93\u5165 <code>0</code> \u8f93\u51fa\u4e3a <code>1</code>\uff0c\u4e0b\u4e00\u72b6\u6001\u4e3a S0\uff1b\u5bf9\u4e8e\u8f93\u5165 <code>1</code>\uff0c\u76f8\u5e94\u7684\u8f93\u51fa\u90fd\u662f <code>0</code>\uff0c\u4e0b\u4e00\u72b6\u6001\u90fd\u662f S2\u3002\u6240\u4ee5 S2 \u548c S3 \u662f\u7b49\u4ef7\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u7b49\u4ef7\u72b6\u6001\u7b80\u5316\u6210\u540c\u4e00\u4e2a\u72b6\u6001\uff0c\u8bb0\u4e3a S2\u3002</p> <p>\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u6ce8\u610f\u5230 S1 \u548c\u65b0\u7684 S2 \u4e5f\u662f\u7b49\u4ef7\u72b6\u6001\uff0c\u6211\u4eec\u7ee7\u7eed\u5316\u7b80\u5b83\u4eec\u3002</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#chap-5-digital-hardware-implementation","title":"Chap 5 Digital Hardware Implementation","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#mos","title":"MOS \u7ba1","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#nmos-pmos","title":"NMOS PMOS","text":"<p>NMOS \u753b\u6cd5\u524d\u9762\u6ca1\u6709\u53d6\u53cd\u7684\u5706\u5708\uff0c\u8868\u793a\u5b83\u5728X=1\u65f6\u63a5\u901a\uff1bPMOS\u76f8\u53cd\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 NMOS \u548c PMOS \u7ba1\u6765\u8fdb\u884c\u4e00\u4e9b\u903b\u8f91\u7684\u8bbe\u8ba1\u3002\u6211\u4eec\u7528\u5e76\u8054\u8868\u793a\u76f8\u52a0\uff0c\u7528\u4e32\u8054\u8868\u793a\u76f8\u4e58\u3002</p> <p></p> <p>\u5de6\u56fe\u5b9e\u73b0\u4e86 Xba*Yba\uff0c\u53f3\u56fe\u5b9e\u73b0\u4e86X + Y</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#cmos","title":"CMOS \u7ed3\u6784\u8bbe\u8ba1","text":"<p>\u9996\u5148\u8ba9\u6211\u4eec\u6765\u770b\u56fe(a)\uff0c\u8fd9\u662f CMOS \u7684\u901a\u7528\u7ed3\u6784\uff08\u53ef\u4ee5\u88ab\u79f0\u4f5c static CMOS\uff09\u3002\u5176\u53ef\u4ee5\u5206\u4e3a\u4e0a\u4e0b\u4e24\u90e8\u5206\uff0c\u4e0a\u534a\u90e8\u5206\u63a5\u7535\u6e90\uff0c\u7531 PMOS \u8bbe\u8ba1\u51fa F \u7684\u903b\u8f91\uff1b\u4e0b\u534a\u90e8\u5206\u63a5\u5730\uff0c\u7531 NMOS \u8bbe\u8ba1\u51fa Fba \u7684\u903b\u8f91\u3002\u4e5f\u5c31\u662f\u8bf4 CMOS \u540c\u65f6\u9700\u8981\u5b9e\u73b0 F \u548c Fba\uff0c\u8fd9\u5c31\u662f\u5176\u540d\u79f0 complementary \u7684\u7531\u6765\u3002</p> <p>CMOS \u5728\u7ed3\u6784\u4e0a\u7684\u6700\u5927\u7279\u5f81\u662f\uff0c\u5176 PMOS \u7684\u7535\u8def\u548c NMOS \u7684\u7535\u8def\u662f\u5bf9\u5076\u7684\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u8ba1\u4e24\u8005\u4e2d\u7684\u4e00\u4e2a\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u5bf9\u5076\u5f97\u5230\u53e6\u5916\u4e00\u4e2a\u3002\uff08\u4f46\u662f\u5efa\u8bae\u4ece\u4e0b\u9762\u5f00\u59cb\u8bbe\u8ba1\uff09</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_29","title":"\u53ef\u7f16\u7a0b\u6280\u672f","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_30","title":"\u5728\u786c\u4ef6\u5c42\u9762\u7684\u4e09\u79cd\u5b9e\u73b0\u624b\u6bb5","text":"<ul> <li>Control Connections</li> <li>Mask programing</li> <li>Fuse\uff08\u9ad8\u7535\u538b\u5207\u65ad\u90e8\u5206\u7535\u8def\uff09</li> <li>Anti-fuse(\u9ad8\u7535\u538b\u8054\u901a\u90e8\u5206\u7535\u8def)</li> <li>Single-bit storage element</li> <li>Lookup Tables</li> <li>Storage elements for the function<ul> <li>\u6bd4\u5982\u4f7f\u7528\u4e00\u4e2a <code>MUX</code>\uff0c\u5e76\u5c06\u8f93\u5165\u7aef\u63a5\u5185\u5b58\uff0c\u901a\u8fc7\u4fee\u6539\u5185\u5b58\u7684\u503c\u6765\u4fee\u6539 <code>MUX</code> \u7684\u884c\u4e3a\uff0c\u8fdb\u800c\u5b9e\u73b0\u51fd\u6570\u91cd\u7f16\u7a0b</li> </ul> </li> <li>Control transistor switching \u63a7\u5236\u6676\u4f53\u7ba1\u5f00\u5173</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_31","title":"\u5206\u7c7b","text":"<ul> <li>permanent \u6c38\u4e45\u7f16\u7a0b\u6280\u672f\uff1a\u51fa\u5382\u540e\u7ecf\u8fc7\u4e00\u6b21\u53d8\u6210\uff0c\u4fbf\u6c38\u4e45\u6210\u578b</li> <li>Mask programming</li> <li>Fuse</li> <li>Anti-fuse</li> <li>reprogrammable \u53ef\u91cd\u7f16\u7a0b\u6280\u672f\uff1a\u5141\u8bb8\u91cd\u590d\u7f16\u7a0b</li> <li>Volatile:\u65ad\u7535\u540e\u7f16\u6210\u4fe1\u606f\u4f1a\u6d88\u5931<ul> <li>Single-bit storage element</li> </ul> </li> <li>Non-volatile:\u7f16\u7a0b\u4fe1\u606f\u4ec5\u5728\u64e6\u9664\u64cd\u4f5c\u540e\u624d\u4f1a\u6d88\u5931\uff0c\u4e0d\u53d7\u65ad\u7535\u5f71\u54cd<ul> <li>FLASH \uff08memory\uff09</li> </ul> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_32","title":"\u5e38\u89c1\u7684\u53ef\u7f16\u7a0b\u6280\u672f","text":""},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#1-rom","title":"1. ROM \u53ea\u8bfb\u5185\u5b58","text":"<ul> <li>\\(2^{N} * M\\) ROM \u7531 N \u4e2a\u8f93\u5165\uff0cM \u4e2a\u8f93\u51fa\uff0c\u4ee5\u53ca \\(2^{N}\\) \u4e2a\u8bd1\u7801\u540e\u7684\u6700\u5c0f\u9879\u7ec4\u6210\u3002</li> <li>\u56fa\u5b9a\u7684 AND \u7528\u4e8e\u8bbe\u8ba1\u8bd1\u7801\u5668\uff0c\u5b9e\u73b0\u6240\u6709\u7684 2\u7684n\u6b21\u65b9\u4e2a\u6700\u5c0f\u9879</li> <li>\u53ef\u7f16\u7a0b\u7684 OR \u7528\u4e8e\u628a\u8fd9\u4e9b\u6700\u5c0f\u9879\u201c\u6216\u201d\u8d77\u6765\u5e76\u5b9e\u73b0\u7279\u5b9a\u903b\u8f91</li> <li>PROM \u901a\u8fc7 fuse \u6216\u8005 anti-fuse \u7b49\u624b\u6bb5\u5b9e\u73b0\u53ef\u7f16\u7a0b\uff0c\u6240\u4ee5\u5728\u51fa\u5382\u540e\u4ec5\u53ef\u8fdb\u884c\u4e00\u6b21\u7f16\u7a0b\u4fee\u6539\uff0c\u5c5e\u4e8e\u6c38\u4e45\u7f16\u7a0b\u6280\u672f</li> <li>ROM \u7684\u8f93\u5165\u63d0\u4f9b\u4e86\u4e00\u4e32\u5730\u5740\uff0c\u8f93\u51fa\u5219\u662f\u8fd9\u7ec4\u5730\u5740\u5bf9\u5e94\u5185\u5b58\u4e2d\u5b58\u50a8\u7684\u4fe1\u606f\u3002</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#2-pal-array-logic","title":"2. PAL \u53ef\u7f16\u7a0b\u9635\u5217\u903b\u8f91 Array Logic","text":"<ul> <li>\u4e0d\u9700\u8981\u5217\u51fa\u6240\u6709\u6700\u5c0f\u9879\uff0c\u662f\u53ef\u4f18\u5316\u7684\uff0c\u4f46\u4e5f\u56e0\u6b64\u4e0d\u4e00\u5b9a\u80fd\u8868\u8fbe\u6240\u6709\u903b\u8f91</li> <li>\u5177\u6709\u56fa\u5b9a\u7684 OR \u548c\u4e00\u6279\u53ef\u7f16\u7a0b\u7684 AND</li> <li>\u4e00\u79cd\u53ef\u884c\u7684\u5904\u7406\u65b9\u6848\u662f\u628a\u4e00\u4e2a\u65e2\u6709\u7684 PAL \u8f93\u51fa\u5f53\u505a\u8f93\u5165\uff0c\u8f93\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u6765\u5f25\u8865\u9879\u4e0d\u8db3\u7684\u95ee\u9898</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#3-pla-logic-array","title":"3. PLA \u53ef\u7f16\u7a0b\u903b\u8f91\u9635\u5217 Logic Array","text":"<ul> <li>PLA \u4e0e ROM \u7c7b\u4f3c\uff0c\u4f7f\u7528\u8bd1\u7801\u5668 + OR</li> <li>PLA \u4e0d\u4f7f\u7528\u8bd1\u7801\u5668\u83b7\u5f97\u6240\u6709\u7684\u6700\u5c0f\u9879\uff0c\u800c\u662f\u4f7f\u7528\u53ef\u7f16\u7a0b\u7684 AND \u9635\u5217\u6765\u66ff\u4ee3\u8bd1\u7801\u5668</li> <li>PLA \u5177\u6709\u53ef\u7f16\u7a0b\u7684 AND \u548c OR\uff0c\u56e0\u6b64\u6bd4\u8d77 PAL \u548c ROM \u66f4\u5177\u7075\u6d3b\u6027\u3002\u5355\u97f3\u8bcd\u4ed6\u7684\u4f18\u5316\u4f1a\u53d8\u5f97\u66f4\u52a0\u9ebb\u70e6</li> <li>\u540c\u65f6 PLA \u548c PAL \u4e00\u6837\u4e0d\u80fd\u5b8c\u5168\u8868\u8fbe\u6240\u6709\u7684\u903b\u8f91\uff0c\u4e00\u79cd\u6539\u8fdb\u65b9\u6cd5\u662f\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u518d\u505a\u4e00\u6b21\u5f02\u6216\uff0c\u5c31\u80fd\u591f\u4ea7\u751f\u65b0\u7684\u9879\u6765\u5f25\u8865\u903b\u8f91\u4e0d\u80fd\u5b8c\u5168\u8868\u8fbe\u7684\u95ee\u9898\u3002\uff08\u4e0d\u7528\u975e\u95e8\u4f53\u73b0\u4e86\u53ef\u7f16\u7a0b\u7684\u601d\u60f3\uff09</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#chap-6-register-register-transfers","title":"Chap 6 Register &amp; Register Transfers","text":"<ul> <li>\u89e6\u53d1\u5668 + \u5bf9\u5e94\u7684\u72b6\u6001\u63a7\u5236\u7535\u8def = \u5b9e\u73b0\u591a\u4f4d\u6570\u636e\u5b58\u50a8</li> <li>counter\uff1a\u968f\u65f6\u949f\u5468\u671f\u6309\u7167\u56fa\u5b9a\u7684\u8f68\u8ff9\u5faa\u73af\u3002</li> <li>\u65b0\u6570\u636e\u88ab\u5199\u5165\u5bc4\u5b58\u5668\u53eb\u505a Load\uff0c\u8f7d\u5165\u64cd\u4f5c\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u8109\u51b2\u5185\u5b8c\u6210\u53eb\u505a Parallel \u5e76\u884c</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_33","title":"\u4fdd\u6301","text":"<p>\u6211\u4eec\u5e0c\u671b\u5bc4\u5b58\u5668\u5728\u4e0d\u9700\u8981\u7684\u65f6\u5019\u4fdd\u6301\u800c\u4e0d\u662f\u8bfb\u5165\uff1a</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#plan-a-clock-gating","title":"Plan A: Clock gating \u95e8\u63a7\u65f6\u949f","text":"<p>\u8ba9\u5b83\u9009\u62e9\u6027\u5730\u8ddf\u968f\u65f6\u949f\u8109\u51b2\u5207\u6362\u72b6\u6001\u3002</p> <p>\uff08\u4e0b\u56fe\u4e2d\u662f\u6216\u95e8\uff09 </p> <p>\u5f53 Load = 0\u65f6\uff0c\u59cb\u7ec8\u6709 control \u4fe1\u53f7\u4e3a 1\uff0c\u8109\u51b2\u6d88\u5931\uff0c\u5bc4\u5b58\u5668\u65e0\u6cd5\u88ab\u8f7d\u5165</p> <p>NOTE: \u4f46\u7531\u4e8e\u591a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u903b\u8f91\u95e8\uff0c\u65f6\u949f\u8109\u51b2\u5230\u8fbe control \u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u989d\u5916\u7684\u4f20\u64ad\u5ef6\u65f6\uff0c\u5373\u65f6\u949f\u504f\u79fb clock skew\u3002\u5b9e\u9645\u8bbe\u8ba1\u4e2d\u6211\u4eec\u8981\u5c3d\u91cf\u907f\u514d\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#plan-b","title":"Plan B\uff1a\u5728\u5b83\u4e0d\u9700\u8981\u4fee\u6539\u7684\u65f6\u5019\u4e0d\u505c\u5730\u5c06\u5b83\u7684\u8f93\u5165\u8f7d\u5165\u3002\uff08\u4fdd\u6301\uff09","text":"<p>\u901a\u8fc7\u4e00\u4e2a <code>MUX</code> \u6765\u9009\u62e9\uff0c\u7528 <code>EN</code> \u4f7f\u80fd\u7aef\u6765\u63a7\u5236\u8f7d\u5165\u65b0\u503c\u8fd8\u662f\u4fdd\u6301\u65e7\u503c\u3002</p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#_34","title":"\u5bc4\u5b58\u5668\u5355\u5143","text":"<p>Register Cell\uff1aFF + \u5b9e\u73b0\u5176\u7ec4\u5408\u903b\u8f91\u7684\u7ec4\u5408\u7535\u8def</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#register-transfer","title":"Register transfer \u5bc4\u5b58\u5668\u4f20\u8f93","text":"<p>\u7528\u4e00\u4e2a\u63a7\u5236\u5355\u5143\u6765\u63a7\u5236\u6570\u636e\u901a\u8def\u3002control unit\uff0cdatapath\u3002</p> <p>register transfer operations\uff1aload\uff0cclear\uff0cshift\uff0ccount</p> <p>3\u4e2a\u57fa\u672c\u90e8\u5206\uff1aset of registers\uff0coperations\uff0ccontrolof operations</p> <p>\u6700\u57fa\u7840\u7684\uff08elementary\uff09\u90e8\u5206\u53eb\u505a\u5fae\u64cd\u4f5c\uff0cmicrooperation</p>"},{"location":"%E6%95%B0%E9%80%BB/sum/sum/#notation","title":"\u5bc4\u5b58\u5668\u4f20\u8f93\u8bed\u8a00 notation","text":"<ul> <li>\u5b50\u6bcd\u548c\u6570\u5b57\u8868\u793a\u4e00\u4e2a\u5bc4\u5b58\u5668</li> <li>\u62ec\u53f7\u8868\u793a\u5bc4\u5b58\u5668\u4f4d\u6570</li> <li>\u7bad\u5934\u8868\u793a\u6570\u636e\u4f20\u8f93</li> <li>\u9017\u53f7\u4ee3\u8868\u5e76\u884c\u64cd\u4f5c</li> <li>\u4e2d\u62ec\u53f7\uff08brackets\uff09\u4ee3\u8868\u4e00\u4e2a\u5185\u5b58\u5730\u5740 </li> </ul>"},{"location":"%E8%AE%A1%E5%8E%9F/A4/A4/","title":"A4","text":""},{"location":"%E8%AE%A1%E5%8E%9F/A4/A4/#a4","title":"A4","text":""},{"location":"%E8%AE%A1%E5%8E%9F/A4/A4/#mips","title":"MIPS","text":"<ul> <li>\u5bc4\u5b58\u5668 </li> <li>MIPS\u4e2d\u7684\u5730\u5740\u504f\u79fb\u91cf\u548c\u6570\u7ec4\u4e0b\u6807\u4e4b\u95f4\u7684\u5173\u7cfb\u662f4\u500d\uff0c\u6bd4\u5982\u6570\u7ec4A\u7684\u57fa\u5730\u5740\u5728 $s3 \u4e2d\uff0c\u8981 \u83b7\u53d6A[8]\uff0c\u5219\u9700\u8981\u6307\u4ee4 lw \\(t0,32(\\)s3)</li> <li>\u673a\u5668\u7801\u683c\u5f0f\uff1a</li> <li>OP\u662f\u5bf9\u5e94\u7684\u64cd\u4f5c\u7801\uff0cRS,RT\u5206\u522b\u662f\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u5bc4\u5b58\u5668\uff0cRD\u662f\u76ee\u6807\u5bc4\u5b58\u5668\uff0cshamt\u662f\u504f\u79fb\u91cf\uff0cfunc\u662f\u51fd\u6570\u5bf9\u5e94\u7684\u7f16\u7801</li> <li>\u6240\u6709\u7684MIPS\u6307\u4ee4\u90fd\u662f32\u4f4d\u7684\uff0c\u5176\u4e2dOP6\u4f4d\uff0c\u5bc4\u5b58\u5668\u90fd\u662f5\u4f4d\uff0cshamt\u662f5\u4f4d\uff0cfunct\u662f6\u4f4d\uff0caddress\u662f16\u4f4d</li> <li>good design demands good compromises</li> <li>R: <code>OP+RS+RT+RD+shamt+funct</code> </li> <li>I: <code>OP+RS+RT+address</code></li> <li>J: <code>OP+address</code></li> <li>\u8ba1\u7b97\u673a\u8bbe\u8ba1\u7684\u4e24\u6761\u539f\u5219\uff1a</li> <li>\u6307\u4ee4\u53ef\u4ee5\u7528\u6570\u5b57\u8868\u793a</li> <li>\u7a0b\u5e8f\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u50cf\u6570\u5b57\u4e00\u6837\u8bfb\u5199</li> <li>\u8df3\u8f6c\u6307\u4ee4 jr, \u7528\u6cd5\u662f <code>jr $r</code> r\u7684\u8ba1\u7b97\u65b9\u5f0f\u662f\u5f53\u524d\u6240\u5728\u5730\u5740+4*\u8981\u8df3\u8f6c\u7684\u884c\u6570</li> <li>\u4e00\u4e2a\u51fd\u6570\u7ed3\u675f\u65f6\u8981\u5199 <code>jr $ra</code> \u6765\u8fd4\u56de\u4e3b\u51fd\u6570\uff0cra\u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8eR7</li> <li>jal (jump and link) \u7528\u4e8e\u8df3\u8f6c\u5230\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u540e\u9762\u7684\u53c2\u6570\u4e3a\u8981\u8df3\u8f6c\u7684\u5730\u5740\uff0c\u4f7f\u7528 jar $ra \u8fd4\u56de\u4e3b\u51fd\u6570</li> <li>$sp \u4e00\u4e2a\u6808\u6307\u9488\uff0cMIPS\u6c47\u7f16\u4e2d\u7684\u6808\u4ece\u9ad8\u5730\u5740\u5f80\u4f4e\u5730\u5740\u6269\u5c55\uff0c\u652f\u6301Push\u548cPop\u4e24\u79cd\u64cd\u4f5c</li> <li>\u5b66\u4e60\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u8c03\u7528\uff1a <pre><code>int leaf_example ( int g, int h, int i, int j )\n{\nint f;\nf=(g+h)-(i+j);\nreturn f;\n}\n</code></pre></li> </ul> <p><pre><code>Leaf: addi $sp,$sp,-12 #adjust stack to make room for 3 items\nsw $t1,8($sp)\nsw $t0,4($sp)\nsw $s0,0($sp)\nadd $t0,$a0,$a1 #g+h\nadd $t1,$a2,$a3 #i+j\nsub $s0,$t0,$t1 #f=(g+h)-(i+j)\nadd $v0,$s0,$zero #return value in v0\nlw * 3 #restore register for caller\nadd $sp,$sp,12\njr $ra\n</code></pre> - Caller-saved register \u6613\u5931\u6027\u5bc4\u5b58\u5668\uff1a\u7528\u4e8e\u4fdd\u5b58\u6bcf\u4e2a\u8c03\u7528\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u5728\u5404\u4e2a\u8c03\u7528\u4e4b\u95f4\u4fdd\u7559\u7684\u4e34\u65f6\u53d8\u91cf - Callee-saved register \u975e\u6613\u5931\u6027\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4fdd\u5b58\u9700\u8981\u5728\u6bcf\u4e2a\u8c03\u7528\u8fc7\u7a0b\u4e2d\u4fdd\u7559\u7684\u4e34\u65f6\u53d8\u91cf     - MIPS\u5728\u51fd\u6570\u8c03\u7528\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u4fdd\u7559 \\(s0-\\)s7 \u548c\u5168\u5c40\u53d8\u91cf $gp \u548c\u6808\u6307\u9488 $sp \u8fd8\u6709 $fp - \u533a\u5206jr jal\uff0cjal \u7528\u4e8e\u8df3\u8f6c\u5230\u6307\u4ee4/\u547c\u53eb\u51fd\u6570\uff0cjr \u7528\u4e8e\u4ece\u4e00\u4e2a\u51fd\u6570\u4e2d\u8df3\u51fa\u56de\u5230\u539f\u51fd\u6570jr $ra - \u5bfb\u5740\u6a21\u5f0f\uff1a   - \u7acb\u5373\u6570   - \u8df3\u8f6c\u5bfb\u5740\uff08J \u6307\u4ee4\u540e\u9762\u8ddf\u8981\u8df3\u8f6c\u5230\u7684\u5730\u5740\uff09   - \u76f8\u5bf9\u5bfb\u5740\uff08\u5206\u652f\u8bed\u53e5\uff0cpc+(1+offset)*4) - \u5f62\u53c2\u8d85\u8fc7\u56db\u4e2a\u53ef\u4ee5\u7528\u6808\u6765\u5b58\u50a8\u53c2\u6570\uff0c\u5728\u51fd\u6570\u4e2d\u5f39\u51fa\u6808\uff0c\u8fd4\u56de\u503c\u8d85\u8fc72\u4e2a\u4e5f\u8981\u7528\u5806\u6808\uff0c\u5f53\u7136\u53ef\u4ee5\u6253\u7834\u89c4\u5219\u7528\u95f2\u7f6e\u7684\u5bc4\u5b58\u5668\u4f20\u9012\u53c2\u6570 - \u4f20\u9012\u53c2\u6570\u548c\u83b7\u53d6\u8fd4\u56de\u503c\u7684\u5bc4\u5b58\u5668a0-a3\u548cv0-v1\u4e00\u822c\u4e0d\u76f4\u63a5\u53c2\u4e0e\u8fd0\u7b97 - \u7f16\u8bd1\u8fc7\u7a0b\uff1acompiling\uff0cassembling\uff0clinking - \u4f2a\u6307\u4ee4\uff1a\u6ca1\u6709\u57fa\u4e8e\u786c\u4ef6\u5b9e\u73b0\uff0c\u800c\u662f\u7528\u73b0\u6709\u7684\u6307\u4ee4\u7ec4\u5408\u800c\u6210\u7684\u4e00\u4e9b\u529f\u80fd   - move $rd, $rs \uff1a\u503c\u7684\u62f7\u8d1d\uff0c \u5b9e\u73b0\u7684\u529f\u80fd\u662frd=rs   - blt $rs, $rt, RR \u6bd4\u8f83\u5730\u5740\u7684\u5927\u5c0f\uff0c\u5982\u679crt\u7684\u5730\u5740\u6bd4\u8f83\u5927\u5219\u8fdb\u884c\u8df3\u8f6c - \u7cfb\u7edf\u8c03\u7528\uff08\u5185\u90e8\u4e2d\u65ad\uff0c\u8c03\u7528\u7cfb\u7edf\u7a0b\u5e8f\uff09   - syscall\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528    <pre><code>li $v0, 1 # service 1 is print integer\nadd $a0, $t0, $zero # load desired value into argument register $a0, using pseudo-op\nsyscall\n</code></pre></p>"},{"location":"%E8%AE%A1%E5%8E%9F/A4/A4/#_1","title":"\u8ba1\u7b97\u673a\u8fd0\u7b97","text":"<ul> <li>\u4e8c\u8fdb\u5236\u6570\u6709\u7b26\u53f7\u6570\u4e4b\u95f4\u7684\u6bd4\u8f83\uff1aslt,slti\uff1b\u65e0\u7b26\u53f7\u6570\u4e4b\u95f4\u7684\u6bd4\u8f83\uff1asltu,sltiu\uff08i\u4ee3\u8868\u4e0e\u7acb\u5373\u6570\uff09</li> <li>\u6709\u7b26\u53f7\u6570</li> <li>\u539f\u7801\uff1a\u7b26\u53f7\u4f4d0\u62161+\u7edd\u5bf9\u503c</li> <li>1's comlement\u53cd\u7801\uff1a\u6b63\u6570\u4e3a\u672c\u8eab\uff0c\u8d1f\u6570\u4e3a\u7b26\u53f7\u4f4d\u4e0d\u53d8\u5176\u4ed6\u4f4d\u6309\u4f4d\u53d6\u53cd</li> <li>2's complement\u8865\u7801\uff1a\u6b63\u6570\u4e0d\u53d8\uff0c\u8d1f\u6570\u4e3a\u7b26\u53f7\u4f4d\u4e0d\u53d8\u6309\u4f4d\u53d6\u53cd+1</li> <li>overflow\uff1a\u5bf9\u4e8eN\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u4e0d\u7b26\u5408\u5728\u8303\u56f4[\\(-2^{N-1}\\), \\(-2^{N-1} - 1\\)]\u5185\u7684\uff0c\u53eb\u505a\u6ea2\u51fa</li> <li>biased-code\u79fb\u7801\uff1a\u8865\u7801\u7684\u6700\u9ad8\u4f4d\u53d6\u53cd</li> <li></li> <li>\u6807\u51c6\u7684ASCII\u7801\u53ea\u67097\u4f4d\uff08\u8ba1\u7b97\u673a\u5904\u7406\u65b9\u4fbf\uff09\uff0cASCII\u7801\u4e2d\u6709128\u4e2a\u5b57\u7b26\uff0c\u5176\u4e2d\u53ef\u6253\u5370\u5b57\u7b2696\u4e2a\uff0c\u63a7\u5236\u5b57\u7b2632\u4e2a\uff1b\u540e\u6765\u56e0\u4e3a128\u4e2a\u5b57\u7b26\u4e0d\u591f\u53c8\u6269\u5c55\u4e86\u65b0\u7684128\u4e2a</li> <li>\u6c49\u5b57gb2312\uff0c\u8f93\u5165\u7801\u4e94\u7b14/\u62fc\u97f3\uff0c\u75288x8\u7684\u70b9\u9635\u8868\u793aASCII\u7801\uff0c\u752816x16\u7684\u70b9\u9635\u8868\u793a\u6c49\u5b57\uff0c\u53ef\u4ee5\u752816\u4e2a16\u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u6765\u8868\u793a\u4e00\u4e2a\u6c49\u5b57</li> <li>\uff08\u52a0\u51cf\u6cd5\uff09MIPS\u4e2d\u5904\u7406\u6ea2\u51fa\u7684\u65b9\u5f0f\u662finterrupt\uff0c\u6ea2\u51fa\u6307\u4ee4\u7684\u5730\u5740\u88ab\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u8ba1\u7b97\u673a\u8df3\u5230\u9884\u5b9a\u5730\u5740\u4ee5\u4e3a\u8be5\u5f02\u5e38\u8c03\u7528\u9002\u5f53\u7684\u4f8b\u7a0b\u3002\u4e2d\u65ad\u7684\u5730\u5740\u5c06\u88ab\u4fdd\u5b58\uff0c\u4ee5\u4fbf\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7a0b\u5e8f\u53ef\u4ee5\u5728\u6267\u884c\u7ea0\u6b63\u4ee3\u7801\u540e\u7ee7\u7eed\u6267\u884c</li> <li>\u7b80\u79f0</li> <li>OF: overflow \u5224\u65ad\u662f\u5426\u6ea2\u51fa\uff0c\u6700\u9ad8\u8fdb\u4f4d\u548c\u6b21\u9ad8\u8fdb\u4f4d\u7684\u5f02\u6216</li> <li>CF: CarryOut \u8fdb\u4f4d\u7684\u503c</li> <li>ZF\uff1azero\uff0c\u5f53\u7ed3\u679c\u4e3a0\u7684\u65f6\u5019ZF=1\uff0c\u5426\u5219\u662f0</li> <li>SF\uff1a\u7b26\u53f7\u4f4d\u7684\u5224\u65ad\uff0c\u6b630\u8d1f1</li> <li>PF\uff1a\u5947\u5076\u6821\u9a8c</li> <li>\u534a\u52a0\u5668half adder\u4e0d\u80fd\u8ddfcarryout\u8fd0\u7b97\uff0csum = a xor b\uff0ccarry = a or b</li> <li>\u5168\u52a0\u5668full adder   </li> <li>ALU </li> <li>\u8ba1\u7b97\u673a\u7ec4\u6210\u7ed3\u6784</li> <li>CPU<ul> <li>control unit</li> <li>datapath</li> <li>path</li> <li>ALU</li> <li>registers</li> </ul> </li> <li>memory</li> <li>mips\u8def\u5f84 </li> <li>\u4e0e\u95e8\u534a\u692d\u5706\uff0c\u6216\u95e8\u6708\u7259\uff0c\u975e\u95e8\u4e09\u89d2\u5f62\u52a0\u5706\u70b9</li> <li>\u7ec4\u5408\u903b\u8f91</li> <li>decoder\uff1an\u4e2a\u8f93\u5165\uff0c2^n\u4e2a\u8f93\u51fa</li> <li>MUX\uff1an\u4f4d\u4fe1\u53f7\u63a7\u52362^n\u4e2a\u8f93\u5165</li> <li>shift\uff1a\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u56fa\u5b9a\u7684\u79fb\u4f4d\u901a\u8fc7\u8f93\u5165\u8f93\u51fa\u9519\u4f4d\u6765\u5b9e\u73b0 </li> </ul> <p>   - SEXT\uff1a\u901a\u8fc7\u91cd\u590d\u7b26\u53f7\u4f4d\u7684\u65b9\u5f0f\u5b9e\u73b0 - \u5bc4\u5b58\u5668\u5355\u5143   - \u8f93\u5165\uff1aclk\uff0crst\uff0cregwrite\uff08\u662f\u5426\u5199\u5165\uff09\uff0cidat32\u4f4d\u8f93\u5165\u6570\u636e   - \u8f93\u51fa\uff1aodat32\u4f4d\u8f93\u51fa - ALU\u7b97\u672f\u903b\u8f91\u5355\u5143\uff1a3\u4f4d\u63a7\u5236\u4fe1\u53f7   - \u8f93\u5165\uff1a2\u4e2a32\u4f4d\u6570\u636e\uff0cALUop 3\u4f4d\u64cd\u4f5c\u7801ALUoper   - \u8f93\u51fa\uff1aresult32\u4f4d\uff0czero\uff08\u662f\u5426\u4e3a0\uff09\uff0ccarryout\uff0coverflow - ALU control\u63a7\u5236\u5668\uff1a\u4f7f\u7528alu control \u63a7\u5236alu   - \u8f93\u5165\uff1aALUop \u4e24\u4f4d\u7684\u63a7\u5236\u4fe1\u53f7\uff0cFunc\u6307\u4ee4\u7684\u529f\u80fd\u5b57\u6bb5   - \u8f93\u51fa\uff1aALUoper\uff083\u4f4d\u64cd\u4f5c\u7801\uff09  - \u5b58\u50a8\u5668\uff1a\u591a\u4e2a\u5bc4\u5b58\u5668\u96c6\u5408\uff0c\u53c8decoder\u9009\u5b9a\u4f4d\u7f6e   - ROM \u53ea\u8bfb RAM \u8bfb\u5199\u5b58\u50a8\u5668\u3002\u6240\u6709\u6307\u4ee4\u5b58\u50a8\u5668rom\uff0cram\u6839\u636e\u63a7\u5236\u4fe1\u53f7\u4e00\u6b21\u8bfb/\u5199\u4e00\u4e2a32\u4f4d\u6570\u636e   - \u8bfb\u548c\u5199\u516c\u7528\u4e00\u4e2a\u5730\u5740\u8f93\u5165\u7aef -    - MIPS\u91c7\u752832\u4f4d\u5730\u5740\u7ebf\uff0c\u5bfb\u5740\u7a7a\u95f42^32=4GB\uff0c\u6570\u636e\u7ebf\u4e5f\u662f32\u4f4d - \u5bc4\u5b58\u5668\u7ec4\uff1aCPU\u7684\u4e3b\u8981\u5668\u4ef6   - \u5f88\u591a\u6307\u4ee4\u90fd\u67092-3\u4e2a\u64cd\u4f5c\u6570\uff0c\u56e0\u6b64\u9700\u8981\u7528\u5bc4\u5b58\u5668\u7ec4\u6765\u5b9e\u73b0\u591a\u8def\u540c\u65f6\u8bfb\u5199   -  - \u5b58\u50a8\u82af\u7247\uff1a\u5730\u5740\u7ebf\uff08\u51b3\u5b9a\u53ef\u5bfb\u5740\u8303\u56f4\uff09\uff0c\u6570\u636e\u7ebf\uff08\u51b3\u5b9a\u6570\u636e\u7684\u4f4d\u6570\uff09\uff0c\u63a7\u5236\u7ebf\uff08\u7535\u6e90\u3001\u8bfb\u5199\u63a7\u5236\u3001\u7247\u9009\uff09 - \u5b57\u6269\u5c55\uff1a\u4ece\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u4e00\u4f4d\u5b58\u50a8\u5355\u5143\u901a\u8fc7\u53cc\u8bd1\u7801\u5668\u5f97\u5230\u4e00\u4e2a\u4e00\u4f4d\u7684\u5b58\u50a8\u4f4d\u9635\u5217\u9762\uff0c\u5c06\u540c\u6837\u5730\u5740\u7ebf\u7684\u82e5\u5e72\u76f8\u540c\u7684\u4f4d\u5e73\u9762\uff0c\u63a5\u4e0d\u540c\u7684\u6570\u636e\u7ebf\uff0c\u5c01\u88c5\u5f97\u5230\u4e00\u4e2a\u5b58\u50a8\u82af\u7247   - \u5730\u5740\u9ad8\u4f4d\u4ea4\u53c9\uff0c\u540c\u4e00\u82af\u7247\u5730\u5740\u8fde\u7eed\uff0c\u8bfb\u53d6\u8fde\u7eed\u7684\u5730\u5740\u5355\u5143\u9700\u8981\u591a\u6b21\u8bfb\u5199   - \u5730\u5740\u4f4e\u4f4d\u4ea4\u53c9\uff0c\u540c\u4e00\u82af\u7247\u7684\u5730\u5740\u4e0d\u8fde\u7eed\uff0c\u4f46\u8bfb\u53d6\u8fde\u7eed\u5730\u5740\u5355\u5143\u53ea\u9700\u8981\u4e00\u6b21 - Assume an 8Kx8bits memory is composed of 2Kx4bit chips. The first address of the chip which contains the address 0B1Fh is (____). A\uff1a0700h B\uff1a0800h C\uff1a0600h D\uff1a0000h b - \u4e0a\u9762\u8fd9\u9898\u4e2d2K4bit\u7684\u82af\u7247\u9700\u89812\u7247\u4e00\u8d77\u624d\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u5b57\uff0c\u6240\u4ee5\u4f4d\u6269\u5c55\u662f2\uff0c\u53c8\u9700\u89814\u4e2a\u8fd9\u6837\u7684\u7ec4\u62108K8bits\u7684\uff0c\u6240\u4ee5\u5b57\u6269\u5c55\u662f4 - \u5bf9\u5b57(4\u5b57\u8282)\u6216\u8005\u534a\u5b57(2\u5b57\u8282\uff0cshort)\u5bfb\u5740\u7684\u65f6\u5019\uff0c\u6700\u4f4e\u4f4d\u5b57\u8282\u5730\u5740\u4e3a\u6574\u4e2a\u5b57\u6216\u8005\u534a\u5b57\u7684\u5730\u5740 - \u9ad8\u4f4d\u5728\u524d\u4e3a\u5927\u7aef\uff0c\u4f4e\u4f4d\u5728\u524d\u4e3a\u5c0f\u7aef,\u4f8b\u5982\uff0c\u4e00\u4e2a\u5b570x12345678\u7684\u5730\u5740\u4e3a10\uff0c\u5373\u8981\u5c06\u8fd9\u4e2a\u5b57\u5199\u5230\u5730\u574010\uff0c11\uff0c12\uff0c13\u4e2d     - \u5927\u7aef 0x12,0x34,0x56,0x78     - \u5c0f\u7aef 0x78,0x56,0x34,0x12 - \u5bf9\u9f50\uff1a\u5f53\u7cfb\u7edf\u8981\u8bbf\u95ee\u5b58\u50a8\u5668\u7684\u4e00\u4e2a\u5b57\uff0c\u521a\u597d\u5728\u786c\u4ef6\u5b58\u50a8\u4e2d\u662f\u4e00\u4e2a\u5b57\uff0c\u5c31\u662f\u5bf9\u9f50\u8bbf\u95ee\u3002\uff08\u4e0d\u5bf9\u9f50\u7684\u8bdd\u5c31\u9700\u8981\u591a\u6b21\u8bfb\u5199\uff09 - \u4f55\u4e3acache\uff08\u9ad8\u901f\u7f13\u5b58\uff09 - \u7a0b\u5e8f\u8fd0\u884c\u7684\u4e24\u4e2a\u5c40\u90e8\u6027\u539f\u7406     - \u65f6\u95f4\u5c40\u90e8\u6027\uff1a\u5982\u679c\u6bcf\u4e2a\u6570\u636e\u6216\u8005\u6307\u4ee4\u88ab\u5f15\u7528\u4e86\uff0c\u90a3\u4e48\u4e0d\u4e45\u4e4b\u540e\u53ef\u80fd\u5c06\u88ab\u518d\u6b21\u5f15\u7528     - \u7a7a\u95f4\u5c40\u90e8\u6027\uff1a\u5982\u679c\u4e00\u4e2a\u6570\u636e\u88ab\u5f15\u7528\u4e86\uff0c\u90a3\u4e48\u90bb\u8fd1\u7684\u5355\u5143\u4e5f\u53ef\u80fd\u88ab\u5f15\u7528 - cache\u7684\u5931\u914d(miss)\uff1a\u6307CPU\u8981\u8bbf\u95ee\u7684\u6570\u636e\u4e0d\u5728cache\u4e2d\uff0c\u6b64\u65f6\u9700\u8981\u5c06\u8fd9\u4e2a\u6570\u636e\u6240\u5728\u7684\u6574\u4e2ablock\u653e\u5165cache\u4e2d \u4e3b\u8981\u7684\u5931\u914d\u79cd\u7c7b     - compulsory misses \u5f3a\u5236\u5931\u914d\uff0c\u7b2c\u4e00\u6b21\u542f\u52a8\u65f6\u603b\u662f\u5931\u914d         - \u53ef\u4ee5\u901a\u8fc7\u52a0\u5927\u5757\u7684\u5927\u5c0f\u964d\u4f4e\u5931\u914d\u7387     - capacity misses \u5bb9\u91cf\u5931\u914d\uff0ccache\u7684\u5bb9\u91cf\u6bd4\u4e3b\u5b58\u5c0f\u5f15\u8d77\u5931\u914d         - \u53ef\u4ee5\u901a\u8fc7\u591a\u7ea7cache\u964d\u4f4e\u5931\u914d\u7387     - conflict misses \u76f8\u8054\u5931\u914d\uff0c\u7531\u4e8e\u6620\u5c04\u5173\u7cfb\u5f71\u54cd\u547d\u4e2d\u7387         - \u53ef\u4ee5\u628a\u7ec4\u76f8\u8054\u6539\u6210\u5168\u6620\u5c04 - \u5757\u8d8a\u5927\u5219\u547d\u4e2d\u7387\u8d8a\u9ad8\uff0c\u4f46\u662f\u5f53cache\u5bb9\u91cf\u8f83\u5c0f\u7684\u65f6\u5019\uff0c\u5757\u589e\u5927\u53ef\u80fd\u4f7f\u5f97\u5757\u6570\u592a\u5c11\u800c\u51cf\u5c0f\u547d\u4e2d\u7387     - \u5728cache\u603b\u5bb9\u91cf\u4e0d\u53d8\u7684\u65f6\u5019\uff0c\u5757\u8d8a\u5927\u5219\u547d\u4e2d\u7387\u66f4\u9ad8\uff0c\u5757\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u786c\u4ef6 - \u4fdd\u6301cache-\u4e3b\u5b58\u6570\u636e\u4e00\u81f4\u6027\u7684\u65b9\u5f0f   - \u5199\u56de Write-back \u5199\u6570\u636e\u7684\u65f6\u5019\u53ea\u5199\u5728cache\u4e2d\uff0c\u5728\u5757\u66ff\u6362\u7684\u65f6\u5019\u518d\u5c06\u6570\u636e\u5199\u9053\u4e3b\u5b58\u4e2d\uff08\u7f3a\u70b9\u662f\u63a7\u5236\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u8bbe\u7f6edirty\u4f4d\u6539\u8fdb\uff09 - </p>"}]}