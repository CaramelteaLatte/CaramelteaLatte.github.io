{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"20th/","title":"User Guide","text":""},{"location":"20th/#installation","title":"Installation","text":"<pre><code>pip install mkdocs\n</code></pre>"},{"location":"20th/#check-version","title":"Check Version","text":"<pre><code>mkdocs -version\n</code></pre> <p>which is also usually used to check if downloaded correctly.</p>"},{"location":"20th/#inialize-project","title":"Inialize Project","text":"<pre><code>python3 -m mkdocs new \n</code></pre> <p>but you should note that before this you should enter the particular document you want to deploy first.</p> <p>print<code>ls</code>to check the document now, then you will find a newly created document end with .yml.</p>"},{"location":"20th/#as-for","title":"As For","text":""},{"location":"20th/#hbhs-half-of-19th","title":"HBH's half of 19th","text":""},{"location":"ds1/","title":"\u5b89\u88c5\u65b9\u6cd5","text":""},{"location":"ds1/#ds1","title":"DS1","text":""},{"location":"ds1/#algorithm-analysis","title":"Algorithm Analysis","text":"<p>input, output, definiteness\u786e\u5b9a\u6027\uff08\u6bcf\u6761\u6307\u4ee4\u90fd\u662f\u6e05\u6670\u7684\u6ca1\u6709\u6b67\u4e49\u7684\uff09, finiteness\u6709\u9650\u6027\uff08\u7ecf\u8fc7\u4e00\u5b9a\u7684\u4ee3\u7801\u8fd9\u4e2a\u7b97\u6cd5\u4e00\u5b9a\u4f1a\u505c\u4e0b\u6765terminate\uff09, effectiveness\uff08\u57fa\u672c\u7684-&gt;\u53ef\u884c\u7684,\u8db3\u591f\u57fa\u672c\uff09 - \u4e0e\u7a0b\u5e8f\u4e0d\u540cprogram\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u4e00\u76f4\u8dd1\u4e0b\u53bb\uff08\u6bd4\u5982\u505a\u4efb\u52a1\u89c4\u5212\uff09 - \u7b97\u6cd5\u53ef\u4ee5\u6709\u591a\u79cd\u63cf\u8ff0\u65b9\u5f0f\uff0c\u5b9e\u9645\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u81ea\u7136\u8bed\u8a00\uff0c\u4f2a\u4ee3\u7801\u3002\u4e0d\u4e00\u5b9a\u8981\u5177\u4f53\u5b9e\u73b0\u624d\u80fd\u5206\u6790</p>"},{"location":"ds1/#selection-sort","title":"Selection Sort\u9009\u62e9\u6392\u5e8f","text":"<p>\u81ea\u7136\u8bed\u8a00\uff1afind the smallest from the unsorted and place it next in the sorted lists</p>"},{"location":"ds1/#what-to-analysis","title":"what to analysis","text":"<ul> <li>Machine and complier-dependent run times</li> <li>run times\u7531\u673a\u5668\u548c\u7f16\u8bd1\u5668\u51b3\u5b9a-&gt;\u592a\u62bd\u8c61</li> <li>Time and space complexities\u65f6\u95f4\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u548cmachine and compliers\u65e0\u5173</li> <li>\u6211\u4eec\u5047\u8bbe\uff1a\u6307\u4ee4\u90fd\u662f\u5355\u7ebf\u7a0b\u8fd0\u884c\u7684\uff1b\u6bcf\u6761\u6307\u4ee4\u90fd\u662f\u7b80\u5355\u7684\uff0c\u90fd\u53ea\u5360\u636e\u4e00\u4e2a  \u65f6\u95f4\u5355\u4f4d\uff1b\u6574\u6570\u7684\u89c4\u6a21\u662f\u6709\u9650\u7684\u4e14\u6211\u4eec\u6709\u65e0\u9650\u5185\u5b58</li> </ul>"},{"location":"ds1/#_1","title":"\u590d\u6742\u5ea6\u8ba1\u7b97","text":"<ul> <li>\u58f0\u660e\u7684\u590d\u6742\u5ea6\uff1a0\uff1b\u6bcf\u6761\u8d4b\u503c\u7684\u590d\u6742\u5ea6\uff1a1\uff1b\u6bcf\u6761\u5224\u65ad\u7684\u590d\u6742\u5ea6\uff1a1\uff1b\u5224\u65ad\u5206\u652f\uff1a\u8ba1\u7b97\u6240\u6709\u60c5\u51b5\u4e2d\u590d\u6742\u5ea6\u8f83\u5927\u8005\uff1breturn\u8fd4\u56de\u7684\u590d\u6742\u5ea6\uff1a1</li> <li>\u9012\u5f52\u7684\u590d\u6742\u5ea6\uff1a\u5982T(n) = T(n-1) + 2\u89e3\u5f97T(n) = 2n + 2</li> <li>\u5faa\u73af\u7684\u590d\u6742\u5ea6\uff1a\u6ce8\u610f\u9000\u51fa\u5faa\u73af\u7684 \u65f6\u5019\u8fd8\u6709\u4e00\u6b21\u5224\u65ad\u4f46\u4e0d\u8fd0\u884c</li> <li>\u603b\u6267\u884c\u6b21\u6570 = n+1+n*(\u5faa\u73af\u4f53\u4e2d\u8bed\u53e5\u6267\u884c\u6b21\u6570)   <code>void  add ( int  a[ ][ MAX_SIZE ],                     int  b[ ][ MAX_SIZE ],                     int  c[ ][ MAX_SIZE ],                    int  rows,  int  cols )   {     int  i,  j ;//\u58f0\u660e\u590d\u6742\u5ea6\u65e0     for ( i = 0; i &lt; rows; i++ )//\u5bf9\u4e8e\u8be5\u5faa\u73af\u4f53\uff0c\u590d\u6742\u5ea6\u4e3arows+1+rows(i\u7684\u5185\u90e8)           for ( j = 0; j &lt; cols; j++ )//\u5bf9\u4e8ei\u7684\u5185\u90e8\uff0c\u590d\u6742\u5ea6\u4e3acols+1+cols(j\u7684\u5185\u90e8)                 c[ i ][ j ] = a[ i ][ j ] + b[ i ][ j ];//j\u7684\u5185\u90e8=1   }</code></li> <li></li> </ul>"}]}